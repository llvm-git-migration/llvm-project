; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --check-attributes --check-globals all --version 5
; RUN: opt -S -passes=early-cse  < %s | FileCheck %s

declare i8 @baz(i8, i8) readnone
declare i8 @buz(i8, i8)
define i8 @same_parent_combine_diff_attrs(i8 %x, i8 %y) {
; CHECK-LABEL: define i8 @same_parent_combine_diff_attrs(
; CHECK-SAME: i8 [[X:%.*]], i8 [[Y:%.*]]) {
; CHECK-NEXT:    [[C1:%.*]] = call i8 @baz(i8 [[X]], i8 noundef [[Y]])
; CHECK-NEXT:    [[R:%.*]] = call i8 @buz(i8 [[C1]], i8 [[C1]])
; CHECK-NEXT:    ret i8 [[R]]
;
  %c1 = call i8 @baz(i8 %x, i8 noundef %y)
  %c0 = call i8 @baz(i8 noundef %x, i8 noundef %y)
  %r = call i8 @buz(i8 %c0, i8 %c1)
  ret i8 %r

}

define i8 @diff_parent_combine_diff_attrs(i1 %c, i8 %x, i8 %y) {
; CHECK-LABEL: define i8 @diff_parent_combine_diff_attrs(
; CHECK-SAME: i1 [[C:%.*]], i8 [[X:%.*]], i8 [[Y:%.*]]) {
; CHECK-NEXT:    [[C1:%.*]] = call i8 @baz(i8 [[X]], i8 noundef [[Y]])
; CHECK-NEXT:    br i1 [[C]], label %[[T:.*]], label %[[F:.*]]
; CHECK:       [[T]]:
; CHECK-NEXT:    [[R:%.*]] = call i8 @buz(i8 [[C1]], i8 [[C1]])
; CHECK-NEXT:    ret i8 [[R]]
; CHECK:       [[F]]:
; CHECK-NEXT:    [[R2:%.*]] = add i8 [[C1]], 4
; CHECK-NEXT:    ret i8 [[R2]]
;
  %c1 = call i8 @baz(i8 %x, i8 noundef %y)
  br i1 %c, label %T, label %F
T:
  %c0 = call i8 @baz(i8 noundef %x, i8 noundef %y)
  %r = call i8 @buz(i8 %c0, i8 %c1)
  ret i8 %r
F:
  %r2 = add i8 %c1, 4
  ret i8 %r2
}

define i8 @same_parent_combine_diff_attrs_todo(i8 %x, i8 %y) {
; CHECK-LABEL: define i8 @same_parent_combine_diff_attrs_todo(
; CHECK-SAME: i8 [[X:%.*]], i8 [[Y:%.*]]) {
; CHECK-NEXT:    [[C1:%.*]] = call i8 @baz(i8 [[X]], i8 noundef [[Y]])
; CHECK-NEXT:    [[C0:%.*]] = call i8 @baz(i8 noundef [[X]], i8 noundef [[Y]]) #[[ATTR1:[0-9]+]]
; CHECK-NEXT:    [[R:%.*]] = call i8 @buz(i8 [[C0]], i8 [[C1]])
; CHECK-NEXT:    ret i8 [[R]]
;
  %c1 = call i8 @baz(i8 %x, i8 noundef %y)
  %c0 = call i8 @baz(i8 noundef %x, i8 noundef %y) alwaysinline
  %r = call i8 @buz(i8 %c0, i8 %c1)
  ret i8 %r

}

define i8 @same_parent_combine_diff_attrs_fail(i8 %x, i8 %y) {
; CHECK-LABEL: define i8 @same_parent_combine_diff_attrs_fail(
; CHECK-SAME: i8 [[X:%.*]], i8 [[Y:%.*]]) {
; CHECK-NEXT:    [[C1:%.*]] = call i8 @baz(i8 [[X]], i8 noundef [[Y]])
; CHECK-NEXT:    [[C0:%.*]] = call i8 @baz(i8 noundef [[X]], i8 noundef [[Y]]) #[[ATTR2:[0-9]+]]
; CHECK-NEXT:    [[R:%.*]] = call i8 @buz(i8 [[C0]], i8 [[C1]])
; CHECK-NEXT:    ret i8 [[R]]
;
  %c1 = call i8 @baz(i8 %x, i8 noundef %y)
  %c0 = call i8 @baz(i8 noundef %x, i8 noundef %y) strictfp
  %r = call i8 @buz(i8 %c0, i8 %c1)
  ret i8 %r

}

define i8 @diff_parent_combine_diff_attrs_todo(i1 %c, i8 %x, i8 %y) {
; CHECK-LABEL: define i8 @diff_parent_combine_diff_attrs_todo(
; CHECK-SAME: i1 [[C:%.*]], i8 [[X:%.*]], i8 [[Y:%.*]]) {
; CHECK-NEXT:    [[C1:%.*]] = call i8 @baz(i8 [[X]], i8 noundef [[Y]])
; CHECK-NEXT:    br i1 [[C]], label %[[T:.*]], label %[[F:.*]]
; CHECK:       [[T]]:
; CHECK-NEXT:    [[C0:%.*]] = call i8 @baz(i8 noundef [[X]], i8 noundef [[Y]]) #[[ATTR3:[0-9]+]]
; CHECK-NEXT:    [[R:%.*]] = call i8 @buz(i8 [[C0]], i8 [[C1]])
; CHECK-NEXT:    ret i8 [[R]]
; CHECK:       [[F]]:
; CHECK-NEXT:    [[R2:%.*]] = add i8 [[C1]], 4
; CHECK-NEXT:    ret i8 [[R2]]
;
  %c1 = call i8 @baz(i8 %x, i8 noundef %y)
  br i1 %c, label %T, label %F
T:
  %c0 = call i8 @baz(i8 noundef %x, i8 noundef %y) optnone noinline
  %r = call i8 @buz(i8 %c0, i8 %c1)
  ret i8 %r
F:
  %r2 = add i8 %c1, 4
  ret i8 %r2
}

define i8 @diff_parent_combine_diff_attrs_fail(i1 %c, i8 %x, i8 %y) {
; CHECK-LABEL: define i8 @diff_parent_combine_diff_attrs_fail(
; CHECK-SAME: i1 [[C:%.*]], i8 [[X:%.*]], i8 [[Y:%.*]]) {
; CHECK-NEXT:    [[C1:%.*]] = call i8 @baz(i8 [[X]], i8 noundef [[Y]])
; CHECK-NEXT:    br i1 [[C]], label %[[T:.*]], label %[[F:.*]]
; CHECK:       [[T]]:
; CHECK-NEXT:    [[C0:%.*]] = call i8 @baz(i8 noundef [[X]], i8 noundef [[Y]]) #[[ATTR2]]
; CHECK-NEXT:    [[R:%.*]] = call i8 @buz(i8 [[C0]], i8 [[C1]])
; CHECK-NEXT:    ret i8 [[R]]
; CHECK:       [[F]]:
; CHECK-NEXT:    [[R2:%.*]] = add i8 [[C1]], 4
; CHECK-NEXT:    ret i8 [[R2]]
;
  %c1 = call i8 @baz(i8 %x, i8 noundef %y)
  br i1 %c, label %T, label %F
T:
  %c0 = call i8 @baz(i8 noundef %x, i8 noundef %y) strictfp
  %r = call i8 @buz(i8 %c0, i8 %c1)
  ret i8 %r
F:
  %r2 = add i8 %c1, 4
  ret i8 %r2
}
;.
; CHECK: attributes #[[ATTR0:[0-9]+]] = { memory(none) }
; CHECK: attributes #[[ATTR1]] = { alwaysinline }
; CHECK: attributes #[[ATTR2]] = { strictfp }
; CHECK: attributes #[[ATTR3]] = { noinline optnone }
;.
