; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 5
; RUN: opt -passes=sandbox-vectorizer -mtriple=x86_64-- -mattr=+sse4.1 %s -S | FileCheck %s

define void @simple_cost_test(ptr %ptr) {
; CHECK-LABEL: define void @simple_cost_test(
; CHECK-SAME: ptr [[PTR:%.*]]) #[[ATTR0:[0-9]+]] {
; CHECK-NEXT:    [[PTR0:%.*]] = getelementptr double, ptr [[PTR]], i32 0
; CHECK-NEXT:    [[VECL:%.*]] = load <2 x double>, ptr [[PTR0]], align 8
; CHECK-NEXT:    store <2 x double> [[VECL]], ptr [[PTR0]], align 8
; CHECK-NEXT:    ret void
;
  %ptr0 = getelementptr double, ptr %ptr, i32 0
  %ptr1 = getelementptr double, ptr %ptr, i32 1
  %ld0 = load double, ptr %ptr0
  %ld1 = load double, ptr %ptr1
  store double %ld0, ptr %ptr0
  store double %ld1, ptr %ptr1
  ret void
}

define void @pack_cost_test_(ptr %ptr) {
; CHECK-LABEL: define void @pack_cost_test_(
; CHECK-SAME: ptr [[PTR:%.*]]) #[[ATTR0]] {
; CHECK-NEXT:    [[PTR0:%.*]] = getelementptr float, ptr [[PTR]], i32 0
; CHECK-NEXT:    [[PTR1:%.*]] = getelementptr float, ptr [[PTR]], i32 1
; CHECK-NEXT:    [[LD0:%.*]] = load float, ptr [[PTR0]], align 4
; CHECK-NEXT:    [[LD1:%.*]] = load float, ptr [[PTR1]], align 4
; CHECK-NEXT:    [[PACK4:%.*]] = insertelement <4 x float> poison, float [[LD0]], i32 0
; CHECK-NEXT:    [[PACK5:%.*]] = insertelement <4 x float> [[PACK4]], float [[LD1]], i32 1
; CHECK-NEXT:    [[PACK6:%.*]] = insertelement <4 x float> [[PACK5]], float [[LD0]], i32 2
; CHECK-NEXT:    [[PACK7:%.*]] = insertelement <4 x float> [[PACK6]], float [[LD1]], i32 3
; CHECK-NEXT:    [[PACK:%.*]] = insertelement <4 x float> poison, float [[LD0]], i32 0
; CHECK-NEXT:    [[PACK1:%.*]] = insertelement <4 x float> [[PACK]], float [[LD1]], i32 1
; CHECK-NEXT:    [[PACK2:%.*]] = insertelement <4 x float> [[PACK1]], float [[LD0]], i32 2
; CHECK-NEXT:    [[PACK3:%.*]] = insertelement <4 x float> [[PACK2]], float [[LD1]], i32 3
; CHECK-NEXT:    [[VEC:%.*]] = fmul <4 x float> [[PACK3]], [[PACK7]]
; CHECK-NEXT:    store <4 x float> [[VEC]], ptr [[PTR0]], align 4
; CHECK-NEXT:    ret void
;
  %ptr0 = getelementptr float, ptr %ptr, i32 0
  %ptr1 = getelementptr float, ptr %ptr, i32 1
  %ptr2 = getelementptr float, ptr %ptr, i32 2
  %ptr3 = getelementptr float, ptr %ptr, i32 3
  %ld0 = load float, ptr %ptr0
  %ld1 = load float, ptr %ptr1
  %mul0 = fmul float %ld0, %ld0
  %mul1 = fmul float %ld1, %ld1
  %mul2 = fmul float %ld0, %ld0
  %mul3 = fmul float %ld1, %ld1
  store float %mul0, ptr %ptr0
  store float %mul1, ptr %ptr1
  store float %mul2, ptr %ptr2
  store float %mul3, ptr %ptr3
  ret void
}
