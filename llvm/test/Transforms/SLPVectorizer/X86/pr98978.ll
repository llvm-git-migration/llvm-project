; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 5
; RUN: opt -S -passes=slp-vectorizer < %s | FileCheck %s

target triple = "x86_64-redhat-linux-gnu"

define void @test(ptr %arg, i64 %arg1, i64 %arg2) {
; CHECK-LABEL: define void @test(
; CHECK-SAME: ptr [[ARG:%.*]], i64 [[ARG1:%.*]], i64 [[ARG2:%.*]]) {
; CHECK-NEXT:  [[ENTRY:.*]]:
; CHECK-NEXT:    br label %[[LOOP1:.*]]
; CHECK:       [[LOOP1]]:
; CHECK-NEXT:    [[I:%.*]] = phi ptr [ [[I21:%.*]], %[[BB20:.*]] ], [ null, %[[ENTRY]] ]
; CHECK-NEXT:    br i1 false, label %[[BB22:.*]], label %[[DOTPREHEADER48_PREHEADER:.*]]
; CHECK:       [[_PREHEADER48_PREHEADER:.*:]]
; CHECK-NEXT:    br [[DOTLOOPEXIT49:label %.*]]
; CHECK:       [[DEAD:.*]]:
; CHECK-NEXT:    br [[DOTLOOPEXIT49]]
; CHECK:       [[_LOOPEXIT49:.*:]]
; CHECK-NEXT:    [[I5:%.*]] = phi ptr [ [[I]], %[[DEAD]] ], [ [[I]], %[[DOTPREHEADER48_PREHEADER]] ]
; CHECK-NEXT:    br label %[[DOTPREHEADER48_PREHEADER_1:.*]]
; CHECK:       [[_PREHEADER48_PREHEADER_1:.*:]]
; CHECK-NEXT:    br [[DOTLOOPEXIT49_1:label %.*]]
; CHECK:       [[_LOOPEXIT42_1:.*:]]
; CHECK-NEXT:    br i1 false, [[DOTLOOPEXIT49_1]], label %[[BB20]]
; CHECK:       [[_LOOPEXIT49_1:.*:]]
; CHECK-NEXT:    [[I6:%.*]] = phi ptr [ [[I5]], [[DOTLOOPEXIT42_1:%.*]] ], [ [[I5]], %[[DOTPREHEADER48_PREHEADER_1]] ]
; CHECK-NEXT:    [[I7:%.*]] = getelementptr inbounds i8, ptr [[I6]], i64 [[ARG1]]
; CHECK-NEXT:    br label %[[BB8:.*]]
; CHECK:       [[BB8]]:
; CHECK-NEXT:    br label %[[BB10:.*]]
; CHECK:       [[DEAD2:.*]]:
; CHECK-NEXT:    br label %[[BB10]]
; CHECK:       [[BB10]]:
; CHECK-NEXT:    [[I11:%.*]] = phi ptr [ [[I7]], %[[BB8]] ], [ null, %[[DEAD2]] ]
; CHECK-NEXT:    br label %[[BB13:.*]]
; CHECK:       [[BB13]]:
; CHECK-NEXT:    [[I14:%.*]] = phi ptr [ [[ARG]], %[[BB13]] ], [ [[I11]], %[[BB10]] ]
; CHECK-NEXT:    [[I15:%.*]] = phi ptr [ null, %[[BB13]] ], [ [[I6]], %[[BB10]] ]
; CHECK-NEXT:    [[TMP0:%.*]] = load <2 x i64>, ptr [[I14]], align 1
; CHECK-NEXT:    [[TMP1:%.*]] = shufflevector <2 x i64> [[TMP0]], <2 x i64> poison, <2 x i32> <i32 1, i32 0>
; CHECK-NEXT:    store <2 x i64> [[TMP1]], ptr [[I15]], align 1
; CHECK-NEXT:    br i1 false, label %[[BB13]], label %[[BB20]]
; CHECK:       [[BB20]]:
; CHECK-NEXT:    [[I21]] = phi ptr [ [[I5]], [[DOTLOOPEXIT42_1]] ], [ [[I6]], %[[BB13]] ]
; CHECK-NEXT:    br label %[[LOOP1]]
; CHECK:       [[BB22]]:
; CHECK-NEXT:    [[I23:%.*]] = getelementptr inbounds i8, ptr [[I]], i64 [[ARG2]]
; CHECK-NEXT:    [[I25:%.*]] = getelementptr inbounds i8, ptr [[I23]], i64 8
; CHECK-NEXT:    br label %[[BB26:.*]]
; CHECK:       [[BB26]]:
; CHECK-NEXT:    [[I27:%.*]] = phi ptr [ null, %[[BB26]] ], [ [[I25]], %[[BB22]] ]
; CHECK-NEXT:    store i64 0, ptr [[I27]], align 1
; CHECK-NEXT:    [[I28:%.*]] = getelementptr inbounds i8, ptr [[I27]], i64 8
; CHECK-NEXT:    [[I29:%.*]] = load i64, ptr [[I23]], align 1
; CHECK-NEXT:    store i64 0, ptr [[I28]], align 1
; CHECK-NEXT:    br label %[[BB26]]
;
entry:
  br label %loop1

loop1:                                            ; preds = %bb20, %entry
  %i = phi ptr [ %i21, %bb20 ], [ null, %entry ]
  br i1 false, label %bb22, label %.preheader48.preheader

.preheader48.preheader:                           ; preds = %loop1
  br label %.loopexit49

dead:                                             ; No predecessors!
  br label %.loopexit49

.loopexit49:                                      ; preds = %dead, %.preheader48.preheader
  %i5 = phi ptr [ %i, %dead ], [ %i, %.preheader48.preheader ]
  br label %.preheader48.preheader.1

.preheader48.preheader.1:                         ; preds = %.loopexit49
  br label %.loopexit49.1

.loopexit42.1:                                    ; No predecessors!
  br i1 false, label %.loopexit49.1, label %bb20

.loopexit49.1:                                    ; preds = %.loopexit42.1, %.preheader48.preheader.1
  %i6 = phi ptr [ %i5, %.loopexit42.1 ], [ %i5, %.preheader48.preheader.1 ]
  %i7 = getelementptr inbounds i8, ptr %i6, i64 %arg1
  br label %bb8

bb8:                                              ; preds = %.loopexit49.1
  br label %bb10

dead2:                                            ; No predecessors!
  br label %bb10

bb10:                                             ; preds = %dead2, %bb8
  %i11 = phi ptr [ %i7, %bb8 ], [ null, %dead2 ]
  br label %bb13

bb13:                                             ; preds = %bb13, %bb10
  %i14 = phi ptr [ %arg, %bb13 ], [ %i11, %bb10 ]
  %i15 = phi ptr [ null, %bb13 ], [ %i6, %bb10 ]
  %i16 = getelementptr inbounds i8, ptr %i14, i64 8
  %i17 = load i64, ptr %i16, align 1
  store i64 %i17, ptr %i15, align 1
  %i18 = getelementptr inbounds i8, ptr %i15, i64 8
  %i19 = load i64, ptr %i14, align 1
  store i64 %i19, ptr %i18, align 1
  br i1 false, label %bb13, label %bb20

bb20:                                             ; preds = %bb13, %.loopexit42.1
  %i21 = phi ptr [ %i5, %.loopexit42.1 ], [ %i6, %bb13 ]
  br label %loop1

bb22:                                             ; preds = %loop1
  %i23 = getelementptr inbounds i8, ptr %i, i64 %arg2
  %i25 = getelementptr inbounds i8, ptr %i23, i64 8
  br label %bb26

bb26:                                             ; preds = %bb26, %bb22
  %i27 = phi ptr [ null, %bb26 ], [ %i25, %bb22 ]
  store i64 0, ptr %i27, align 1
  %i28 = getelementptr inbounds i8, ptr %i27, i64 8
  %i29 = load i64, ptr %i23, align 1
  store i64 0, ptr %i28, align 1
  br label %bb26
}
