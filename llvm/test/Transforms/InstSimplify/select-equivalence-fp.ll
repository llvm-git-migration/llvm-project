; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt < %s -passes=instsimplify -S | FileCheck %s

define float @select_fcmp_fsub_oeq(float %x, float %y) {
; CHECK-LABEL: @select_fcmp_fsub_oeq(
; CHECK-NEXT:    ret float 0.000000e+00
;
  %fcmp = fcmp oeq float %y, 2.
  %fadd = fsub float %y, 2.
  %sel = select i1 %fcmp, float %fadd, float 0.
  ret float %sel
}

define float @select_fcmp_fsub_oeq_zero(float %x, float %y) {
; CHECK-LABEL: @select_fcmp_fsub_oeq_zero(
; CHECK-NEXT:    [[FCMP:%.*]] = fcmp oeq float [[Y:%.*]], 0.000000e+00
; CHECK-NEXT:    [[FADD:%.*]] = fsub float [[Y]], 2.000000e+00
; CHECK-NEXT:    [[SEL:%.*]] = select i1 [[FCMP]], float [[FADD]], float 2.000000e+00
; CHECK-NEXT:    ret float [[SEL]]
;
  %fcmp = fcmp oeq float %y, 0.
  %fadd = fsub float %y, 2.
  %sel = select i1 %fcmp, float %fadd, float 2.
  ret float %sel
}

define float @select_fcmp_fsub_ueq(float %x, float %y) {
; CHECK-LABEL: @select_fcmp_fsub_ueq(
; CHECK-NEXT:    [[FCMP:%.*]] = fcmp ueq float [[Y:%.*]], 2.000000e+00
; CHECK-NEXT:    [[FADD:%.*]] = fsub float [[Y]], 2.000000e+00
; CHECK-NEXT:    [[SEL:%.*]] = select i1 [[FCMP]], float [[FADD]], float 0.000000e+00
; CHECK-NEXT:    ret float [[SEL]]
;
  %fcmp = fcmp ueq float %y, 2.
  %fadd = fsub float %y, 2.
  %sel = select i1 %fcmp, float %fadd, float 0.
  ret float %sel
}

define float @select_fcmp_fsub_ueq_nnan(float %x, float %y) {
; CHECK-LABEL: @select_fcmp_fsub_ueq_nnan(
; CHECK-NEXT:    ret float 0.000000e+00
;
  %fcmp = fcmp nnan ueq float %y, 2.
  %fadd = fsub float %y, 2.
  %sel = select i1 %fcmp, float %fadd, float 0.
  ret float %sel
}

define float @select_fcmp_fsub_une(float %x, float %y) {
; CHECK-LABEL: @select_fcmp_fsub_une(
; CHECK-NEXT:    ret float 0.000000e+00
;
  %fcmp = fcmp une float %y, 2.
  %fadd = fsub float %y, 2.
  %sel = select i1 %fcmp, float 0., float %fadd
  ret float %sel
}

define float @select_fcmp_fsub_une_zero(float %x, float %y) {
; CHECK-LABEL: @select_fcmp_fsub_une_zero(
; CHECK-NEXT:    [[FCMP:%.*]] = fcmp une float [[Y:%.*]], 0.000000e+00
; CHECK-NEXT:    [[FADD:%.*]] = fsub float [[Y]], 2.000000e+00
; CHECK-NEXT:    [[SEL:%.*]] = select i1 [[FCMP]], float 2.000000e+00, float [[FADD]]
; CHECK-NEXT:    ret float [[SEL]]
;
  %fcmp = fcmp une float %y, 0.
  %fadd = fsub float %y, 2.
  %sel = select i1 %fcmp, float 2., float %fadd
  ret float %sel
}

define float @select_fcmp_fsub_one(float %x, float %y) {
; CHECK-LABEL: @select_fcmp_fsub_one(
; CHECK-NEXT:    [[FCMP:%.*]] = fcmp one float [[Y:%.*]], 2.000000e+00
; CHECK-NEXT:    [[FADD:%.*]] = fsub float [[Y]], 2.000000e+00
; CHECK-NEXT:    [[SEL:%.*]] = select i1 [[FCMP]], float 0.000000e+00, float [[FADD]]
; CHECK-NEXT:    ret float [[SEL]]
;
  %fcmp = fcmp one float %y, 2.
  %fadd = fsub float %y, 2.
  %sel = select i1 %fcmp, float 0., float %fadd
  ret float %sel
}

define float @select_fcmp_fsub_one_nnan(float %x, float %y) {
; CHECK-LABEL: @select_fcmp_fsub_one_nnan(
; CHECK-NEXT:    ret float 0.000000e+00
;
  %fcmp = fcmp nnan one float %y, 2.
  %fadd = fsub float %y, 2.
  %sel = select i1 %fcmp, float 0., float %fadd
  ret float %sel
}

define float @select_fcmp_fadd(float %x, float %y) {
; CHECK-LABEL: @select_fcmp_fadd(
; CHECK-NEXT:    ret float 4.000000e+00
;
  %fcmp = fcmp oeq float %y, 2.
  %fadd = fadd float %y, 2.
  %sel = select i1 %fcmp, float %fadd, float 4.
  ret float %sel
}

define <2 x float> @select_fcmp_fadd_vec(<2 x float> %x, <2 x float> %y) {
; CHECK-LABEL: @select_fcmp_fadd_vec(
; CHECK-NEXT:    ret <2 x float> splat (float 4.000000e+00)
;
  %fcmp = fcmp oeq <2 x float> %y, <float 2., float 2.>
  %fadd = fadd <2 x float> %y, <float 2., float 2.>
  %sel = select <2 x i1> %fcmp, <2 x float> %fadd, <2 x float> <float 4., float 4.>
  ret <2 x float> %sel
}


define float @select_fcmp_fdiv(float %x, float %y) {
; CHECK-LABEL: @select_fcmp_fdiv(
; CHECK-NEXT:    ret float 1.000000e+00
;
  %fcmp = fcmp oeq float %y, 2.
  %fdiv = fdiv float %y, 2.
  %sel = select i1 %fcmp, float %fdiv, float 1.
  ret float %sel
}

define float @select_fcmp_frem(float %x, float %y) {
; CHECK-LABEL: @select_fcmp_frem(
; CHECK-NEXT:    ret float 1.000000e+00
;
  %fcmp = fcmp oeq float %y, 3.
  %frem = frem float %y, 2.
  %sel = select i1 %fcmp, float %frem, float 1.
  ret float %sel
}

define <2 x float> @select_fcmp_insertelement(<2 x float> %x, <2 x float> %y) {
; CHECK-LABEL: @select_fcmp_insertelement(
; CHECK-NEXT:    ret <2 x float> <float 4.000000e+00, float 2.000000e+00>
;
  %fcmp = fcmp oeq <2 x float> %y, <float 2., float 2.>
  %insert = insertelement <2 x float> %y, float 4., i64 0
  %sel = select <2 x i1> %fcmp, <2 x float> %insert, <2 x float> <float 4., float 2.>
  ret <2 x float> %sel
}

define <4 x float> @select_fcmp_shufflevector_select(<4 x float> %x, <4 x float> %y) {
; CHECK-LABEL: @select_fcmp_shufflevector_select(
; CHECK-NEXT:    ret <4 x float> <float poison, float 2.000000e+00, float poison, float 2.000000e+00>
;
  %fcmp = fcmp oeq <4 x float> %y, <float 2., float 2., float 2., float 2.>
  %shuffle = shufflevector <4 x float> %y, <4 x float> poison, <4 x i32> <i32 4, i32 1, i32 6, i32 3>
  %sel = select <4 x i1> %fcmp, <4 x float> %shuffle, <4 x float> <float poison, float 2., float poison, float 2.>
  ret <4 x float> %sel
}

