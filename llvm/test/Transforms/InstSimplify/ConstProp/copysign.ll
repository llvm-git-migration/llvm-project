; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt -S -passes=instsimplify < %s | FileCheck %s

declare float @llvm.copysign.f32(float, float)
declare double @llvm.copysign.f64(double, double)
declare bfloat @llvm.copysign.bf16(bfloat, bfloat)
declare fp128 @llvm.copysign.f128(fp128, fp128)
declare ppc_fp128 @llvm.copysign.ppcf128(ppc_fp128, ppc_fp128)

define float @f32_01() {
; CHECK-LABEL: @f32_01(
; CHECK-NEXT:    ret float -1.000000e+00
;
  %x = call float @llvm.copysign.f32(float 1.0, float -2.0)
  ret float %x
}

define float @f32_02() {
; CHECK-LABEL: @f32_02(
; CHECK-NEXT:    ret float 2.000000e+00
;
  %x = call float @llvm.copysign.f32(float -2.0, float 1.0)
  ret float %x
}

define float @f32_03() {
; CHECK-LABEL: @f32_03(
; CHECK-NEXT:    ret float -2.000000e+00
;
  %x = call float @llvm.copysign.f32(float -2.0, float -1.0)
  ret float %x
}

define double @f64_01() {
; CHECK-LABEL: @f64_01(
; CHECK-NEXT:    ret double -1.000000e+00
;
  %x = call double @llvm.copysign.f64(double 1.0, double -2.0)
  ret double %x
}

define double @f64_02() {
; CHECK-LABEL: @f64_02(
; CHECK-NEXT:    ret double 1.000000e+00
;
  %x = call double @llvm.copysign.f64(double -1.0, double 2.0)
  ret double %x
}

define double @f64_03() {
; CHECK-LABEL: @f64_03(
; CHECK-NEXT:    ret double -1.000000e+00
;
  %x = call double @llvm.copysign.f64(double -1.0, double -2.0)
  ret double %x
}

define bfloat @bf16_01() {
; CHECK-LABEL: @bf16_01(
; CHECK-NEXT:    ret bfloat f0xBF80
;
  %x = call bfloat @llvm.copysign.bf16(bfloat 1.0, bfloat -2.0)
  ret bfloat %x
}

define bfloat @bf16_02() {
; CHECK-LABEL: @bf16_02(
; CHECK-NEXT:    ret bfloat f0x4000
;
  %x = call bfloat @llvm.copysign.bf16(bfloat -2.0, bfloat 1.0)
  ret bfloat %x
}

define bfloat @bf16_03() {
; CHECK-LABEL: @bf16_03(
; CHECK-NEXT:    ret bfloat f0xC000
;
  %x = call bfloat @llvm.copysign.bf16(bfloat -2.0, bfloat -1.0)
  ret bfloat %x
}

define fp128 @f128_01() {
; CHECK-LABEL: @f128_01(
; CHECK-NEXT:    ret fp128 f0x80000000000000010000000000000000
;
  %x = call fp128 @llvm.copysign.f128(fp128 f0x00000000000000010000000000000000, fp128 f0x80000000000000020000000000000000)
  ret fp128 %x
}

define fp128 @f128_02() {
; CHECK-LABEL: @f128_02(
; CHECK-NEXT:    ret fp128 f0x00000000000000030000000000000000
;
  %x = call fp128 @llvm.copysign.f128(fp128 f0x80000000000000030000000000000000, fp128 f0x00000000000000040000000000000000)
  ret fp128 %x
}

define fp128 @f128_03() {
; CHECK-LABEL: @f128_03(
; CHECK-NEXT:    ret fp128 f0x80000000000000050000000000000000
;
  %x = call fp128 @llvm.copysign.f128(fp128 f0x80000000000000050000000000000000, fp128 f0x80000000000000060000000000000000)
  ret fp128 %x
}

define ppc_fp128 @ppc128_01() {
; CHECK-LABEL: @ppc128_01(
; CHECK-NEXT:    ret ppc_fp128 f0x80000000000000018000000000000000
;
  %x = call ppc_fp128 @llvm.copysign.ppcf128(ppc_fp128 f0x00000000000000010000000000000000, ppc_fp128 f0x00000000000000028000000000000000)
  ret ppc_fp128 %x
}

define ppc_fp128 @ppc128_02() {
; CHECK-LABEL: @ppc128_02(
; CHECK-NEXT:    ret ppc_fp128 f0x80000000000000030000000000000000
;
  %x = call ppc_fp128 @llvm.copysign.ppcf128(ppc_fp128 f0x00000000000000038000000000000000, ppc_fp128 f0x00000000000000040000000000000000)
  ret ppc_fp128 %x
}

define ppc_fp128 @ppc128_03() {
; CHECK-LABEL: @ppc128_03(
; CHECK-NEXT:    ret ppc_fp128 f0x00000000000000058000000000000000
;
  %x = call ppc_fp128 @llvm.copysign.ppcf128(ppc_fp128 f0x00000000000000058000000000000000, ppc_fp128 f0x00000000000000068000000000000000)
  ret ppc_fp128 %x
}
