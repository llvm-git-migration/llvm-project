; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --include-generated-funcs --version 5
; RUN: opt -p mergefunc -S %s | FileCheck %s

define weak_odr hidden void @weak_odr_caller_of_foo_1(ptr %p) {
entry:
  tail call void @foo(ptr %p)
  tail call void @foo(ptr %p)
  tail call void @foo(ptr %p)
  ret void
}

define weak_odr hidden void @weak_odr_caller_of_foo_2(ptr %p) {
entry:
  tail call void @foo(ptr %p)
  tail call void @foo(ptr %p)
  tail call void @foo(ptr %p)
  ret void
}

declare void @foo(ptr)

define hidden void @weak_odr_caller_of_bar_1(ptr %p) {
entry:
  tail call void @bar(ptr %p)
  tail call void @bar(ptr %p)
  tail call void @bar(ptr %p)
  ret void
}

define weak_odr hidden void @non_weak_caller_of_bar_2(ptr %p) {
entry:
  tail call void @bar(ptr %p)
  tail call void @bar(ptr %p)
  tail call void @bar(ptr %p)
  ret void
}

declare void @bar(ptr)

define hidden void @non_weak_caller_of_zar_1(ptr %p) {
entry:
  tail call void @zar(ptr %p)
  tail call void @zar(ptr %p)
  tail call void @zar(ptr %p)
  ret void
}

define weak_odr hidden void @weak_odr_caller_of_zar_2(ptr %p) {
entry:
  tail call void @zar(ptr %p)
  tail call void @zar(ptr %p)
  tail call void @zar(ptr %p)
  ret void
}

declare void @zar(ptr)
; CHECK-LABEL: define weak_odr hidden void @weak_odr_caller_of_foo_1(
; CHECK-SAME: ptr [[P:%.*]]) {
; CHECK-NEXT:  [[ENTRY:.*:]]
; CHECK-NEXT:    tail call void @foo(ptr [[P]])
; CHECK-NEXT:    tail call void @foo(ptr [[P]])
; CHECK-NEXT:    tail call void @foo(ptr [[P]])
; CHECK-NEXT:    ret void
;
;
; CHECK-LABEL: define weak_odr hidden void @non_weak_caller_of_bar_2(
; CHECK-SAME: ptr [[P:%.*]]) {
; CHECK-NEXT:  [[ENTRY:.*:]]
; CHECK-NEXT:    tail call void @bar(ptr [[P]])
; CHECK-NEXT:    tail call void @bar(ptr [[P]])
; CHECK-NEXT:    tail call void @bar(ptr [[P]])
; CHECK-NEXT:    ret void
;
;
; CHECK-LABEL: define hidden void @non_weak_caller_of_zar_1(
; CHECK-SAME: ptr [[P:%.*]]) {
; CHECK-NEXT:  [[ENTRY:.*:]]
; CHECK-NEXT:    tail call void @zar(ptr [[P]])
; CHECK-NEXT:    tail call void @zar(ptr [[P]])
; CHECK-NEXT:    tail call void @zar(ptr [[P]])
; CHECK-NEXT:    ret void
;
;
; CHECK-LABEL: define weak_odr hidden void @weak_odr_caller_of_foo_2(
; CHECK-SAME: ptr [[TMP0:%.*]]) {
; CHECK-NEXT:    tail call void @weak_odr_caller_of_foo_1(ptr [[TMP0]])
; CHECK-NEXT:    ret void
;
;
; CHECK-LABEL: define hidden void @weak_odr_caller_of_bar_1(
; CHECK-SAME: ptr [[TMP0:%.*]]) {
; CHECK-NEXT:    tail call void @non_weak_caller_of_bar_2(ptr [[TMP0]])
; CHECK-NEXT:    ret void
;
;
; CHECK-LABEL: define weak_odr hidden void @weak_odr_caller_of_zar_2(
; CHECK-SAME: ptr [[TMP0:%.*]]) {
; CHECK-NEXT:    tail call void @non_weak_caller_of_zar_1(ptr [[TMP0]])
; CHECK-NEXT:    ret void
;
