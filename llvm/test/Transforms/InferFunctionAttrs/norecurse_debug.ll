; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 5
; RUN: opt < %s -O2 -S | FileCheck %s

target datalayout = "e-m:e-p:32:32-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armv4t-none-unknown-eabi"

@foo.coefficient1 = internal unnamed_addr global ptr null, align 4, !dbg !0
@iirLow1 = external dso_local local_unnamed_addr global ptr, align 4

; Function Attrs: nounwind
define dso_local void @foo(i32 %i2) local_unnamed_addr #0 !dbg !2 {
; CHECK-LABEL: define dso_local void @foo(
; CHECK-SAME: i32 [[I2:%.*]]) local_unnamed_addr #[[ATTR0:[0-9]+]] !dbg [[DBG6:![0-9]+]] {
; CHECK-NEXT:  [[ENTRY:.*:]]
; CHECK-NEXT:      #dbg_value(i32 [[I2]], [[META11:![0-9]+]], !DIExpression(), [[META18:![0-9]+]])
; CHECK-NEXT:    [[TMP0:%.*]] = load ptr, ptr @iirLow1, align 4, !dbg [[DBG19:![0-9]+]]
; CHECK-NEXT:    store i32 0, ptr [[TMP0]], align 4, !dbg [[DBG20:![0-9]+]]
; CHECK-NEXT:    ret void, !dbg [[DBG21:![0-9]+]]
;
entry:
  call void @llvm.dbg.value(metadata i32 %i2, metadata !11, metadata !DIExpression()), !dbg !18
  %0 = load ptr, ptr @iirLow1, align 4, !dbg !19
  store i32 0, ptr %0, align 4, !dbg !24
  %1 = ptrtoint ptr %0 to i32, !dbg !27
  store i32 %1, ptr @foo.coefficient1, align 4, !dbg !28
  ret void, !dbg !29
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { nounwind }
attributes #1 = { nounwind readnone speculatable }

!llvm.dbg.cu = !{!7}
!llvm.module.flags = !{!13, !14, !15, !16}
!llvm.ident = !{!17}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "coefficient1", scope: !2, file: !3, line: 5, type: !12, isLocal: true, isDefinition: true)
!2 = distinct !DISubprogram(name: "foo", scope: !3, file: !3, line: 3, type: !4, isLocal: false, isDefinition: true, scopeLine: 4, flags: DIFlagPrototyped, isOptimized: true, unit: !7, retainedNodes: !10)
!3 = !DIFile(filename: "norecurse_debug.c", directory: "/")
!4 = !DISubroutineType(types: !5)
!5 = !{null, !6}
!6 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!7 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !8, globals: !9, nameTableKind: None)
!8 = !{}
!9 = !{!0}
!10 = !{!11}
!11 = !DILocalVariable(name: "i2", arg: 1, scope: !2, file: !3, line: 3, type: !6)
!12 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6, size: 32)
!13 = !{i32 2, !"Dwarf Version", i32 4}
!14 = !{i32 2, !"Debug Info Version", i32 3}
!15 = !{i32 1, !"wchar_size", i32 4}
!16 = !{i32 1, !"min_enum_size", i32 4}
!17 = !{!""}
!18 = !DILocation(line: 3, column: 14, scope: !2)
!19 = !DILocation(line: 7, column: 6, scope: !2)
!24 = !DILocation(line: 7, column: 14, scope: !2)
!27 = !DILocation(line: 9, column: 20, scope: !2)
!28 = !DILocation(line: 9, column: 18, scope: !2)
!29 = !DILocation(line: 10, column: 1, scope: !2)

; CHECK: attributes #0 = { mustprogress nofree norecurse nosync nounwind willreturn memory(readwrite, argmem: write, inaccessiblemem: none) }
; CHECK-NOT: foo.coefficient1
;.
; CHECK: [[META0:![0-9]+]] = distinct !DICompileUnit(language: DW_LANG_C99, file: [[META1:![0-9]+]], isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: [[META2:![0-9]+]], globals: [[META3:![0-9]+]], nameTableKind: None)
; CHECK: [[META1]] = !DIFile(filename: "norecurse_debug.c", directory: {{.*}})
; CHECK: [[META2]] = !{}
; CHECK: [[META3]] = !{[[META4:![0-9]+]]}
; CHECK: [[META4]] = !DIGlobalVariableExpression(var: [[META5:![0-9]+]], expr: !DIExpression())
; CHECK: [[META5]] = distinct !DIGlobalVariable(name: "coefficient1", scope: [[DBG6]], file: [[META1]], line: 5, type: [[META12:![0-9]+]], isLocal: true, isDefinition: true)
; CHECK: [[DBG6]] = distinct !DISubprogram(name: "foo", scope: [[META1]], file: [[META1]], line: 3, type: [[META7:![0-9]+]], scopeLine: 4, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: [[META0]], retainedNodes: [[META10:![0-9]+]])
; CHECK: [[META7]] = !DISubroutineType(types: [[META8:![0-9]+]])
; CHECK: [[META8]] = !{null, [[META9:![0-9]+]]}
; CHECK: [[META9]] = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
; CHECK: [[META10]] = !{[[META11]]}
; CHECK: [[META11]] = !DILocalVariable(name: "i2", arg: 1, scope: [[DBG6]], file: [[META1]], line: 3, type: [[META9]])
; CHECK: [[META12]] = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: [[META9]], size: 32)
; CHECK: [[META18]] = !DILocation(line: 3, column: 14, scope: [[DBG6]])
; CHECK: [[DBG19]] = !DILocation(line: 7, column: 6, scope: [[DBG6]])
; CHECK: [[DBG20]] = !DILocation(line: 7, column: 14, scope: [[DBG6]])
; CHECK: [[DBG21]] = !DILocation(line: 10, column: 1, scope: [[DBG6]])
;.
