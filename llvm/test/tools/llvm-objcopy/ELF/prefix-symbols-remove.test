# RUN: yaml2obj %s -o %t
# RUN: llvm-objcopy --remove-prefix-symbols __pf_ %t %t2
# RUN: llvm-readobj --symbols %t2 | FileCheck %s

## Show that an empty string is permitted as the argument to
## --remove-prefix-symbols.
# RUN: llvm-objcopy --remove-prefix-symbols= %t2 %t3
# RUN: cmp %t2 %t3

## When both options are present, llvm-objcopy should remove
## prefixes first, before adding prefixes.
# RUN: llvm-objcopy --prefix-symbols=AAA --remove-prefix-symbols=AAA %t %t4
# RUN: llvm-objcopy --prefix-symbols=AAA %t %t5
# RUN: cmp %t4 %t5

!ELF
FileHeader:
  Class:           ELFCLASS64
  Data:            ELFDATA2LSB
  Type:            ET_REL
  Machine:         EM_X86_64
Sections:
  - Name:            .text
    Type:            SHT_PROGBITS
    Flags:           [ SHF_ALLOC, SHF_EXECINSTR ]
    Address:         0x1000
    AddressAlign:    0x0000000000000010
    Size:            64
Symbols:
  - Name:     __pf_foo
    Type:     STT_SECTION
    Section:  .text
  - Name:     __pf_bar
    Type:     STT_FILE
    Section:  .text
  - Name:     foobar
    Type:     STT_FUNC
    Section:  .text
    Binding:  STB_GLOBAL
  - Name:     foo__pf_bar1
    Type:     STT_FUNC
    Section:  .text
    Binding:  STB_GLOBAL
  - Name:     __pf_foo__pf_bar2
    Type:     STT_FUNC
    Section:  .text
    Binding:  STB_GLOBAL
  - Name:     undef
    Binding:  STB_GLOBAL

# CHECK: Symbols [
# CHECK-NEXT:  Symbol {
# CHECK-NEXT:    Name:
# CHECK-NEXT:    Value: 0x0
# CHECK-NEXT:    Size: 0
# CHECK-NEXT:    Binding: Local
# CHECK-NEXT:    Type: None
# CHECK-NEXT:    Other: 0
# CHECK-NEXT:    Section: Undefined
# CHECK-NEXT:  }
# CHECK-NEXT:  Symbol {
# CHECK-NEXT:    Name: __pf_foo
# CHECK-NEXT:    Value: 0x0
# CHECK-NEXT:    Size: 0
# CHECK-NEXT:    Binding: Local
# CHECK-NEXT:    Type: Section
# CHECK-NEXT:    Other: 0
# CHECK-NEXT:    Section: .text
# CHECK-NEXT:  }
# CHECK-NEXT:  Symbol {
# CHECK-NEXT:    Name: bar
# CHECK-NEXT:    Value: 0x0
# CHECK-NEXT:    Size: 0
# CHECK-NEXT:    Binding: Local
# CHECK-NEXT:    Type: File
# CHECK-NEXT:    Other: 0
# CHECK-NEXT:    Section: .text
# CHECK-NEXT:  }
# CHECK-NEXT:  Symbol {
# CHECK-NEXT:    Name: foobar
# CHECK-NEXT:    Value: 0x0
# CHECK-NEXT:    Size: 0
# CHECK-NEXT:    Binding: Global
# CHECK-NEXT:    Type: Function
# CHECK-NEXT:    Other: 0
# CHECK-NEXT:    Section: .text
# CHECK-NEXT:  }
# CHECK-NEXT:  Symbol {
# CHECK-NEXT:    Name: foo__pf_bar1
# CHECK-NEXT:    Value: 0x0
# CHECK-NEXT:    Size: 0
# CHECK-NEXT:    Binding: Global
# CHECK-NEXT:    Type: Function
# CHECK-NEXT:    Other: 0
# CHECK-NEXT:    Section: .text
# CHECK-NEXT:  }
# CHECK-NEXT:  Symbol {
# CHECK-NEXT:    Name: foo__pf_bar2
# CHECK-NEXT:    Value: 0x0
# CHECK-NEXT:    Size: 0
# CHECK-NEXT:    Binding: Global
# CHECK-NEXT:    Type: Function
# CHECK-NEXT:    Other: 0
# CHECK-NEXT:    Section: .text
# CHECK-NEXT:  }
# CHECK-NEXT:  Symbol {
# CHECK-NEXT:    Name: undef
# CHECK-NEXT:    Value: 0x0
# CHECK-NEXT:    Size: 0
# CHECK-NEXT:    Binding: Global
# CHECK-NEXT:    Type: None
# CHECK-NEXT:    Other: 0
# CHECK-NEXT:    Section: Undefined
# CHECK-NEXT:  }
# CHECK-NEXT:]
