; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 2
; RUN: llc -mtriple=xtensa -verify-machineinstrs < %s \
; RUN: | FileCheck -check-prefix=XTENSA %s

define void @foo(i32 %a, ptr %b, i1 %c) nounwind {
; XTENSA-LABEL: foo:
; XTENSA:         memw
; XTENSA-NEXT:    l32i a8, a3, 0
; XTENSA-NEXT:    beq a8, a2, .LBB0_14
; XTENSA-NEXT:  # %bb.1: # %test2
; XTENSA-NEXT:    memw
; XTENSA-NEXT:    l32i a8, a3, 0
; XTENSA-NEXT:    bne a8, a2, .LBB0_14
; XTENSA-NEXT:  # %bb.2: # %test3
; XTENSA-NEXT:    memw
; XTENSA-NEXT:    l32i a8, a3, 0
; XTENSA-NEXT:    blt a8, a2, .LBB0_14
; XTENSA-NEXT:  # %bb.3: # %test4
; XTENSA-NEXT:    memw
; XTENSA-NEXT:    l32i a8, a3, 0
; XTENSA-NEXT:    bge a8, a2, .LBB0_14
; XTENSA-NEXT:  # %bb.4: # %test5
; XTENSA-NEXT:    memw
; XTENSA-NEXT:    l32i a8, a3, 0
; XTENSA-NEXT:    bltu a8, a2, .LBB0_14
; XTENSA-NEXT:  # %bb.5: # %test6
; XTENSA-NEXT:    memw
; XTENSA-NEXT:    l32i a8, a3, 0
; XTENSA-NEXT:    bgeu a8, a2, .LBB0_14
; XTENSA-NEXT:  # %bb.6: # %test7
; XTENSA-NEXT:    memw
; XTENSA-NEXT:    l32i a8, a3, 0
; XTENSA-NEXT:    blt a2, a8, .LBB0_14
; XTENSA-NEXT:  # %bb.7: # %test8
; XTENSA-NEXT:    memw
; XTENSA-NEXT:    l32i a8, a3, 0
; XTENSA-NEXT:    bge a2, a8, .LBB0_14
; XTENSA-NEXT:  # %bb.8: # %test9
; XTENSA-NEXT:    memw
; XTENSA-NEXT:    l32i a8, a3, 0
; XTENSA-NEXT:    bltu a2, a8, .LBB0_14
; XTENSA-NEXT:  # %bb.9: # %test10
; XTENSA-NEXT:    memw
; XTENSA-NEXT:    l32i a8, a3, 0
; XTENSA-NEXT:    bgeu a2, a8, .LBB0_14
; XTENSA-NEXT:  # %bb.10: # %test11
; XTENSA-NEXT:    memw
; XTENSA-NEXT:    l32i a8, a3, 0
; XTENSA-NEXT:    movi a8, 1
; XTENSA-NEXT:    and a8, a4, a8
; XTENSA-NEXT:    bnez a8, .LBB0_14
; XTENSA-NEXT:  # %bb.11: # %test12
; XTENSA-NEXT:    memw
; XTENSA-NEXT:    l32i a8, a3, 0
; XTENSA-NEXT:    movi a9, -1
; XTENSA-NEXT:    blt a9, a8, .LBB0_14
; XTENSA-NEXT:  # %bb.12: # %test13
; XTENSA-NEXT:    memw
; XTENSA-NEXT:    l32i a8, a3, 0
; XTENSA-NEXT:    blti a8, 1, .LBB0_14
; XTENSA-NEXT:  # %bb.13: # %test14
; XTENSA-NEXT:    memw
; XTENSA-NEXT:    l32i a8, a3, 0
; XTENSA-NEXT:  .LBB0_14: # %end
; XTENSA-NEXT:    ret
  %val1 = load volatile i32, ptr %b
  %tst1 = icmp eq i32 %val1, %a
  br i1 %tst1, label %end, label %test2

test2:
  %val2 = load volatile i32, ptr %b
  %tst2 = icmp ne i32 %val2, %a
  br i1 %tst2, label %end, label %test3

test3:
  %val3 = load volatile i32, ptr %b
  %tst3 = icmp slt i32 %val3, %a
  br i1 %tst3, label %end, label %test4

test4:
  %val4 = load volatile i32, ptr %b
  %tst4 = icmp sge i32 %val4, %a
  br i1 %tst4, label %end, label %test5

test5:
  %val5 = load volatile i32, ptr %b
  %tst5 = icmp ult i32 %val5, %a
  br i1 %tst5, label %end, label %test6

test6:
  %val6 = load volatile i32, ptr %b
  %tst6 = icmp uge i32 %val6, %a
  br i1 %tst6, label %end, label %test7


test7:
  %val7 = load volatile i32, ptr %b
  %tst7 = icmp sgt i32 %val7, %a
  br i1 %tst7, label %end, label %test8

test8:
  %val8 = load volatile i32, ptr %b
  %tst8 = icmp sle i32 %val8, %a
  br i1 %tst8, label %end, label %test9

test9:
  %val9 = load volatile i32, ptr %b
  %tst9 = icmp ugt i32 %val9, %a
  br i1 %tst9, label %end, label %test10

test10:
  %val10 = load volatile i32, ptr %b
  %tst10 = icmp ule i32 %val10, %a
  br i1 %tst10, label %end, label %test11


test11:
  %val11 = load volatile i32, ptr %b
  br i1 %c, label %end, label %test12


test12:
  %val12 = load volatile i32, ptr %b
  %tst12 = icmp sgt i32 %val12, -1
  br i1 %tst12, label %end, label %test13


test13:
  %val13 = load volatile i32, ptr %b
  %tst13 = icmp slt i32 %val13, 1
  br i1 %tst13, label %end, label %test14

test14:
  %val14 = load volatile i32, ptr %b
  br label %end

end:
  ret void
}
