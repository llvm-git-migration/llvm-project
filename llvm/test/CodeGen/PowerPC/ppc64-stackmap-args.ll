; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 5
; RUN: llc -verify-machineinstrs < %s -mcpu=ppc -mtriple=powerpc64-unknown-gnu-linux | FileCheck %s
; This test is expected to fail.
; XFAIL:*

; Tests failure when we pass non-immediate args to @llvm.experiment.stackmap

define void @first_arg() {
; CHECK-LABEL: first_arg:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    mflr 0
; CHECK-NEXT:    std 31, -8(1)
; CHECK-NEXT:    stdu 1, -64(1)
; CHECK-NEXT:    std 0, 80(1)
; CHECK-NEXT:    .cfi_def_cfa_offset 64
; CHECK-NEXT:    .cfi_offset r31, -8
; CHECK-NEXT:    .cfi_offset lr, 16
; CHECK-NEXT:    mr 31, 1
; CHECK-NEXT:    .cfi_def_cfa_register r31
; CHECK-NEXT:  .Ltmp0:
; CHECK-NEXT:    addi 1, 1, 64
; CHECK-NEXT:    ld 0, 16(1)
; CHECK-NEXT:    ld 31, -8(1)
; CHECK-NEXT:    mtlr 0
; CHECK-NEXT:    blr
entry:
  ; First operand should be immediate
  %id = add i64 0, 0
  call void (i64, i32, ...) @llvm.experimental.stackmap(i64 %id, i32 0)
  ret void
}

define void @second_arg() {
; CHECK-LABEL: second_arg:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    mflr 0
; CHECK-NEXT:    std 31, -8(1)
; CHECK-NEXT:    stdu 1, -64(1)
; CHECK-NEXT:    std 0, 80(1)
; CHECK-NEXT:    .cfi_def_cfa_offset 64
; CHECK-NEXT:    .cfi_offset r31, -8
; CHECK-NEXT:    .cfi_offset lr, 16
; CHECK-NEXT:    mr 31, 1
; CHECK-NEXT:    .cfi_def_cfa_register r31
; CHECK-NEXT:  .Ltmp1:
; CHECK-NEXT:    addi 1, 1, 64
; CHECK-NEXT:    ld 0, 16(1)
; CHECK-NEXT:    ld 31, -8(1)
; CHECK-NEXT:    mtlr 0
; CHECK-NEXT:    blr
entry:
  ; Second operand should be immediate
  %numShadowByte = add i32 0, 0
  call void (i64, i32, ...) @llvm.experimental.stackmap(i64 1, i32 %numShadowByte)
  ret void
}

declare void @llvm.experimental.stackmap(i64, i32, ...)
