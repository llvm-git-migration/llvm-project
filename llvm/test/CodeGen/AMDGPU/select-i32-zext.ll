; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -march=amdgcn -mcpu=gfx900 -verify-machineinstrs < %s | FileCheck --check-prefix=GFX900 %s

; Test translation of select statement that requires a subsequent i1->i32 zext conversion.

define amdgpu_kernel void @select_i32_zext_zext_a(i32 noundef %0, ptr addrspace(1) nocapture noundef readnone %1) {
; GFX900-LABEL: select_i32_zext_zext_a:
; GFX900:       ; %bb.0:
; GFX900-NEXT:    s_load_dword s0, s[2:3], 0x24
; GFX900-NEXT:    s_waitcnt lgkmcnt(0)
; GFX900-NEXT:    s_cmp_lg_u32 s0, 0
; GFX900-NEXT:    s_cselect_b32 s0, 1, 0
; GFX900-NEXT:    s_lshl_b32 s0, s0, 5
; GFX900-NEXT:    ;;#ASMSTART
; GFX900-NEXT:    s_mov_b32 s0, s0
; GFX900-NEXT:    ;;#ASMEND
; GFX900-NEXT:    s_endpgm
  %3 = icmp eq i32 %0, 0
  %4 = select i1 %3, i32 0, i32 32
  %5 = tail call i32 asm sideeffect "s_mov_b32 $0, $1", "=s,s"(i32 %4) #1, !srcloc !7
  ret void
}

define amdgpu_kernel void @select_i32_zext_zext_b(i32 noundef %0, ptr addrspace(1) nocapture noundef readnone %1) {
; GFX900-LABEL: select_i32_zext_zext_b:
; GFX900:       ; %bb.0:
; GFX900-NEXT:    s_load_dword s0, s[2:3], 0x24
; GFX900-NEXT:    s_waitcnt lgkmcnt(0)
; GFX900-NEXT:    s_cmp_eq_u32 s0, 0
; GFX900-NEXT:    s_cselect_b32 s0, 0, 33
; GFX900-NEXT:    ;;#ASMSTART
; GFX900-NEXT:    s_mov_b32 s0, s0
; GFX900-NEXT:    ;;#ASMEND
; GFX900-NEXT:    s_endpgm
  %3 = icmp eq i32 %0, 0
  %4 = select i1 %3, i32 0, i32 33
  %5 = tail call i32 asm sideeffect "s_mov_b32 $0, $1", "=s,s"(i32 %4) #1, !srcloc !7
  ret void
}


!7 = !{i64 173}
