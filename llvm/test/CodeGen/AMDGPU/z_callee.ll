; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 2
; RUN: llc -march=amdgcn -mcpu=hawaii -verify-machineinstrs < %s | FileCheck -enable-var-scope -check-prefixes=CIGFX89 %s
; RUN: llc -march=amdgcn -mcpu=fiji -mattr=-flat-for-global -verify-machineinstrs < %s | FileCheck -enable-var-scope -check-prefixes=CIGFX89 %s
; RUN: llc -march=amdgcn -mcpu=gfx900 -mattr=-flat-for-global -verify-machineinstrs < %s | FileCheck -enable-var-scope -check-prefixes=CIGFX89 %s
; RUN: llc -march=amdgcn -mcpu=gfx1100 -mattr=-flat-for-global -verify-machineinstrs < %s | FileCheck -enable-var-scope -check-prefixes=GFX11 %s

define void @void_func_i1(i1 %arg0) #0 {
; For CIGFX89, the i1 arg is passed in s4, but the v_cndmask insn uses s[4:5].
; Therefore, the "s_mov_b32 s5, 0" is generated.
;
; CIGFX89-LABEL: void_func_i1:
; CIGFX89:       ; %bb.0:
; CIGFX89-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; CIGFX89-NEXT:    s_mov_b32 s5, 0
; CIGFX89-NEXT:    v_cndmask_b32_e64 v0, 0, 1, s[4:5]
; CIGFX89-NEXT:    s_mov_b32 s7, 0xf000
; CIGFX89-NEXT:    s_mov_b32 s6, -1
; CIGFX89-NEXT:    buffer_store_byte v0, off, s[4:7], 0
; CIGFX89-NEXT:    s_waitcnt vmcnt(0)
; CIGFX89-NEXT:    s_setpc_b64 s[30:31]
;
; GFX11-LABEL: void_func_i1:
; GFX11:       ; %bb.0:
; GFX11-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; GFX11-NEXT:    v_cndmask_b32_e64 v0, 0, 1, s0
; GFX11-NEXT:    s_mov_b32 s3, 0x31016000
; GFX11-NEXT:    s_mov_b32 s2, -1
; GFX11-NEXT:    buffer_store_b8 v0, off, s[0:3], 0
; GFX11-NEXT:    s_setpc_b64 s[30:31]
  store i1 %arg0, ptr addrspace(1) undef
  ret void
}

