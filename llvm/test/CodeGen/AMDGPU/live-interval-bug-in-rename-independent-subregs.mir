# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py UTC_ARGS: --version 4
# RUN: llc -mtriple=amdgcn--amdpal -mcpu=gfx1010 -start-before=rename-independent-subregs -mattr=-wavefrontsize32,+wavefrontsize64 -stop-before=amdgpu-mark-last-scratch-load %s -o - | FileCheck -check-prefix=RegAlloc %s
# RUN: llc -mtriple=amdgcn--amdpal -mcpu=gfx1010 -start-before=rename-independent-subregs -mattr=-wavefrontsize32,+wavefrontsize64 -stop-after=machine-cp %s -o - | FileCheck -check-prefix=DeadInstDelete %s

---
name: _amdgpu_cs_main
tracksRegLiveness: true
body: |
  ; RegAlloc-LABEL: name: _amdgpu_cs_main
  ; RegAlloc: bb.0:
  ; RegAlloc-NEXT:   successors: %bb.2(0x40000000), %bb.1(0x40000000)
  ; RegAlloc-NEXT:   liveins: $sgpr0, $sgpr1, $sgpr2, $sgpr3, $sgpr4, $sgpr5, $sgpr6, $sgpr7, $vgpr0, $vgpr1, $vgpr2
  ; RegAlloc-NEXT: {{  $}}
  ; RegAlloc-NEXT:   renamable $sgpr0 = COPY $sgpr3
  ; RegAlloc-NEXT:   renamable $sgpr12_sgpr13 = COPY $exec
  ; RegAlloc-NEXT:   renamable $sgpr8 = COPY $sgpr1
  ; RegAlloc-NEXT:   renamable $sgpr9 = COPY $sgpr2
  ; RegAlloc-NEXT:   renamable $sgpr2_sgpr3 = S_GETPC_B64_pseudo
  ; RegAlloc-NEXT:   renamable $sgpr10_sgpr11 = S_MOV_B64_IMM_PSEUDO -4294967296
  ; RegAlloc-NEXT:   renamable $sgpr2_sgpr3 = S_AND_B64 killed renamable $sgpr2_sgpr3, renamable $sgpr10_sgpr11, implicit-def dead $scc
  ; RegAlloc-NEXT:   renamable $sgpr1 = COPY killed renamable $sgpr10
  ; RegAlloc-NEXT:   renamable $sgpr10_sgpr11 = S_OR_B64 killed renamable $sgpr2_sgpr3, killed renamable $sgpr0_sgpr1, implicit-def dead $scc
  ; RegAlloc-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM renamable $sgpr10_sgpr11, 16, 0 :: (invariant load (<4 x s32>), addrspace 4)
  ; RegAlloc-NEXT:   renamable $sgpr7 = IMPLICIT_DEF
  ; RegAlloc-NEXT:   renamable $sgpr14 = S_LSHL_B32 renamable $sgpr7, 5, implicit-def dead $scc
  ; RegAlloc-NEXT:   renamable $vgpr1 = COPY renamable $sgpr14
  ; RegAlloc-NEXT:   renamable $vgpr1_vgpr2_vgpr3_vgpr4 = BUFFER_LOAD_DWORDX4_OFFEN killed renamable $vgpr1, renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, 0, implicit $exec :: (dereferenceable load (<4 x s32>), align 1, addrspace 8)
  ; RegAlloc-NEXT:   renamable $vgpr5 = V_MBCNT_LO_U32_B32_e64 -1, 0, implicit $exec
  ; RegAlloc-NEXT:   renamable $vgpr18 = V_MBCNT_HI_U32_B32_e64 -1, killed $vgpr5, implicit $exec
  ; RegAlloc-NEXT:   renamable $sgpr14 = S_OR_B32 killed renamable $sgpr14, 16, implicit-def dead $scc
  ; RegAlloc-NEXT:   renamable $vgpr5 = V_LSHLREV_B32_e64 5, $vgpr18, implicit $exec
  ; RegAlloc-NEXT:   renamable $vgpr6 = COPY killed renamable $sgpr14
  ; RegAlloc-NEXT:   renamable $vgpr7 = V_OR_B32_e64 16, $vgpr5, implicit $exec
  ; RegAlloc-NEXT:   renamable $vgpr14_vgpr15_vgpr16_vgpr17 = BUFFER_LOAD_DWORDX4_OFFEN killed renamable $vgpr6, renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, 0, implicit $exec :: (dereferenceable load (<4 x s32>), align 1, addrspace 8)
  ; RegAlloc-NEXT:   renamable $sgpr14 = V_READFIRSTLANE_B32 $vgpr1, implicit $exec
  ; RegAlloc-NEXT:   renamable $vgpr9_vgpr10_vgpr11_vgpr12 = BUFFER_LOAD_DWORDX4_OFFEN killed renamable $vgpr5, renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, 0, implicit $exec :: (dereferenceable load (<4 x s32>), align 1, addrspace 8)
  ; RegAlloc-NEXT:   renamable $sgpr15 = V_READFIRSTLANE_B32 $vgpr2, implicit $exec
  ; RegAlloc-NEXT:   renamable $sgpr16 = V_READFIRSTLANE_B32 $vgpr3, implicit $exec
  ; RegAlloc-NEXT:   renamable $sgpr17 = V_READFIRSTLANE_B32 killed $vgpr4, implicit $exec
  ; RegAlloc-NEXT:   renamable $vgpr5_vgpr6_vgpr7_vgpr8 = BUFFER_LOAD_DWORDX4_OFFEN killed renamable $vgpr7, renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, 0, implicit $exec :: (dereferenceable load (<4 x s32>), align 1, addrspace 8)
  ; RegAlloc-NEXT:   renamable $sgpr18 = V_READFIRSTLANE_B32 $vgpr9, implicit $exec
  ; RegAlloc-NEXT:   renamable $sgpr19 = V_READFIRSTLANE_B32 $vgpr10, implicit $exec
  ; RegAlloc-NEXT:   renamable $sgpr20 = V_READFIRSTLANE_B32 $vgpr11, implicit $exec
  ; RegAlloc-NEXT:   renamable $sgpr21 = V_READFIRSTLANE_B32 $vgpr12, implicit $exec
  ; RegAlloc-NEXT:   renamable $sgpr22 = V_READFIRSTLANE_B32 $vgpr5, implicit $exec
  ; RegAlloc-NEXT:   renamable $sgpr23 = V_READFIRSTLANE_B32 $vgpr6, implicit $exec
  ; RegAlloc-NEXT:   renamable $sgpr24 = V_READFIRSTLANE_B32 $vgpr7, implicit $exec
  ; RegAlloc-NEXT:   renamable $vgpr13 = COPY renamable $vgpr8
  ; RegAlloc-NEXT:   renamable $sgpr26 = V_READFIRSTLANE_B32 $vgpr14, implicit $exec
  ; RegAlloc-NEXT:   renamable $sgpr27 = V_READFIRSTLANE_B32 $vgpr15, implicit $exec
  ; RegAlloc-NEXT:   renamable $sgpr28 = V_READFIRSTLANE_B32 $vgpr16, implicit $exec
  ; RegAlloc-NEXT:   S_CMP_EQ_U64 killed renamable $sgpr14_sgpr15, killed renamable $sgpr18_sgpr19, implicit-def $scc
  ; RegAlloc-NEXT:   renamable $sgpr29 = V_READFIRSTLANE_B32 killed $vgpr17, implicit $exec
  ; RegAlloc-NEXT:   renamable $sgpr14 = S_CSELECT_B32 1, 0, implicit $scc
  ; RegAlloc-NEXT:   S_CMP_EQ_U64 killed renamable $sgpr16_sgpr17, killed renamable $sgpr20_sgpr21, implicit-def $scc
  ; RegAlloc-NEXT:   renamable $sgpr25 = V_READFIRSTLANE_B32 $vgpr13, implicit $exec
  ; RegAlloc-NEXT:   renamable $sgpr15 = S_CSELECT_B32 1, 0, implicit $scc
  ; RegAlloc-NEXT:   S_CMP_EQ_U64 killed renamable $sgpr26_sgpr27, killed renamable $sgpr22_sgpr23, implicit-def $scc
  ; RegAlloc-NEXT:   renamable $sgpr16 = S_CSELECT_B32 1, 0, implicit $scc
  ; RegAlloc-NEXT:   S_CMP_EQ_U64 killed renamable $sgpr28_sgpr29, killed renamable $sgpr24_sgpr25, implicit-def $scc
  ; RegAlloc-NEXT:   renamable $sgpr17 = S_CSELECT_B32 1, 0, implicit $scc
  ; RegAlloc-NEXT:   renamable $sgpr14 = S_AND_B32 killed renamable $sgpr14, killed renamable $sgpr15, implicit-def dead $scc
  ; RegAlloc-NEXT:   renamable $sgpr14 = S_AND_B32 killed renamable $sgpr16, killed renamable $sgpr14, implicit-def dead $scc
  ; RegAlloc-NEXT:   renamable $sgpr14 = S_AND_B32 killed renamable $sgpr17, killed renamable $sgpr14, implicit-def dead $scc
  ; RegAlloc-NEXT:   renamable $sgpr16_sgpr17 = V_CMP_NE_U32_e64 $sgpr7, killed $vgpr18, implicit $exec
  ; RegAlloc-NEXT:   renamable $sgpr14 = S_AND_B32 killed renamable $sgpr14, 1, implicit-def dead $scc
  ; RegAlloc-NEXT:   $scc = COPY killed renamable $sgpr14
  ; RegAlloc-NEXT:   renamable $sgpr14 = S_CSELECT_B32 1, 0, implicit $scc
  ; RegAlloc-NEXT:   renamable $sgpr12_sgpr13 = S_XOR_B64 killed renamable $sgpr16_sgpr17, killed renamable $sgpr12_sgpr13, implicit-def dead $scc
  ; RegAlloc-NEXT:   renamable $vgpr15 = IMPLICIT_DEF
  ; RegAlloc-NEXT:   renamable $sgpr16_sgpr17 = COPY $exec, implicit-def $exec
  ; RegAlloc-NEXT:   renamable $sgpr18_sgpr19 = S_AND_B64 renamable $sgpr16_sgpr17, killed renamable $sgpr12_sgpr13, implicit-def dead $scc
  ; RegAlloc-NEXT:   renamable $sgpr12_sgpr13 = S_XOR_B64 renamable $sgpr18_sgpr19, killed renamable $sgpr16_sgpr17, implicit-def dead $scc
  ; RegAlloc-NEXT:   $exec = S_MOV_B64_term killed renamable $sgpr18_sgpr19
  ; RegAlloc-NEXT:   S_CBRANCH_EXECZ %bb.1, implicit $exec
  ; RegAlloc-NEXT:   S_BRANCH %bb.2
  ; RegAlloc-NEXT: {{  $}}
  ; RegAlloc-NEXT: bb.1:
  ; RegAlloc-NEXT:   successors: %bb.3(0x40000000), %bb.5(0x40000000)
  ; RegAlloc-NEXT:   liveins: $sgpr4, $sgpr5, $sgpr6, $sgpr7, $sgpr14, $vgpr0, $vgpr15, $sgpr8_sgpr9:0x000000000000000F, $sgpr10_sgpr11, $sgpr12_sgpr13, $sgpr0_sgpr1_sgpr2_sgpr3, $vgpr13_vgpr14:0x0000000000000003, $vgpr9_vgpr10_vgpr11_vgpr12:0x00000000000000FF, $vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8:0x0000000000003F00
  ; RegAlloc-NEXT: {{  $}}
  ; RegAlloc-NEXT:   renamable $sgpr12_sgpr13 = S_OR_SAVEEXEC_B64 killed renamable $sgpr12_sgpr13, implicit-def $exec, implicit-def $scc, implicit $exec
  ; RegAlloc-NEXT:   $exec = S_XOR_B64_term $exec, renamable $sgpr12_sgpr13, implicit-def $scc
  ; RegAlloc-NEXT:   S_CBRANCH_EXECZ %bb.5, implicit $exec
  ; RegAlloc-NEXT:   S_BRANCH %bb.3
  ; RegAlloc-NEXT: {{  $}}
  ; RegAlloc-NEXT: bb.2:
  ; RegAlloc-NEXT:   successors: %bb.1(0x80000000)
  ; RegAlloc-NEXT:   liveins: $sgpr4, $sgpr5, $sgpr6, $sgpr7, $sgpr14, $vgpr0, $sgpr8_sgpr9:0x000000000000000F, $sgpr10_sgpr11, $sgpr12_sgpr13, $sgpr0_sgpr1_sgpr2_sgpr3
  ; RegAlloc-NEXT: {{  $}}
  ; RegAlloc-NEXT:   renamable $sgpr15 = S_OR_B32 renamable $sgpr14, 2, implicit-def dead $scc
  ; RegAlloc-NEXT:   renamable $vgpr15 = COPY killed renamable $sgpr15
  ; RegAlloc-NEXT:   renamable $vgpr9_vgpr10 = IMPLICIT_DEF
  ; RegAlloc-NEXT:   renamable $vgpr13_vgpr14 = IMPLICIT_DEF
  ; RegAlloc-NEXT:   renamable $vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8 = IMPLICIT_DEF
  ; RegAlloc-NEXT:   S_BRANCH %bb.1
  ; RegAlloc-NEXT: {{  $}}
  ; RegAlloc-NEXT: bb.3:
  ; RegAlloc-NEXT:   successors: %bb.5(0x80000000)
  ; RegAlloc-NEXT:   liveins: $sgpr4, $sgpr5, $sgpr6, $sgpr7, $sgpr14, $vgpr0, $sgpr8_sgpr9:0x000000000000000F, $sgpr10_sgpr11, $sgpr12_sgpr13, $sgpr0_sgpr1_sgpr2_sgpr3, $vgpr13_vgpr14:0x0000000000000003, $vgpr9_vgpr10_vgpr11_vgpr12:0x00000000000000FF, $vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8:0x0000000000003F00
  ; RegAlloc-NEXT: {{  $}}
  ; RegAlloc-NEXT:   renamable $sgpr7 = S_LSHL_B32 killed renamable $sgpr7, 5, implicit-def dead $scc
  ; RegAlloc-NEXT:   renamable $vgpr1 = COPY renamable $sgpr7
  ; RegAlloc-NEXT:   renamable $sgpr7 = S_OR_B32 killed renamable $sgpr7, 16, implicit-def dead $scc
  ; RegAlloc-NEXT:   renamable $sgpr16 = V_READFIRSTLANE_B32 $vgpr9, implicit $exec
  ; RegAlloc-NEXT:   renamable $vgpr8 = COPY killed renamable $sgpr7
  ; RegAlloc-NEXT:   renamable $vgpr1_vgpr2_vgpr3_vgpr4 = BUFFER_LOAD_DWORDX4_OFFEN killed renamable $vgpr1, renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, 0, implicit $exec :: (dereferenceable load (<4 x s32>), align 1, addrspace 8)
  ; RegAlloc-NEXT:   renamable $sgpr17 = V_READFIRSTLANE_B32 $vgpr10, implicit $exec
  ; RegAlloc-NEXT:   renamable $sgpr18 = V_READFIRSTLANE_B32 $vgpr11, implicit $exec
  ; RegAlloc-NEXT:   renamable $sgpr19 = V_READFIRSTLANE_B32 killed $vgpr12, implicit $exec
  ; RegAlloc-NEXT:   renamable $vgpr8_vgpr9_vgpr10_vgpr11 = BUFFER_LOAD_DWORDX4_OFFEN killed renamable $vgpr8, killed renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, 0, implicit $exec :: (dereferenceable load (<4 x s32>), align 1, addrspace 8)
  ; RegAlloc-NEXT:   renamable $sgpr0 = V_READFIRSTLANE_B32 $vgpr5, implicit $exec
  ; RegAlloc-NEXT:   renamable $sgpr1 = V_READFIRSTLANE_B32 $vgpr6, implicit $exec
  ; RegAlloc-NEXT:   renamable $sgpr2 = V_READFIRSTLANE_B32 killed $vgpr7, implicit $exec
  ; RegAlloc-NEXT:   renamable $sgpr3 = V_READFIRSTLANE_B32 killed $vgpr13, implicit $exec
  ; RegAlloc-NEXT:   renamable $sgpr20 = V_READFIRSTLANE_B32 $vgpr1, implicit $exec
  ; RegAlloc-NEXT:   renamable $sgpr21 = V_READFIRSTLANE_B32 $vgpr2, implicit $exec
  ; RegAlloc-NEXT:   renamable $sgpr22 = V_READFIRSTLANE_B32 $vgpr3, implicit $exec
  ; RegAlloc-NEXT:   renamable $sgpr23 = V_READFIRSTLANE_B32 killed $vgpr4, implicit $exec
  ; RegAlloc-NEXT:   renamable $sgpr24 = V_READFIRSTLANE_B32 $vgpr8, implicit $exec
  ; RegAlloc-NEXT:   renamable $sgpr25 = V_READFIRSTLANE_B32 $vgpr9, implicit $exec
  ; RegAlloc-NEXT:   S_CMP_EQ_U64 killed renamable $sgpr20_sgpr21, killed renamable $sgpr16_sgpr17, implicit-def $scc
  ; RegAlloc-NEXT:   renamable $sgpr16 = V_READFIRSTLANE_B32 $vgpr10, implicit $exec
  ; RegAlloc-NEXT:   renamable $sgpr7 = S_CSELECT_B32 1, 0, implicit $scc
  ; RegAlloc-NEXT:   S_CMP_EQ_U64 killed renamable $sgpr22_sgpr23, killed renamable $sgpr18_sgpr19, implicit-def $scc
  ; RegAlloc-NEXT:   renamable $sgpr17 = V_READFIRSTLANE_B32 killed $vgpr11, implicit $exec
  ; RegAlloc-NEXT:   renamable $sgpr15 = S_CSELECT_B32 1, 0, implicit $scc
  ; RegAlloc-NEXT:   S_CMP_EQ_U64 killed renamable $sgpr24_sgpr25, killed renamable $sgpr0_sgpr1, implicit-def $scc
  ; RegAlloc-NEXT:   renamable $sgpr0 = S_CSELECT_B32 1, 0, implicit $scc
  ; RegAlloc-NEXT:   S_CMP_EQ_U64 killed renamable $sgpr16_sgpr17, killed renamable $sgpr2_sgpr3, implicit-def $scc
  ; RegAlloc-NEXT:   renamable $sgpr1 = S_CSELECT_B32 1, 0, implicit $scc
  ; RegAlloc-NEXT:   renamable $sgpr2 = S_AND_B32 killed renamable $sgpr7, killed renamable $sgpr15, implicit-def dead $scc
  ; RegAlloc-NEXT:   renamable $sgpr0 = S_AND_B32 killed renamable $sgpr0, killed renamable $sgpr2, implicit-def dead $scc
  ; RegAlloc-NEXT:   renamable $sgpr0 = S_AND_B32 killed renamable $sgpr1, killed renamable $sgpr0, implicit-def dead $scc
  ; RegAlloc-NEXT:   renamable $sgpr0 = S_AND_B32 killed renamable $sgpr0, 1, implicit-def dead $scc
  ; RegAlloc-NEXT:   $scc = COPY killed renamable $sgpr0
  ; RegAlloc-NEXT:   renamable $sgpr0 = S_CSELECT_B32 1, 0, implicit $scc
  ; RegAlloc-NEXT:   renamable $sgpr0 = S_LSHL_B32 killed renamable $sgpr0, 1, implicit-def dead $scc
  ; RegAlloc-NEXT:   renamable $sgpr0 = S_OR_B32 killed renamable $sgpr0, killed renamable $sgpr14, implicit-def dead $scc
  ; RegAlloc-NEXT:   renamable $vgpr15 = COPY killed renamable $sgpr0
  ; RegAlloc-NEXT:   S_BRANCH %bb.5
  ; RegAlloc-NEXT: {{  $}}
  ; RegAlloc-NEXT: bb.4:
  ; RegAlloc-NEXT:   liveins: $sgpr4, $sgpr5, $sgpr6, $vgpr0, $vgpr15, $sgpr8_sgpr9:0x000000000000000F, $sgpr10_sgpr11
  ; RegAlloc-NEXT: {{  $}}
  ; RegAlloc-NEXT:   renamable $sgpr8_sgpr9 = S_LOAD_DWORDX2_IMM killed renamable $sgpr8_sgpr9, 0, 0 :: (invariant load (<2 x s32>), align 16, addrspace 4)
  ; RegAlloc-NEXT:   renamable $vgpr1 = COPY killed renamable $sgpr5
  ; RegAlloc-NEXT:   renamable $vgpr1_vgpr2, dead renamable $sgpr0_sgpr1 = V_MAD_U64_U32_e64 $sgpr9, killed $sgpr6, $vgpr1_vgpr2, 0, implicit $exec
  ; RegAlloc-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr10_sgpr11, 0, 0 :: (invariant load (<4 x s32>), addrspace 4)
  ; RegAlloc-NEXT:   renamable $sgpr5 = S_LSHL_B32 killed renamable $sgpr8, 6, implicit-def dead $scc
  ; RegAlloc-NEXT:   renamable $vgpr1 = V_MUL_LO_U32_e64 killed $vgpr1, killed $sgpr5, implicit $exec
  ; RegAlloc-NEXT:   renamable $sgpr4 = S_LSHL_B32 killed renamable $sgpr4, 6, implicit-def dead $scc
  ; RegAlloc-NEXT:   renamable $vgpr0 = V_ADD_U32_e64 killed $sgpr4, killed $vgpr0, 0, implicit $exec
  ; RegAlloc-NEXT:   renamable $vgpr0 = V_ADD_LSHL_U32_e64 killed $vgpr1, killed $vgpr0, 2, implicit $exec
  ; RegAlloc-NEXT:   BUFFER_STORE_DWORD_OFFEN_exact killed renamable $vgpr15, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, 0, implicit $exec :: (dereferenceable store (s32), align 1, addrspace 8)
  ; RegAlloc-NEXT:   S_ENDPGM 0
  ; RegAlloc-NEXT: {{  $}}
  ; RegAlloc-NEXT: bb.5:
  ; RegAlloc-NEXT:   successors: %bb.4(0x80000000)
  ; RegAlloc-NEXT:   liveins: $sgpr4, $sgpr5, $sgpr6, $vgpr0, $vgpr15, $sgpr8_sgpr9:0x000000000000000F, $sgpr10_sgpr11, $sgpr12_sgpr13
  ; RegAlloc-NEXT: {{  $}}
  ; RegAlloc-NEXT:   $exec = S_OR_B64 $exec, killed renamable $sgpr12_sgpr13, implicit-def $scc
  ; RegAlloc-NEXT:   S_BRANCH %bb.4
  ;
  ; DeadInstDelete-LABEL: name: _amdgpu_cs_main
  ; DeadInstDelete: bb.0:
  ; DeadInstDelete-NEXT:   successors: %bb.2(0x40000000), %bb.1(0x40000000)
  ; DeadInstDelete-NEXT:   liveins: $sgpr0, $sgpr1, $sgpr2, $sgpr3, $sgpr4, $sgpr5, $sgpr6, $sgpr7, $vgpr0, $vgpr1, $vgpr2
  ; DeadInstDelete-NEXT: {{  $}}
  ; DeadInstDelete-NEXT:   renamable $sgpr0 = COPY $sgpr3
  ; DeadInstDelete-NEXT:   renamable $sgpr12_sgpr13 = COPY $exec
  ; DeadInstDelete-NEXT:   renamable $sgpr8 = COPY $sgpr1
  ; DeadInstDelete-NEXT:   renamable $sgpr9 = COPY $sgpr2
  ; DeadInstDelete-NEXT:   renamable $sgpr2_sgpr3 = S_GETPC_B64_pseudo
  ; DeadInstDelete-NEXT:   renamable $sgpr10_sgpr11 = S_MOV_B64_IMM_PSEUDO -4294967296
  ; DeadInstDelete-NEXT:   renamable $sgpr2_sgpr3 = S_AND_B64 killed renamable $sgpr2_sgpr3, renamable $sgpr10_sgpr11, implicit-def dead $scc
  ; DeadInstDelete-NEXT:   renamable $sgpr1 = COPY killed renamable $sgpr10
  ; DeadInstDelete-NEXT:   renamable $sgpr10_sgpr11 = S_OR_B64 killed renamable $sgpr2_sgpr3, killed renamable $sgpr0_sgpr1, implicit-def dead $scc
  ; DeadInstDelete-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM renamable $sgpr10_sgpr11, 16, 0 :: (invariant load (<4 x s32>), addrspace 4)
  ; DeadInstDelete-NEXT:   renamable $sgpr7 = IMPLICIT_DEF
  ; DeadInstDelete-NEXT:   renamable $sgpr14 = S_LSHL_B32 renamable $sgpr7, 5, implicit-def dead $scc
  ; DeadInstDelete-NEXT:   renamable $vgpr1 = COPY renamable $sgpr14
  ; DeadInstDelete-NEXT:   renamable $vgpr1_vgpr2_vgpr3_vgpr4 = BUFFER_LOAD_DWORDX4_OFFEN killed renamable $vgpr1, renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, 0, implicit $exec :: (dereferenceable load (<4 x s32>), align 1, addrspace 8)
  ; DeadInstDelete-NEXT:   renamable $vgpr5 = V_MBCNT_LO_U32_B32_e64 -1, 0, implicit $exec
  ; DeadInstDelete-NEXT:   renamable $vgpr18 = V_MBCNT_HI_U32_B32_e64 -1, killed $vgpr5, implicit $exec
  ; DeadInstDelete-NEXT:   renamable $sgpr14 = S_OR_B32 killed renamable $sgpr14, 16, implicit-def dead $scc
  ; DeadInstDelete-NEXT:   renamable $vgpr5 = V_LSHLREV_B32_e64 5, $vgpr18, implicit $exec
  ; DeadInstDelete-NEXT:   renamable $vgpr6 = COPY killed renamable $sgpr14
  ; DeadInstDelete-NEXT:   renamable $vgpr7 = V_OR_B32_e64 16, $vgpr5, implicit $exec
  ; DeadInstDelete-NEXT:   renamable $vgpr14_vgpr15_vgpr16_vgpr17 = BUFFER_LOAD_DWORDX4_OFFEN killed renamable $vgpr6, renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, 0, implicit $exec :: (dereferenceable load (<4 x s32>), align 1, addrspace 8)
  ; DeadInstDelete-NEXT:   renamable $sgpr14 = V_READFIRSTLANE_B32 $vgpr1, implicit $exec
  ; DeadInstDelete-NEXT:   renamable $vgpr9_vgpr10_vgpr11_vgpr12 = BUFFER_LOAD_DWORDX4_OFFEN killed renamable $vgpr5, renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, 0, implicit $exec :: (dereferenceable load (<4 x s32>), align 1, addrspace 8)
  ; DeadInstDelete-NEXT:   renamable $sgpr15 = V_READFIRSTLANE_B32 $vgpr2, implicit $exec
  ; DeadInstDelete-NEXT:   renamable $sgpr16 = V_READFIRSTLANE_B32 $vgpr3, implicit $exec
  ; DeadInstDelete-NEXT:   renamable $sgpr17 = V_READFIRSTLANE_B32 killed $vgpr4, implicit $exec
  ; DeadInstDelete-NEXT:   renamable $vgpr5_vgpr6_vgpr7_vgpr8 = BUFFER_LOAD_DWORDX4_OFFEN killed renamable $vgpr7, renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, 0, implicit $exec :: (dereferenceable load (<4 x s32>), align 1, addrspace 8)
  ; DeadInstDelete-NEXT:   renamable $sgpr18 = V_READFIRSTLANE_B32 $vgpr9, implicit $exec
  ; DeadInstDelete-NEXT:   renamable $sgpr19 = V_READFIRSTLANE_B32 $vgpr10, implicit $exec
  ; DeadInstDelete-NEXT:   renamable $sgpr20 = V_READFIRSTLANE_B32 $vgpr11, implicit $exec
  ; DeadInstDelete-NEXT:   renamable $sgpr21 = V_READFIRSTLANE_B32 $vgpr12, implicit $exec
  ; DeadInstDelete-NEXT:   renamable $sgpr22 = V_READFIRSTLANE_B32 $vgpr5, implicit $exec
  ; DeadInstDelete-NEXT:   renamable $sgpr23 = V_READFIRSTLANE_B32 $vgpr6, implicit $exec
  ; DeadInstDelete-NEXT:   renamable $sgpr24 = V_READFIRSTLANE_B32 $vgpr7, implicit $exec
  ; DeadInstDelete-NEXT:   renamable $vgpr13 = COPY renamable $vgpr8
  ; DeadInstDelete-NEXT:   renamable $sgpr26 = V_READFIRSTLANE_B32 $vgpr14, implicit $exec
  ; DeadInstDelete-NEXT:   renamable $sgpr27 = V_READFIRSTLANE_B32 $vgpr15, implicit $exec
  ; DeadInstDelete-NEXT:   renamable $sgpr28 = V_READFIRSTLANE_B32 $vgpr16, implicit $exec
  ; DeadInstDelete-NEXT:   S_CMP_EQ_U64 killed renamable $sgpr14_sgpr15, killed renamable $sgpr18_sgpr19, implicit-def $scc
  ; DeadInstDelete-NEXT:   renamable $sgpr29 = V_READFIRSTLANE_B32 killed $vgpr17, implicit $exec
  ; DeadInstDelete-NEXT:   renamable $sgpr14 = S_CSELECT_B32 1, 0, implicit $scc
  ; DeadInstDelete-NEXT:   S_CMP_EQ_U64 killed renamable $sgpr16_sgpr17, killed renamable $sgpr20_sgpr21, implicit-def $scc
  ; DeadInstDelete-NEXT:   renamable $sgpr25 = V_READFIRSTLANE_B32 $vgpr13, implicit $exec
  ; DeadInstDelete-NEXT:   renamable $sgpr15 = S_CSELECT_B32 1, 0, implicit $scc
  ; DeadInstDelete-NEXT:   S_CMP_EQ_U64 killed renamable $sgpr26_sgpr27, killed renamable $sgpr22_sgpr23, implicit-def $scc
  ; DeadInstDelete-NEXT:   renamable $sgpr16 = S_CSELECT_B32 1, 0, implicit $scc
  ; DeadInstDelete-NEXT:   S_CMP_EQ_U64 killed renamable $sgpr28_sgpr29, killed renamable $sgpr24_sgpr25, implicit-def $scc
  ; DeadInstDelete-NEXT:   renamable $sgpr17 = S_CSELECT_B32 1, 0, implicit $scc
  ; DeadInstDelete-NEXT:   renamable $sgpr14 = S_AND_B32 killed renamable $sgpr14, killed renamable $sgpr15, implicit-def dead $scc
  ; DeadInstDelete-NEXT:   renamable $sgpr14 = S_AND_B32 killed renamable $sgpr16, killed renamable $sgpr14, implicit-def dead $scc
  ; DeadInstDelete-NEXT:   renamable $sgpr14 = S_AND_B32 killed renamable $sgpr17, killed renamable $sgpr14, implicit-def dead $scc
  ; DeadInstDelete-NEXT:   renamable $sgpr16_sgpr17 = V_CMP_NE_U32_e64 $sgpr7, killed $vgpr18, implicit $exec
  ; DeadInstDelete-NEXT:   renamable $sgpr14 = S_AND_B32 killed renamable $sgpr14, 1, implicit-def dead $scc
  ; DeadInstDelete-NEXT:   $scc = COPY killed renamable $sgpr14
  ; DeadInstDelete-NEXT:   renamable $sgpr14 = S_CSELECT_B32 1, 0, implicit $scc
  ; DeadInstDelete-NEXT:   renamable $sgpr12_sgpr13 = S_XOR_B64 killed renamable $sgpr16_sgpr17, killed renamable $sgpr12_sgpr13, implicit-def dead $scc
  ; DeadInstDelete-NEXT:   renamable $vgpr15 = IMPLICIT_DEF
  ; DeadInstDelete-NEXT:   renamable $sgpr16_sgpr17 = COPY $exec, implicit-def $exec
  ; DeadInstDelete-NEXT:   renamable $sgpr18_sgpr19 = S_AND_B64 renamable $sgpr16_sgpr17, killed renamable $sgpr12_sgpr13, implicit-def dead $scc
  ; DeadInstDelete-NEXT:   renamable $sgpr12_sgpr13 = S_XOR_B64 renamable $sgpr18_sgpr19, killed renamable $sgpr16_sgpr17, implicit-def dead $scc
  ; DeadInstDelete-NEXT:   $exec = S_MOV_B64_term killed renamable $sgpr18_sgpr19
  ; DeadInstDelete-NEXT:   S_CBRANCH_EXECZ %bb.1, implicit $exec
  ; DeadInstDelete-NEXT:   S_BRANCH %bb.2
  ; DeadInstDelete-NEXT: {{  $}}
  ; DeadInstDelete-NEXT: bb.1:
  ; DeadInstDelete-NEXT:   successors: %bb.3(0x40000000), %bb.5(0x40000000)
  ; DeadInstDelete-NEXT:   liveins: $sgpr4, $sgpr5, $sgpr6, $sgpr7, $sgpr14, $vgpr0, $vgpr15, $sgpr8_sgpr9:0x000000000000000F, $sgpr10_sgpr11, $sgpr12_sgpr13, $sgpr0_sgpr1_sgpr2_sgpr3, $vgpr13_vgpr14:0x0000000000000003, $vgpr9_vgpr10_vgpr11_vgpr12:0x00000000000000FF, $vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8:0x0000000000003F00
  ; DeadInstDelete-NEXT: {{  $}}
  ; DeadInstDelete-NEXT:   renamable $sgpr12_sgpr13 = S_OR_SAVEEXEC_B64 killed renamable $sgpr12_sgpr13, implicit-def $exec, implicit-def $scc, implicit $exec
  ; DeadInstDelete-NEXT:   $exec = S_XOR_B64_term $exec, renamable $sgpr12_sgpr13, implicit-def $scc
  ; DeadInstDelete-NEXT:   S_CBRANCH_EXECZ %bb.5, implicit $exec
  ; DeadInstDelete-NEXT:   S_BRANCH %bb.3
  ; DeadInstDelete-NEXT: {{  $}}
  ; DeadInstDelete-NEXT: bb.2:
  ; DeadInstDelete-NEXT:   successors: %bb.1(0x80000000)
  ; DeadInstDelete-NEXT:   liveins: $sgpr4, $sgpr5, $sgpr6, $sgpr7, $sgpr14, $vgpr0, $sgpr8_sgpr9:0x000000000000000F, $sgpr10_sgpr11, $sgpr12_sgpr13, $sgpr0_sgpr1_sgpr2_sgpr3
  ; DeadInstDelete-NEXT: {{  $}}
  ; DeadInstDelete-NEXT:   renamable $sgpr15 = S_OR_B32 renamable $sgpr14, 2, implicit-def dead $scc
  ; DeadInstDelete-NEXT:   renamable $vgpr15 = COPY killed renamable $sgpr15
  ; DeadInstDelete-NEXT:   renamable $vgpr9_vgpr10 = IMPLICIT_DEF
  ; DeadInstDelete-NEXT:   renamable $vgpr13_vgpr14 = IMPLICIT_DEF
  ; DeadInstDelete-NEXT:   renamable $vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8 = IMPLICIT_DEF
  ; DeadInstDelete-NEXT:   S_BRANCH %bb.1
  ; DeadInstDelete-NEXT: {{  $}}
  ; DeadInstDelete-NEXT: bb.3:
  ; DeadInstDelete-NEXT:   successors: %bb.5(0x80000000)
  ; DeadInstDelete-NEXT:   liveins: $sgpr4, $sgpr5, $sgpr6, $sgpr7, $sgpr14, $vgpr0, $sgpr8_sgpr9:0x000000000000000F, $sgpr10_sgpr11, $sgpr12_sgpr13, $sgpr0_sgpr1_sgpr2_sgpr3, $vgpr13_vgpr14:0x0000000000000003, $vgpr9_vgpr10_vgpr11_vgpr12:0x00000000000000FF, $vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7_vgpr8:0x0000000000003F00
  ; DeadInstDelete-NEXT: {{  $}}
  ; DeadInstDelete-NEXT:   renamable $sgpr7 = S_LSHL_B32 killed renamable $sgpr7, 5, implicit-def dead $scc
  ; DeadInstDelete-NEXT:   renamable $vgpr1 = COPY renamable $sgpr7
  ; DeadInstDelete-NEXT:   renamable $sgpr7 = S_OR_B32 killed renamable $sgpr7, 16, implicit-def dead $scc
  ; DeadInstDelete-NEXT:   renamable $sgpr16 = V_READFIRSTLANE_B32 $vgpr9, implicit $exec
  ; DeadInstDelete-NEXT:   renamable $vgpr8 = COPY killed renamable $sgpr7
  ; DeadInstDelete-NEXT:   renamable $vgpr1_vgpr2_vgpr3_vgpr4 = BUFFER_LOAD_DWORDX4_OFFEN killed renamable $vgpr1, renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, 0, implicit $exec :: (dereferenceable load (<4 x s32>), align 1, addrspace 8)
  ; DeadInstDelete-NEXT:   renamable $sgpr17 = V_READFIRSTLANE_B32 $vgpr10, implicit $exec
  ; DeadInstDelete-NEXT:   renamable $sgpr18 = V_READFIRSTLANE_B32 $vgpr11, implicit $exec
  ; DeadInstDelete-NEXT:   renamable $sgpr19 = V_READFIRSTLANE_B32 killed $vgpr12, implicit $exec
  ; DeadInstDelete-NEXT:   renamable $vgpr8_vgpr9_vgpr10_vgpr11 = BUFFER_LOAD_DWORDX4_OFFEN killed renamable $vgpr8, killed renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, 0, implicit $exec :: (dereferenceable load (<4 x s32>), align 1, addrspace 8)
  ; DeadInstDelete-NEXT:   renamable $sgpr0 = V_READFIRSTLANE_B32 $vgpr5, implicit $exec
  ; DeadInstDelete-NEXT:   renamable $sgpr1 = V_READFIRSTLANE_B32 $vgpr6, implicit $exec
  ; DeadInstDelete-NEXT:   renamable $sgpr2 = V_READFIRSTLANE_B32 killed $vgpr7, implicit $exec
  ; DeadInstDelete-NEXT:   renamable $sgpr3 = V_READFIRSTLANE_B32 killed $vgpr13, implicit $exec
  ; DeadInstDelete-NEXT:   renamable $sgpr20 = V_READFIRSTLANE_B32 $vgpr1, implicit $exec
  ; DeadInstDelete-NEXT:   renamable $sgpr21 = V_READFIRSTLANE_B32 $vgpr2, implicit $exec
  ; DeadInstDelete-NEXT:   renamable $sgpr22 = V_READFIRSTLANE_B32 $vgpr3, implicit $exec
  ; DeadInstDelete-NEXT:   renamable $sgpr23 = V_READFIRSTLANE_B32 killed $vgpr4, implicit $exec
  ; DeadInstDelete-NEXT:   renamable $sgpr24 = V_READFIRSTLANE_B32 $vgpr8, implicit $exec
  ; DeadInstDelete-NEXT:   renamable $sgpr25 = V_READFIRSTLANE_B32 $vgpr9, implicit $exec
  ; DeadInstDelete-NEXT:   S_CMP_EQ_U64 killed renamable $sgpr20_sgpr21, killed renamable $sgpr16_sgpr17, implicit-def $scc
  ; DeadInstDelete-NEXT:   renamable $sgpr16 = V_READFIRSTLANE_B32 $vgpr10, implicit $exec
  ; DeadInstDelete-NEXT:   renamable $sgpr7 = S_CSELECT_B32 1, 0, implicit $scc
  ; DeadInstDelete-NEXT:   S_CMP_EQ_U64 killed renamable $sgpr22_sgpr23, killed renamable $sgpr18_sgpr19, implicit-def $scc
  ; DeadInstDelete-NEXT:   renamable $sgpr17 = V_READFIRSTLANE_B32 killed $vgpr11, implicit $exec
  ; DeadInstDelete-NEXT:   renamable $sgpr15 = S_CSELECT_B32 1, 0, implicit $scc
  ; DeadInstDelete-NEXT:   S_CMP_EQ_U64 killed renamable $sgpr24_sgpr25, killed renamable $sgpr0_sgpr1, implicit-def $scc
  ; DeadInstDelete-NEXT:   renamable $sgpr0 = S_CSELECT_B32 1, 0, implicit $scc
  ; DeadInstDelete-NEXT:   S_CMP_EQ_U64 killed renamable $sgpr16_sgpr17, killed renamable $sgpr2_sgpr3, implicit-def $scc
  ; DeadInstDelete-NEXT:   renamable $sgpr1 = S_CSELECT_B32 1, 0, implicit $scc
  ; DeadInstDelete-NEXT:   renamable $sgpr2 = S_AND_B32 killed renamable $sgpr7, killed renamable $sgpr15, implicit-def dead $scc
  ; DeadInstDelete-NEXT:   renamable $sgpr0 = S_AND_B32 killed renamable $sgpr0, killed renamable $sgpr2, implicit-def dead $scc
  ; DeadInstDelete-NEXT:   renamable $sgpr0 = S_AND_B32 killed renamable $sgpr1, killed renamable $sgpr0, implicit-def dead $scc
  ; DeadInstDelete-NEXT:   renamable $sgpr0 = S_AND_B32 killed renamable $sgpr0, 1, implicit-def dead $scc
  ; DeadInstDelete-NEXT:   $scc = COPY killed renamable $sgpr0
  ; DeadInstDelete-NEXT:   renamable $sgpr0 = S_CSELECT_B32 1, 0, implicit $scc
  ; DeadInstDelete-NEXT:   renamable $sgpr0 = S_LSHL_B32 killed renamable $sgpr0, 1, implicit-def dead $scc
  ; DeadInstDelete-NEXT:   renamable $sgpr0 = S_OR_B32 killed renamable $sgpr0, killed renamable $sgpr14, implicit-def dead $scc
  ; DeadInstDelete-NEXT:   renamable $vgpr15 = COPY killed renamable $sgpr0
  ; DeadInstDelete-NEXT:   S_BRANCH %bb.5
  ; DeadInstDelete-NEXT: {{  $}}
  ; DeadInstDelete-NEXT: bb.4:
  ; DeadInstDelete-NEXT:   liveins: $sgpr4, $sgpr5, $sgpr6, $vgpr0, $vgpr15, $sgpr8_sgpr9:0x000000000000000F, $sgpr10_sgpr11
  ; DeadInstDelete-NEXT: {{  $}}
  ; DeadInstDelete-NEXT:   renamable $sgpr8_sgpr9 = S_LOAD_DWORDX2_IMM killed renamable $sgpr8_sgpr9, 0, 0 :: (invariant load (<2 x s32>), align 16, addrspace 4)
  ; DeadInstDelete-NEXT:   renamable $vgpr1 = COPY killed renamable $sgpr5
  ; DeadInstDelete-NEXT:   renamable $vgpr1_vgpr2, dead renamable $sgpr0_sgpr1 = V_MAD_U64_U32_e64 $sgpr9, killed $sgpr6, $vgpr1_vgpr2, 0, implicit $exec
  ; DeadInstDelete-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr10_sgpr11, 0, 0 :: (invariant load (<4 x s32>), addrspace 4)
  ; DeadInstDelete-NEXT:   renamable $sgpr5 = S_LSHL_B32 killed renamable $sgpr8, 6, implicit-def dead $scc
  ; DeadInstDelete-NEXT:   renamable $vgpr1 = V_MUL_LO_U32_e64 killed $vgpr1, killed $sgpr5, implicit $exec
  ; DeadInstDelete-NEXT:   renamable $sgpr4 = S_LSHL_B32 killed renamable $sgpr4, 6, implicit-def dead $scc
  ; DeadInstDelete-NEXT:   renamable $vgpr0 = V_ADD_U32_e64 killed $sgpr4, killed $vgpr0, 0, implicit $exec
  ; DeadInstDelete-NEXT:   renamable $vgpr0 = V_ADD_LSHL_U32_e64 killed $vgpr1, killed $vgpr0, 2, implicit $exec
  ; DeadInstDelete-NEXT:   BUFFER_STORE_DWORD_OFFEN_exact killed renamable $vgpr15, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, 0, implicit $exec :: (dereferenceable store (s32), align 1, addrspace 8)
  ; DeadInstDelete-NEXT:   S_ENDPGM 0
  ; DeadInstDelete-NEXT: {{  $}}
  ; DeadInstDelete-NEXT: bb.5:
  ; DeadInstDelete-NEXT:   successors: %bb.4(0x80000000)
  ; DeadInstDelete-NEXT:   liveins: $sgpr4, $sgpr5, $sgpr6, $vgpr0, $vgpr15, $sgpr8_sgpr9:0x000000000000000F, $sgpr10_sgpr11, $sgpr12_sgpr13
  ; DeadInstDelete-NEXT: {{  $}}
  ; DeadInstDelete-NEXT:   $exec = S_OR_B64 $exec, killed renamable $sgpr12_sgpr13, implicit-def $scc
  ; DeadInstDelete-NEXT:   S_BRANCH %bb.4
  bb.39:
    successors: %bb.82(0x40000000), %bb.40(0x40000000)
    liveins: $sgpr0, $sgpr1, $sgpr2, $sgpr3, $sgpr4, $sgpr5, $sgpr6, $sgpr7, $vgpr0, $vgpr1, $vgpr2

    %11:vgpr_32 = COPY $vgpr0
    undef %1.sub0:sreg_64 = COPY $sgpr1
    %1.sub1:sreg_64 = COPY $sgpr2
    undef %18.sub0:sreg_64 = COPY $sgpr3
    %8:sreg_32 = COPY $sgpr4
    %9:sreg_32 = COPY $sgpr5
    %10:sreg_32 = COPY $sgpr6
    %15:sreg_64 = S_GETPC_B64_pseudo
    undef %16.sub0:sreg_64 = S_MOV_B32 0
    %16.sub1:sreg_64 = S_MOV_B32 -1
    %17:sreg_64 = S_AND_B64 %15, %16, implicit-def dead $scc
    %18.sub1:sreg_64 = COPY %16.sub0
    %19:sreg_64 = S_OR_B64 %17, %18, implicit-def dead $scc
    %23:sgpr_128 = S_LOAD_DWORDX4_IMM %19, 16, 0 :: (invariant load (<4 x s32>), addrspace 4)
    %1865:sreg_32 = IMPLICIT_DEF
    %218:vgpr_32 = V_MBCNT_LO_U32_B32_e64 -1, 0, implicit $exec
    %221:vgpr_32 = V_MBCNT_HI_U32_B32_e64 -1, %218, implicit $exec
    %223:vgpr_32 = V_LSHLREV_B32_e64 5, %221, implicit $exec
    undef %573.sub0_sub1_sub2_sub3:vreg_256 = BUFFER_LOAD_DWORDX4_OFFEN %223, %23, 0, 0, 0, 0, implicit $exec :: (dereferenceable load (<4 x s32>), align 1, addrspace 8)
    %226:vgpr_32 = V_OR_B32_e64 16, %223, implicit $exec
    %573.sub4_sub5_sub6_sub7:vreg_256 = BUFFER_LOAD_DWORDX4_OFFEN %226, %23, 0, 0, 0, 0, implicit $exec :: (dereferenceable load (<4 x s32>), align 1, addrspace 8)
    undef %245.sub0:sreg_64 = V_READFIRSTLANE_B32 %573.sub0, implicit $exec
    %245.sub1:sreg_64 = V_READFIRSTLANE_B32 %573.sub1, implicit $exec
    undef %253.sub0:sreg_64 = V_READFIRSTLANE_B32 %573.sub2, implicit $exec
    %253.sub1:sreg_64 = V_READFIRSTLANE_B32 %573.sub3, implicit $exec
    undef %261.sub0:sreg_64 = V_READFIRSTLANE_B32 %573.sub4, implicit $exec
    %261.sub1:sreg_64 = V_READFIRSTLANE_B32 %573.sub5, implicit $exec
    undef %269.sub0:sreg_64 = V_READFIRSTLANE_B32 %573.sub6, implicit $exec
    undef %1853.sub0:vreg_64 = COPY %573.sub7
    %269.sub1:sreg_64 = V_READFIRSTLANE_B32 %1853.sub0, implicit $exec
    %271:sreg_32 = S_LSHL_B32 %1865, 5, implicit-def dead $scc
    %1328:vgpr_32 = COPY %271
    %1329:vreg_128 = BUFFER_LOAD_DWORDX4_OFFEN %1328, %23, 0, 0, 0, 0, implicit $exec :: (dereferenceable load (<4 x s32>), align 1, addrspace 8)
    undef %574.sub0:sgpr_256 = V_READFIRSTLANE_B32 %1329.sub0, implicit $exec
    %574.sub1:sgpr_256 = V_READFIRSTLANE_B32 %1329.sub1, implicit $exec
    %574.sub2:sgpr_256 = V_READFIRSTLANE_B32 %1329.sub2, implicit $exec
    %574.sub3:sgpr_256 = V_READFIRSTLANE_B32 %1329.sub3, implicit $exec
    %273:sreg_32 = S_OR_B32 %271, 16, implicit-def dead $scc
    %1339:vgpr_32 = COPY %273
    %1340:vreg_128 = BUFFER_LOAD_DWORDX4_OFFEN %1339, %23, 0, 0, 0, 0, implicit $exec :: (dereferenceable load (<4 x s32>), align 1, addrspace 8)
    %574.sub4:sgpr_256 = V_READFIRSTLANE_B32 %1340.sub0, implicit $exec
    %574.sub5:sgpr_256 = V_READFIRSTLANE_B32 %1340.sub1, implicit $exec
    %574.sub6:sgpr_256 = V_READFIRSTLANE_B32 %1340.sub2, implicit $exec
    %574.sub7:sgpr_256 = V_READFIRSTLANE_B32 %1340.sub3, implicit $exec
    S_CMP_EQ_U64 %574.sub0_sub1, %245, implicit-def $scc
    %1349:sreg_32 = S_CSELECT_B32 1, 0, implicit killed $scc
    S_CMP_EQ_U64 %574.sub2_sub3, %253, implicit-def $scc
    %1350:sreg_32 = S_CSELECT_B32 1, 0, implicit killed $scc
    S_CMP_EQ_U64 %574.sub4_sub5, %261, implicit-def $scc
    %1351:sreg_32 = S_CSELECT_B32 1, 0, implicit killed $scc
    S_CMP_EQ_U64 %574.sub6_sub7, %269, implicit-def $scc
    %1352:sreg_32 = S_CSELECT_B32 1, 0, implicit killed $scc
    %1355:sreg_32 = S_AND_B32 %1349, %1350, implicit-def dead $scc
    %1358:sreg_32 = S_AND_B32 %1351, %1355, implicit-def dead $scc
    %1361:sreg_32 = S_AND_B32 %1352, %1358, implicit-def dead $scc
    %1366:sreg_32 = S_AND_B32 %1361, 1, implicit-def dead $scc
    $scc = COPY %1366
    %288:sreg_32 = S_CSELECT_B32 1, 0, implicit killed $scc
    %289:sreg_64_xexec = V_CMP_NE_U32_e64 %1865, %221, implicit $exec
    %1369:sreg_64_xexec = COPY $exec
    %291:sreg_64_xexec = S_XOR_B64 %289, %1369, implicit-def dead $scc
    %1968:vgpr_32 = IMPLICIT_DEF
    %2081:sreg_64 = COPY $exec, implicit-def $exec
    %2082:sreg_64 = S_AND_B64 %2081, %291, implicit-def dead $scc
    %293:sreg_64_xexec = S_XOR_B64 %2082, %2081, implicit-def dead $scc
    $exec = S_MOV_B64_term %2082
    S_CBRANCH_EXECZ %bb.40, implicit $exec
    S_BRANCH %bb.82

  bb.40:
    successors: %bb.81(0x40000000), %bb.42(0x40000000)

    %2083:sreg_64 = S_OR_SAVEEXEC_B64 %293, implicit-def $exec, implicit-def $scc, implicit $exec
    %297:sreg_64_xexec = S_AND_B64 $exec, %2083, implicit-def $scc
    $exec = S_XOR_B64_term $exec, %297, implicit-def $scc
    S_CBRANCH_EXECZ %bb.42, implicit $exec
    S_BRANCH %bb.81

  bb.82:
    successors: %bb.40(0x80000000)

    %294:sreg_32 = S_OR_B32 %288, 2, implicit-def dead $scc
    %1968:vgpr_32 = COPY %294
    undef %573.sub0_sub1:vreg_256 = IMPLICIT_DEF
    %1853:vreg_64 = IMPLICIT_DEF
    S_BRANCH %bb.40

  bb.81:
    successors: %bb.42(0x80000000)

    undef %484.sub0:sreg_64 = V_READFIRSTLANE_B32 %573.sub0, implicit $exec
    %484.sub1:sreg_64 = V_READFIRSTLANE_B32 %573.sub1, implicit $exec
    undef %489.sub0:sreg_64 = V_READFIRSTLANE_B32 %573.sub2, implicit $exec
    %489.sub1:sreg_64 = V_READFIRSTLANE_B32 %573.sub3, implicit $exec
    undef %494.sub0:sreg_64 = V_READFIRSTLANE_B32 %573.sub4, implicit $exec
    %494.sub1:sreg_64 = V_READFIRSTLANE_B32 %573.sub5, implicit $exec
    undef %499.sub0:sreg_64 = V_READFIRSTLANE_B32 %573.sub6, implicit $exec
    %499.sub1:sreg_64 = V_READFIRSTLANE_B32 %1853.sub0, implicit $exec
    %501:sreg_32 = S_LSHL_B32 %1865, 5, implicit-def dead $scc
    %1761:vgpr_32 = COPY %501
    %1762:vreg_128 = BUFFER_LOAD_DWORDX4_OFFEN %1761, %23, 0, 0, 0, 0, implicit $exec :: (dereferenceable load (<4 x s32>), align 1, addrspace 8)
    undef %607.sub0:sgpr_256 = V_READFIRSTLANE_B32 %1762.sub0, implicit $exec
    %607.sub1:sgpr_256 = V_READFIRSTLANE_B32 %1762.sub1, implicit $exec
    %607.sub2:sgpr_256 = V_READFIRSTLANE_B32 %1762.sub2, implicit $exec
    %607.sub3:sgpr_256 = V_READFIRSTLANE_B32 %1762.sub3, implicit $exec
    %503:sreg_32 = S_OR_B32 %501, 16, implicit-def dead $scc
    %1772:vgpr_32 = COPY %503
    %1773:vreg_128 = BUFFER_LOAD_DWORDX4_OFFEN %1772, %23, 0, 0, 0, 0, implicit $exec :: (dereferenceable load (<4 x s32>), align 1, addrspace 8)
    %607.sub4:sgpr_256 = V_READFIRSTLANE_B32 %1773.sub0, implicit $exec
    %607.sub5:sgpr_256 = V_READFIRSTLANE_B32 %1773.sub1, implicit $exec
    %607.sub6:sgpr_256 = V_READFIRSTLANE_B32 %1773.sub2, implicit $exec
    %607.sub7:sgpr_256 = V_READFIRSTLANE_B32 %1773.sub3, implicit $exec
    S_CMP_EQ_U64 %607.sub0_sub1, %484, implicit-def $scc
    %1782:sreg_32 = S_CSELECT_B32 1, 0, implicit killed $scc
    S_CMP_EQ_U64 %607.sub2_sub3, %489, implicit-def $scc
    %1783:sreg_32 = S_CSELECT_B32 1, 0, implicit killed $scc
    S_CMP_EQ_U64 %607.sub4_sub5, %494, implicit-def $scc
    %1784:sreg_32 = S_CSELECT_B32 1, 0, implicit killed $scc
    S_CMP_EQ_U64 %607.sub6_sub7, %499, implicit-def $scc
    %1785:sreg_32 = S_CSELECT_B32 1, 0, implicit killed $scc
    %1788:sreg_32 = S_AND_B32 %1782, %1783, implicit-def dead $scc
    %1791:sreg_32 = S_AND_B32 %1784, %1788, implicit-def dead $scc
    %1794:sreg_32 = S_AND_B32 %1785, %1791, implicit-def dead $scc
    %1799:sreg_32 = S_AND_B32 %1794, 1, implicit-def dead $scc
    $scc = COPY %1799
    %608:sreg_32 = S_CSELECT_B32 1, 0, implicit killed $scc
    %518:sreg_32 = S_LSHL_B32 %608, 1, implicit-def dead $scc
    %519:sreg_32 = S_OR_B32 %518, %288, implicit-def dead $scc
    %1968:vgpr_32 = COPY %519
    S_BRANCH %bb.42


  bb.83:
    %521:sreg_64_xexec = S_LOAD_DWORDX2_IMM %1, 0, 0 :: (invariant load (<2 x s32>), align 16, addrspace 4)
    %530:sreg_32 = S_LSHL_B32 %8, 6, implicit-def dead $scc
    %531:vgpr_32 = V_ADD_U32_e64 %530, %11, 0, implicit $exec
    %532:sreg_32 = S_LSHL_B32 %521.sub0, 6, implicit-def dead $scc
    undef %1829.sub0:vreg_64 = COPY %9
    %1832:vreg_64, dead %1831:sreg_64 = V_MAD_U64_U32_e64 %521.sub1, %10, %1829, 0, implicit $exec
    %1809:vgpr_32 = V_MUL_LO_U32_e64 %1832.sub0, %532, implicit $exec
    %537:sgpr_128 = S_LOAD_DWORDX4_IMM %19, 0, 0 :: (invariant load (<4 x s32>), addrspace 4)
    %538:vgpr_32 = V_ADD_LSHL_U32_e64 %1809, %531, 2, implicit $exec
    BUFFER_STORE_DWORD_OFFEN_exact %1968, %538, %537, 0, 0, 0, 0, implicit $exec :: (dereferenceable store (s32), align 1, addrspace 8)
    S_ENDPGM 0

  bb.42:
    successors: %bb.83(0x80000000)

    $exec = S_OR_B64 $exec, %297, implicit-def $scc
    S_BRANCH %bb.83

...
