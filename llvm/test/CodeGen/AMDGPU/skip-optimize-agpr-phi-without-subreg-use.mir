# RUN: llc -mtriple=amdgcn-amd-amdhsa -mcpu=gfx908 -verify-machineinstrs -run-pass si-fold-operands -o - %s | FileCheck %s

# CHECK-NOT: V_ACCVGPR_READ_B32_e64

---
name:            skip_optimize_agpr_phi_without_subreg_use
tracksRegLiveness: true
machineFunctionInfo:
  isEntryFunction: true
  scratchRSrcReg:  '$sgpr0_sgpr1_sgpr2_sgpr3'
body:             |
  bb.0:
    successors: %bb.1(0x80000000)

    %0:vgpr_32 = V_MOV_B32_e32 0, implicit $exec
    %1:sgpr_32 = S_MOV_B32 0
    %2:sgpr_128 = REG_SEQUENCE %1, %subreg.sub0, %1, %subreg.sub1, %1, %subreg.sub2, %1, %subreg.sub3
    %3:vreg_128 = COPY %2
    %4:sreg_64 = S_MOV_B64 0
    %5:areg_128 = COPY %3, implicit $exec
    %6:sreg_32 = S_MOV_B32 1

  bb.1:
    successors: %bb.1(0x80000000)

    %7:sreg_64 = PHI %4, %bb.0, %8, %bb.1
    %9:areg_128 = PHI %5, %bb.0, %10, %bb.1
    %11:areg_128 = V_MFMA_F32_16X16X4F32_e64 %0, %0, %9, 0, 0, 0, implicit $mode, implicit $exec
    %12:vgpr_32 = COPY %11.sub3
    %13:vgpr_32 = COPY %11.sub2
    %14:vgpr_32 = COPY %11.sub1
    %15:vgpr_32 = COPY %11.sub0
    %16:vgpr_32 = BUFFER_LOAD_DWORD_OFFSET $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, 0, implicit $exec
    %17:sreg_64 = V_CMP_LT_I32_e64 killed %16, %6, implicit $exec
    %8:sreg_64 = SI_IF_BREAK killed %17, %7, implicit-def dead $scc
    %10:areg_128 = COPY %11, implicit $exec
    SI_LOOP %8, %bb.1, implicit-def dead $exec, implicit-def dead $scc, implicit $exec
    SI_RETURN

...
