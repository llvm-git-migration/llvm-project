; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 5
; RUN: llc -mtriple=amdgcn -mcpu=gfx1200 -verify-machineinstrs < %s 2>&1 | FileCheck %s

target datalayout = "e-p:64:64-p1:64:64-p2:32:32-p3:32:32-p4:64:64-p5:32:32-p6:32:32-p7:160:256:256:32-p8:128:128-p9:192:256:256:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-S32-A5-G1-ni:7:8:9"
target triple = "amdgcn--amdpal"

define amdgpu_ps void @_amdgpu_ps_main() {
; CHECK-LABEL: _amdgpu_ps_main:
; CHECK:       ; %bb.0: ; %.entry
; CHECK-NEXT:    s_mov_b32 s0, 0
; CHECK-NEXT:    s_mov_b32 s4, exec_lo
; CHECK-NEXT:    s_mov_b32 s1, s0
; CHECK-NEXT:    s_mov_b32 s2, s0
; CHECK-NEXT:    s_mov_b32 s3, s0
; CHECK-NEXT:    s_buffer_load_b32 s0, s[0:3], 0x0
; CHECK-NEXT:    s_wait_kmcnt 0x0
; CHECK-NEXT:    s_cmp_nlt_f32 s0, 0
; CHECK-NEXT:    s_cselect_b32 s1, -1, 0
; CHECK-NEXT:    s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(SALU_CYCLE_1)
; CHECK-NEXT:    s_and_not1_b32 s1, exec_lo, s1
; CHECK-NEXT:    s_and_not1_b32 s4, s4, s1
; CHECK-NEXT:    s_cbranch_scc0 .LBB0_2
; CHECK-NEXT:  ; %bb.1: ; %.entry
; CHECK-NEXT:    s_and_b32 exec_lo, exec_lo, s4
; CHECK-NEXT:    s_cmp_lt_f32 s0, 0
; CHECK-NEXT:    s_endpgm
; CHECK-NEXT:  .LBB0_2:
; CHECK-NEXT:    s_mov_b32 exec_lo, 0
; CHECK-NEXT:    export mrt0 off, off, off, off done
; CHECK-NEXT:    s_endpgm
.entry:
  %0 = call i32 @llvm.amdgcn.s.buffer.load.i32(<4 x i32> zeroinitializer, i32 0, i32 0)
  %1 = bitcast i32 %0 to float
  %2 = fcmp uge float %1, 0.000000e+00
  call void @llvm.amdgcn.kill(i1 %2)
  br i1 %2, label %3, label %8

3:                                                ; preds = %.entry
  %4 = call i64 @llvm.amdgcn.s.getpc()
  %5 = and i64 %4, 1
  %6 = inttoptr i64 %5 to ptr addrspace(4)
  %7 = getelementptr i8, ptr addrspace(4) %6, i64 32
  br label %8

8:                                                ; preds = %3, %.entry
  ret void
}

; Function Attrs: nocallback nofree nounwind
declare void @llvm.amdgcn.kill(i1) #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i64 @llvm.amdgcn.s.getpc() #1

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(none)
declare i32 @llvm.amdgcn.s.buffer.load.i32(<4 x i32>, i32, i32 immarg) #2

attributes #0 = { nocallback nofree nounwind }
attributes #1 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { nocallback nofree nosync nounwind willreturn memory(none) }
