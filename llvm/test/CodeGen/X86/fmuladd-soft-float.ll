; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 5
; RUN: llc -mtriple=i386 --fp-contract off < %s | FileCheck %s -check-prefix=SOFT-FLOAT-32-FPC-OFF
; RUN: llc -mtriple=i386 --fp-contract on < %s | FileCheck %s -check-prefix=SOFT-FLOAT-32-FPC-ON
; RUN: llc -mtriple=i386 --fp-contract fast < %s | FileCheck %s -check-prefix=SOFT-FLOAT-32-FPC-FAST
; RUN: llc -mtriple=i386 -mattr +fma --fp-contract off < %s | FileCheck %s -check-prefix=SOFT-FLOAT-32-FMA-FPC-OFF
; RUN: llc -mtriple=i386 -mattr +fma --fp-contract on < %s | FileCheck %s -check-prefix=SOFT-FLOAT-32-FMA-FPC-ON
; RUN: llc -mtriple=i386 -mattr +fma --fp-contract fast < %s | FileCheck %s -check-prefix=SOFT-FLOAT-32-FMA-FPC-FAST
; RUN: llc -mtriple=i386 -mattr +fma4 --fp-contract off < %s | FileCheck %s -check-prefix=SOFT-FLOAT-32-FMA4-FPC-OFF
; RUN: llc -mtriple=i386 -mattr +fma4 --fp-contract on < %s | FileCheck %s -check-prefix=SOFT-FLOAT-32-FMA4-FPC-ON
; RUN: llc -mtriple=i386 -mattr +fma4 --fp-contract fast < %s | FileCheck %s -check-prefix=SOFT-FLOAT-32-FMA4-FPC-FAST
; RUN: llc -mtriple=x86_64 --fp-contract off < %s | FileCheck %s -check-prefix=SOFT-FLOAT-64-FPC-OFF
; RUN: llc -mtriple=x86_64 --fp-contract on < %s | FileCheck %s -check-prefix=SOFT-FLOAT-64-FPC-ON
; RUN: llc -mtriple=x86_64 --fp-contract fast < %s | FileCheck %s -check-prefix=SOFT-FLOAT-64-FPC-FAST
; RUN: llc -mtriple=x86_64 -mattr +fma --fp-contract off < %s | FileCheck %s -check-prefix=SOFT-FLOAT-64-FMA-FPC-OFF
; RUN: llc -mtriple=x86_64 -mattr +fma --fp-contract on < %s | FileCheck %s -check-prefix=SOFT-FLOAT-64-FMA-FPC-ON
; RUN: llc -mtriple=x86_64 -mattr +fma --fp-contract fast < %s | FileCheck %s -check-prefix=SOFT-FLOAT-64-FMA-FPC-FAST
; RUN: llc -mtriple=x86_64 -mattr +fma4 --fp-contract off < %s | FileCheck %s -check-prefix=SOFT-FLOAT-64-FMA4-FPC-OFF
; RUN: llc -mtriple=x86_64 -mattr +fma4 --fp-contract on < %s | FileCheck %s -check-prefix=SOFT-FLOAT-64-FMA4-FPC-ON
; RUN: llc -mtriple=x86_64 -mattr +fma4 --fp-contract fast < %s | FileCheck %s -check-prefix=SOFT-FLOAT-64-FMA4-FPC-FAST

define float @fmuladd_intrinsic_f32(float %a, float %b, float %c) #0 {
; SOFT-FLOAT-32-FPC-OFF-LABEL: fmuladd_intrinsic_f32:
; SOFT-FLOAT-32-FPC-OFF:       # %bb.0:
; SOFT-FLOAT-32-FPC-OFF-NEXT:    pushl %esi
; SOFT-FLOAT-32-FPC-OFF-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-32-FPC-OFF-NEXT:    .cfi_offset %esi, -8
; SOFT-FLOAT-32-FPC-OFF-NEXT:    movl {{[0-9]+}}(%esp), %esi
; SOFT-FLOAT-32-FPC-OFF-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-OFF-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-OFF-NEXT:    calll __mulsf3
; SOFT-FLOAT-32-FPC-OFF-NEXT:    addl $8, %esp
; SOFT-FLOAT-32-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset -8
; SOFT-FLOAT-32-FPC-OFF-NEXT:    pushl %esi
; SOFT-FLOAT-32-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-OFF-NEXT:    pushl %eax
; SOFT-FLOAT-32-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-OFF-NEXT:    calll __addsf3
; SOFT-FLOAT-32-FPC-OFF-NEXT:    addl $8, %esp
; SOFT-FLOAT-32-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset -8
; SOFT-FLOAT-32-FPC-OFF-NEXT:    popl %esi
; SOFT-FLOAT-32-FPC-OFF-NEXT:    .cfi_def_cfa_offset 4
; SOFT-FLOAT-32-FPC-OFF-NEXT:    retl
;
; SOFT-FLOAT-32-FPC-ON-LABEL: fmuladd_intrinsic_f32:
; SOFT-FLOAT-32-FPC-ON:       # %bb.0:
; SOFT-FLOAT-32-FPC-ON-NEXT:    pushl %esi
; SOFT-FLOAT-32-FPC-ON-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-32-FPC-ON-NEXT:    .cfi_offset %esi, -8
; SOFT-FLOAT-32-FPC-ON-NEXT:    movl {{[0-9]+}}(%esp), %esi
; SOFT-FLOAT-32-FPC-ON-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-ON-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-ON-NEXT:    calll __mulsf3
; SOFT-FLOAT-32-FPC-ON-NEXT:    addl $8, %esp
; SOFT-FLOAT-32-FPC-ON-NEXT:    .cfi_adjust_cfa_offset -8
; SOFT-FLOAT-32-FPC-ON-NEXT:    pushl %esi
; SOFT-FLOAT-32-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-ON-NEXT:    pushl %eax
; SOFT-FLOAT-32-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-ON-NEXT:    calll __addsf3
; SOFT-FLOAT-32-FPC-ON-NEXT:    addl $8, %esp
; SOFT-FLOAT-32-FPC-ON-NEXT:    .cfi_adjust_cfa_offset -8
; SOFT-FLOAT-32-FPC-ON-NEXT:    popl %esi
; SOFT-FLOAT-32-FPC-ON-NEXT:    .cfi_def_cfa_offset 4
; SOFT-FLOAT-32-FPC-ON-NEXT:    retl
;
; SOFT-FLOAT-32-FPC-FAST-LABEL: fmuladd_intrinsic_f32:
; SOFT-FLOAT-32-FPC-FAST:       # %bb.0:
; SOFT-FLOAT-32-FPC-FAST-NEXT:    pushl %esi
; SOFT-FLOAT-32-FPC-FAST-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-32-FPC-FAST-NEXT:    .cfi_offset %esi, -8
; SOFT-FLOAT-32-FPC-FAST-NEXT:    movl {{[0-9]+}}(%esp), %esi
; SOFT-FLOAT-32-FPC-FAST-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-FAST-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-FAST-NEXT:    calll __mulsf3
; SOFT-FLOAT-32-FPC-FAST-NEXT:    addl $8, %esp
; SOFT-FLOAT-32-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset -8
; SOFT-FLOAT-32-FPC-FAST-NEXT:    pushl %esi
; SOFT-FLOAT-32-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-FAST-NEXT:    pushl %eax
; SOFT-FLOAT-32-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-FAST-NEXT:    calll __addsf3
; SOFT-FLOAT-32-FPC-FAST-NEXT:    addl $8, %esp
; SOFT-FLOAT-32-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset -8
; SOFT-FLOAT-32-FPC-FAST-NEXT:    popl %esi
; SOFT-FLOAT-32-FPC-FAST-NEXT:    .cfi_def_cfa_offset 4
; SOFT-FLOAT-32-FPC-FAST-NEXT:    retl
;
; SOFT-FLOAT-32-FMA-FPC-OFF-LABEL: fmuladd_intrinsic_f32:
; SOFT-FLOAT-32-FMA-FPC-OFF:       # %bb.0:
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    pushl %esi
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    .cfi_offset %esi, -8
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    movl {{[0-9]+}}(%esp), %esi
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    calll __mulsf3
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    addl $8, %esp
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset -8
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    pushl %esi
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    pushl %eax
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    calll __addsf3
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    addl $8, %esp
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset -8
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    popl %esi
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    .cfi_def_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    retl
;
; SOFT-FLOAT-32-FMA-FPC-ON-LABEL: fmuladd_intrinsic_f32:
; SOFT-FLOAT-32-FMA-FPC-ON:       # %bb.0:
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    pushl %esi
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    .cfi_offset %esi, -8
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    movl {{[0-9]+}}(%esp), %esi
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    calll __mulsf3
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    addl $8, %esp
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    .cfi_adjust_cfa_offset -8
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    pushl %esi
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    pushl %eax
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    calll __addsf3
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    addl $8, %esp
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    .cfi_adjust_cfa_offset -8
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    popl %esi
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    .cfi_def_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    retl
;
; SOFT-FLOAT-32-FMA-FPC-FAST-LABEL: fmuladd_intrinsic_f32:
; SOFT-FLOAT-32-FMA-FPC-FAST:       # %bb.0:
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    pushl %esi
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    .cfi_offset %esi, -8
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    movl {{[0-9]+}}(%esp), %esi
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    calll __mulsf3
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    addl $8, %esp
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset -8
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    pushl %esi
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    pushl %eax
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    calll __addsf3
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    addl $8, %esp
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset -8
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    popl %esi
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    .cfi_def_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    retl
;
; SOFT-FLOAT-32-FMA4-FPC-OFF-LABEL: fmuladd_intrinsic_f32:
; SOFT-FLOAT-32-FMA4-FPC-OFF:       # %bb.0:
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    pushl %esi
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    .cfi_offset %esi, -8
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    movl {{[0-9]+}}(%esp), %esi
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    calll __mulsf3
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    addl $8, %esp
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset -8
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    pushl %esi
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    pushl %eax
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    calll __addsf3
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    addl $8, %esp
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset -8
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    popl %esi
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    .cfi_def_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    retl
;
; SOFT-FLOAT-32-FMA4-FPC-ON-LABEL: fmuladd_intrinsic_f32:
; SOFT-FLOAT-32-FMA4-FPC-ON:       # %bb.0:
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    pushl %esi
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    .cfi_offset %esi, -8
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    movl {{[0-9]+}}(%esp), %esi
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    calll __mulsf3
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    addl $8, %esp
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    .cfi_adjust_cfa_offset -8
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    pushl %esi
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    pushl %eax
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    calll __addsf3
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    addl $8, %esp
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    .cfi_adjust_cfa_offset -8
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    popl %esi
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    .cfi_def_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    retl
;
; SOFT-FLOAT-32-FMA4-FPC-FAST-LABEL: fmuladd_intrinsic_f32:
; SOFT-FLOAT-32-FMA4-FPC-FAST:       # %bb.0:
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    pushl %esi
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    .cfi_offset %esi, -8
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    movl {{[0-9]+}}(%esp), %esi
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    calll __mulsf3
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    addl $8, %esp
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset -8
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    pushl %esi
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    pushl %eax
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    calll __addsf3
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    addl $8, %esp
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset -8
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    popl %esi
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    .cfi_def_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    retl
;
; SOFT-FLOAT-64-FPC-OFF-LABEL: fmuladd_intrinsic_f32:
; SOFT-FLOAT-64-FPC-OFF:       # %bb.0:
; SOFT-FLOAT-64-FPC-OFF-NEXT:    pushq %rbx
; SOFT-FLOAT-64-FPC-OFF-NEXT:    .cfi_def_cfa_offset 16
; SOFT-FLOAT-64-FPC-OFF-NEXT:    .cfi_offset %rbx, -16
; SOFT-FLOAT-64-FPC-OFF-NEXT:    movl %edx, %ebx
; SOFT-FLOAT-64-FPC-OFF-NEXT:    callq __mulsf3@PLT
; SOFT-FLOAT-64-FPC-OFF-NEXT:    movl %eax, %edi
; SOFT-FLOAT-64-FPC-OFF-NEXT:    movl %ebx, %esi
; SOFT-FLOAT-64-FPC-OFF-NEXT:    callq __addsf3@PLT
; SOFT-FLOAT-64-FPC-OFF-NEXT:    popq %rbx
; SOFT-FLOAT-64-FPC-OFF-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-64-FPC-OFF-NEXT:    retq
;
; SOFT-FLOAT-64-FPC-ON-LABEL: fmuladd_intrinsic_f32:
; SOFT-FLOAT-64-FPC-ON:       # %bb.0:
; SOFT-FLOAT-64-FPC-ON-NEXT:    pushq %rbx
; SOFT-FLOAT-64-FPC-ON-NEXT:    .cfi_def_cfa_offset 16
; SOFT-FLOAT-64-FPC-ON-NEXT:    .cfi_offset %rbx, -16
; SOFT-FLOAT-64-FPC-ON-NEXT:    movl %edx, %ebx
; SOFT-FLOAT-64-FPC-ON-NEXT:    callq __mulsf3@PLT
; SOFT-FLOAT-64-FPC-ON-NEXT:    movl %eax, %edi
; SOFT-FLOAT-64-FPC-ON-NEXT:    movl %ebx, %esi
; SOFT-FLOAT-64-FPC-ON-NEXT:    callq __addsf3@PLT
; SOFT-FLOAT-64-FPC-ON-NEXT:    popq %rbx
; SOFT-FLOAT-64-FPC-ON-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-64-FPC-ON-NEXT:    retq
;
; SOFT-FLOAT-64-FPC-FAST-LABEL: fmuladd_intrinsic_f32:
; SOFT-FLOAT-64-FPC-FAST:       # %bb.0:
; SOFT-FLOAT-64-FPC-FAST-NEXT:    pushq %rbx
; SOFT-FLOAT-64-FPC-FAST-NEXT:    .cfi_def_cfa_offset 16
; SOFT-FLOAT-64-FPC-FAST-NEXT:    .cfi_offset %rbx, -16
; SOFT-FLOAT-64-FPC-FAST-NEXT:    movl %edx, %ebx
; SOFT-FLOAT-64-FPC-FAST-NEXT:    callq __mulsf3@PLT
; SOFT-FLOAT-64-FPC-FAST-NEXT:    movl %eax, %edi
; SOFT-FLOAT-64-FPC-FAST-NEXT:    movl %ebx, %esi
; SOFT-FLOAT-64-FPC-FAST-NEXT:    callq __addsf3@PLT
; SOFT-FLOAT-64-FPC-FAST-NEXT:    popq %rbx
; SOFT-FLOAT-64-FPC-FAST-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-64-FPC-FAST-NEXT:    retq
;
; SOFT-FLOAT-64-FMA-FPC-OFF-LABEL: fmuladd_intrinsic_f32:
; SOFT-FLOAT-64-FMA-FPC-OFF:       # %bb.0:
; SOFT-FLOAT-64-FMA-FPC-OFF-NEXT:    pushq %rbx
; SOFT-FLOAT-64-FMA-FPC-OFF-NEXT:    .cfi_def_cfa_offset 16
; SOFT-FLOAT-64-FMA-FPC-OFF-NEXT:    .cfi_offset %rbx, -16
; SOFT-FLOAT-64-FMA-FPC-OFF-NEXT:    movl %edx, %ebx
; SOFT-FLOAT-64-FMA-FPC-OFF-NEXT:    callq __mulsf3@PLT
; SOFT-FLOAT-64-FMA-FPC-OFF-NEXT:    movl %eax, %edi
; SOFT-FLOAT-64-FMA-FPC-OFF-NEXT:    movl %ebx, %esi
; SOFT-FLOAT-64-FMA-FPC-OFF-NEXT:    callq __addsf3@PLT
; SOFT-FLOAT-64-FMA-FPC-OFF-NEXT:    popq %rbx
; SOFT-FLOAT-64-FMA-FPC-OFF-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-64-FMA-FPC-OFF-NEXT:    retq
;
; SOFT-FLOAT-64-FMA-FPC-ON-LABEL: fmuladd_intrinsic_f32:
; SOFT-FLOAT-64-FMA-FPC-ON:       # %bb.0:
; SOFT-FLOAT-64-FMA-FPC-ON-NEXT:    pushq %rbx
; SOFT-FLOAT-64-FMA-FPC-ON-NEXT:    .cfi_def_cfa_offset 16
; SOFT-FLOAT-64-FMA-FPC-ON-NEXT:    .cfi_offset %rbx, -16
; SOFT-FLOAT-64-FMA-FPC-ON-NEXT:    movl %edx, %ebx
; SOFT-FLOAT-64-FMA-FPC-ON-NEXT:    callq __mulsf3@PLT
; SOFT-FLOAT-64-FMA-FPC-ON-NEXT:    movl %eax, %edi
; SOFT-FLOAT-64-FMA-FPC-ON-NEXT:    movl %ebx, %esi
; SOFT-FLOAT-64-FMA-FPC-ON-NEXT:    callq __addsf3@PLT
; SOFT-FLOAT-64-FMA-FPC-ON-NEXT:    popq %rbx
; SOFT-FLOAT-64-FMA-FPC-ON-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-64-FMA-FPC-ON-NEXT:    retq
;
; SOFT-FLOAT-64-FMA-FPC-FAST-LABEL: fmuladd_intrinsic_f32:
; SOFT-FLOAT-64-FMA-FPC-FAST:       # %bb.0:
; SOFT-FLOAT-64-FMA-FPC-FAST-NEXT:    pushq %rbx
; SOFT-FLOAT-64-FMA-FPC-FAST-NEXT:    .cfi_def_cfa_offset 16
; SOFT-FLOAT-64-FMA-FPC-FAST-NEXT:    .cfi_offset %rbx, -16
; SOFT-FLOAT-64-FMA-FPC-FAST-NEXT:    movl %edx, %ebx
; SOFT-FLOAT-64-FMA-FPC-FAST-NEXT:    callq __mulsf3@PLT
; SOFT-FLOAT-64-FMA-FPC-FAST-NEXT:    movl %eax, %edi
; SOFT-FLOAT-64-FMA-FPC-FAST-NEXT:    movl %ebx, %esi
; SOFT-FLOAT-64-FMA-FPC-FAST-NEXT:    callq __addsf3@PLT
; SOFT-FLOAT-64-FMA-FPC-FAST-NEXT:    popq %rbx
; SOFT-FLOAT-64-FMA-FPC-FAST-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-64-FMA-FPC-FAST-NEXT:    retq
;
; SOFT-FLOAT-64-FMA4-FPC-OFF-LABEL: fmuladd_intrinsic_f32:
; SOFT-FLOAT-64-FMA4-FPC-OFF:       # %bb.0:
; SOFT-FLOAT-64-FMA4-FPC-OFF-NEXT:    pushq %rbx
; SOFT-FLOAT-64-FMA4-FPC-OFF-NEXT:    .cfi_def_cfa_offset 16
; SOFT-FLOAT-64-FMA4-FPC-OFF-NEXT:    .cfi_offset %rbx, -16
; SOFT-FLOAT-64-FMA4-FPC-OFF-NEXT:    movl %edx, %ebx
; SOFT-FLOAT-64-FMA4-FPC-OFF-NEXT:    callq __mulsf3@PLT
; SOFT-FLOAT-64-FMA4-FPC-OFF-NEXT:    movl %eax, %edi
; SOFT-FLOAT-64-FMA4-FPC-OFF-NEXT:    movl %ebx, %esi
; SOFT-FLOAT-64-FMA4-FPC-OFF-NEXT:    callq __addsf3@PLT
; SOFT-FLOAT-64-FMA4-FPC-OFF-NEXT:    popq %rbx
; SOFT-FLOAT-64-FMA4-FPC-OFF-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-64-FMA4-FPC-OFF-NEXT:    retq
;
; SOFT-FLOAT-64-FMA4-FPC-ON-LABEL: fmuladd_intrinsic_f32:
; SOFT-FLOAT-64-FMA4-FPC-ON:       # %bb.0:
; SOFT-FLOAT-64-FMA4-FPC-ON-NEXT:    pushq %rbx
; SOFT-FLOAT-64-FMA4-FPC-ON-NEXT:    .cfi_def_cfa_offset 16
; SOFT-FLOAT-64-FMA4-FPC-ON-NEXT:    .cfi_offset %rbx, -16
; SOFT-FLOAT-64-FMA4-FPC-ON-NEXT:    movl %edx, %ebx
; SOFT-FLOAT-64-FMA4-FPC-ON-NEXT:    callq __mulsf3@PLT
; SOFT-FLOAT-64-FMA4-FPC-ON-NEXT:    movl %eax, %edi
; SOFT-FLOAT-64-FMA4-FPC-ON-NEXT:    movl %ebx, %esi
; SOFT-FLOAT-64-FMA4-FPC-ON-NEXT:    callq __addsf3@PLT
; SOFT-FLOAT-64-FMA4-FPC-ON-NEXT:    popq %rbx
; SOFT-FLOAT-64-FMA4-FPC-ON-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-64-FMA4-FPC-ON-NEXT:    retq
;
; SOFT-FLOAT-64-FMA4-FPC-FAST-LABEL: fmuladd_intrinsic_f32:
; SOFT-FLOAT-64-FMA4-FPC-FAST:       # %bb.0:
; SOFT-FLOAT-64-FMA4-FPC-FAST-NEXT:    pushq %rbx
; SOFT-FLOAT-64-FMA4-FPC-FAST-NEXT:    .cfi_def_cfa_offset 16
; SOFT-FLOAT-64-FMA4-FPC-FAST-NEXT:    .cfi_offset %rbx, -16
; SOFT-FLOAT-64-FMA4-FPC-FAST-NEXT:    movl %edx, %ebx
; SOFT-FLOAT-64-FMA4-FPC-FAST-NEXT:    callq __mulsf3@PLT
; SOFT-FLOAT-64-FMA4-FPC-FAST-NEXT:    movl %eax, %edi
; SOFT-FLOAT-64-FMA4-FPC-FAST-NEXT:    movl %ebx, %esi
; SOFT-FLOAT-64-FMA4-FPC-FAST-NEXT:    callq __addsf3@PLT
; SOFT-FLOAT-64-FMA4-FPC-FAST-NEXT:    popq %rbx
; SOFT-FLOAT-64-FMA4-FPC-FAST-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-64-FMA4-FPC-FAST-NEXT:    retq
    %result = call float @llvm.fmuladd.f32(float %a, float %b, float %c)
    ret float %result
}

define double @fmuladd_intrinsic_f64(double %a, double %b, double %c) #0 {
; SOFT-FLOAT-32-FPC-OFF-LABEL: fmuladd_intrinsic_f64:
; SOFT-FLOAT-32-FPC-OFF:       # %bb.0:
; SOFT-FLOAT-32-FPC-OFF-NEXT:    pushl %edi
; SOFT-FLOAT-32-FPC-OFF-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-32-FPC-OFF-NEXT:    pushl %esi
; SOFT-FLOAT-32-FPC-OFF-NEXT:    .cfi_def_cfa_offset 12
; SOFT-FLOAT-32-FPC-OFF-NEXT:    .cfi_offset %esi, -12
; SOFT-FLOAT-32-FPC-OFF-NEXT:    .cfi_offset %edi, -8
; SOFT-FLOAT-32-FPC-OFF-NEXT:    movl {{[0-9]+}}(%esp), %esi
; SOFT-FLOAT-32-FPC-OFF-NEXT:    movl {{[0-9]+}}(%esp), %edi
; SOFT-FLOAT-32-FPC-OFF-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-OFF-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-OFF-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-OFF-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-OFF-NEXT:    calll __muldf3
; SOFT-FLOAT-32-FPC-OFF-NEXT:    addl $16, %esp
; SOFT-FLOAT-32-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset -16
; SOFT-FLOAT-32-FPC-OFF-NEXT:    pushl %edi
; SOFT-FLOAT-32-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-OFF-NEXT:    pushl %esi
; SOFT-FLOAT-32-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-OFF-NEXT:    pushl %edx
; SOFT-FLOAT-32-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-OFF-NEXT:    pushl %eax
; SOFT-FLOAT-32-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-OFF-NEXT:    calll __adddf3
; SOFT-FLOAT-32-FPC-OFF-NEXT:    addl $16, %esp
; SOFT-FLOAT-32-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset -16
; SOFT-FLOAT-32-FPC-OFF-NEXT:    popl %esi
; SOFT-FLOAT-32-FPC-OFF-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-32-FPC-OFF-NEXT:    popl %edi
; SOFT-FLOAT-32-FPC-OFF-NEXT:    .cfi_def_cfa_offset 4
; SOFT-FLOAT-32-FPC-OFF-NEXT:    retl
;
; SOFT-FLOAT-32-FPC-ON-LABEL: fmuladd_intrinsic_f64:
; SOFT-FLOAT-32-FPC-ON:       # %bb.0:
; SOFT-FLOAT-32-FPC-ON-NEXT:    pushl %edi
; SOFT-FLOAT-32-FPC-ON-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-32-FPC-ON-NEXT:    pushl %esi
; SOFT-FLOAT-32-FPC-ON-NEXT:    .cfi_def_cfa_offset 12
; SOFT-FLOAT-32-FPC-ON-NEXT:    .cfi_offset %esi, -12
; SOFT-FLOAT-32-FPC-ON-NEXT:    .cfi_offset %edi, -8
; SOFT-FLOAT-32-FPC-ON-NEXT:    movl {{[0-9]+}}(%esp), %esi
; SOFT-FLOAT-32-FPC-ON-NEXT:    movl {{[0-9]+}}(%esp), %edi
; SOFT-FLOAT-32-FPC-ON-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-ON-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-ON-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-ON-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-ON-NEXT:    calll __muldf3
; SOFT-FLOAT-32-FPC-ON-NEXT:    addl $16, %esp
; SOFT-FLOAT-32-FPC-ON-NEXT:    .cfi_adjust_cfa_offset -16
; SOFT-FLOAT-32-FPC-ON-NEXT:    pushl %edi
; SOFT-FLOAT-32-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-ON-NEXT:    pushl %esi
; SOFT-FLOAT-32-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-ON-NEXT:    pushl %edx
; SOFT-FLOAT-32-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-ON-NEXT:    pushl %eax
; SOFT-FLOAT-32-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-ON-NEXT:    calll __adddf3
; SOFT-FLOAT-32-FPC-ON-NEXT:    addl $16, %esp
; SOFT-FLOAT-32-FPC-ON-NEXT:    .cfi_adjust_cfa_offset -16
; SOFT-FLOAT-32-FPC-ON-NEXT:    popl %esi
; SOFT-FLOAT-32-FPC-ON-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-32-FPC-ON-NEXT:    popl %edi
; SOFT-FLOAT-32-FPC-ON-NEXT:    .cfi_def_cfa_offset 4
; SOFT-FLOAT-32-FPC-ON-NEXT:    retl
;
; SOFT-FLOAT-32-FPC-FAST-LABEL: fmuladd_intrinsic_f64:
; SOFT-FLOAT-32-FPC-FAST:       # %bb.0:
; SOFT-FLOAT-32-FPC-FAST-NEXT:    pushl %edi
; SOFT-FLOAT-32-FPC-FAST-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-32-FPC-FAST-NEXT:    pushl %esi
; SOFT-FLOAT-32-FPC-FAST-NEXT:    .cfi_def_cfa_offset 12
; SOFT-FLOAT-32-FPC-FAST-NEXT:    .cfi_offset %esi, -12
; SOFT-FLOAT-32-FPC-FAST-NEXT:    .cfi_offset %edi, -8
; SOFT-FLOAT-32-FPC-FAST-NEXT:    movl {{[0-9]+}}(%esp), %esi
; SOFT-FLOAT-32-FPC-FAST-NEXT:    movl {{[0-9]+}}(%esp), %edi
; SOFT-FLOAT-32-FPC-FAST-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-FAST-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-FAST-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-FAST-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-FAST-NEXT:    calll __muldf3
; SOFT-FLOAT-32-FPC-FAST-NEXT:    addl $16, %esp
; SOFT-FLOAT-32-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset -16
; SOFT-FLOAT-32-FPC-FAST-NEXT:    pushl %edi
; SOFT-FLOAT-32-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-FAST-NEXT:    pushl %esi
; SOFT-FLOAT-32-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-FAST-NEXT:    pushl %edx
; SOFT-FLOAT-32-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-FAST-NEXT:    pushl %eax
; SOFT-FLOAT-32-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-FAST-NEXT:    calll __adddf3
; SOFT-FLOAT-32-FPC-FAST-NEXT:    addl $16, %esp
; SOFT-FLOAT-32-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset -16
; SOFT-FLOAT-32-FPC-FAST-NEXT:    popl %esi
; SOFT-FLOAT-32-FPC-FAST-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-32-FPC-FAST-NEXT:    popl %edi
; SOFT-FLOAT-32-FPC-FAST-NEXT:    .cfi_def_cfa_offset 4
; SOFT-FLOAT-32-FPC-FAST-NEXT:    retl
;
; SOFT-FLOAT-32-FMA-FPC-OFF-LABEL: fmuladd_intrinsic_f64:
; SOFT-FLOAT-32-FMA-FPC-OFF:       # %bb.0:
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    pushl %edi
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    pushl %esi
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    .cfi_def_cfa_offset 12
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    .cfi_offset %esi, -12
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    .cfi_offset %edi, -8
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    movl {{[0-9]+}}(%esp), %esi
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    movl {{[0-9]+}}(%esp), %edi
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    calll __muldf3
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    addl $16, %esp
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset -16
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    pushl %edi
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    pushl %esi
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    pushl %edx
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    pushl %eax
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    calll __adddf3
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    addl $16, %esp
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset -16
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    popl %esi
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    popl %edi
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    .cfi_def_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    retl
;
; SOFT-FLOAT-32-FMA-FPC-ON-LABEL: fmuladd_intrinsic_f64:
; SOFT-FLOAT-32-FMA-FPC-ON:       # %bb.0:
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    pushl %edi
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    pushl %esi
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    .cfi_def_cfa_offset 12
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    .cfi_offset %esi, -12
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    .cfi_offset %edi, -8
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    movl {{[0-9]+}}(%esp), %esi
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    movl {{[0-9]+}}(%esp), %edi
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    calll __muldf3
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    addl $16, %esp
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    .cfi_adjust_cfa_offset -16
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    pushl %edi
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    pushl %esi
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    pushl %edx
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    pushl %eax
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    calll __adddf3
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    addl $16, %esp
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    .cfi_adjust_cfa_offset -16
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    popl %esi
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    popl %edi
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    .cfi_def_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    retl
;
; SOFT-FLOAT-32-FMA-FPC-FAST-LABEL: fmuladd_intrinsic_f64:
; SOFT-FLOAT-32-FMA-FPC-FAST:       # %bb.0:
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    pushl %edi
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    pushl %esi
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    .cfi_def_cfa_offset 12
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    .cfi_offset %esi, -12
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    .cfi_offset %edi, -8
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    movl {{[0-9]+}}(%esp), %esi
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    movl {{[0-9]+}}(%esp), %edi
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    calll __muldf3
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    addl $16, %esp
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset -16
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    pushl %edi
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    pushl %esi
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    pushl %edx
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    pushl %eax
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    calll __adddf3
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    addl $16, %esp
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset -16
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    popl %esi
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    popl %edi
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    .cfi_def_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    retl
;
; SOFT-FLOAT-32-FMA4-FPC-OFF-LABEL: fmuladd_intrinsic_f64:
; SOFT-FLOAT-32-FMA4-FPC-OFF:       # %bb.0:
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    pushl %edi
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    pushl %esi
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    .cfi_def_cfa_offset 12
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    .cfi_offset %esi, -12
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    .cfi_offset %edi, -8
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    movl {{[0-9]+}}(%esp), %esi
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    movl {{[0-9]+}}(%esp), %edi
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    calll __muldf3
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    addl $16, %esp
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset -16
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    pushl %edi
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    pushl %esi
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    pushl %edx
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    pushl %eax
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    calll __adddf3
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    addl $16, %esp
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset -16
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    popl %esi
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    popl %edi
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    .cfi_def_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    retl
;
; SOFT-FLOAT-32-FMA4-FPC-ON-LABEL: fmuladd_intrinsic_f64:
; SOFT-FLOAT-32-FMA4-FPC-ON:       # %bb.0:
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    pushl %edi
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    pushl %esi
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    .cfi_def_cfa_offset 12
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    .cfi_offset %esi, -12
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    .cfi_offset %edi, -8
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    movl {{[0-9]+}}(%esp), %esi
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    movl {{[0-9]+}}(%esp), %edi
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    calll __muldf3
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    addl $16, %esp
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    .cfi_adjust_cfa_offset -16
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    pushl %edi
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    pushl %esi
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    pushl %edx
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    pushl %eax
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    calll __adddf3
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    addl $16, %esp
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    .cfi_adjust_cfa_offset -16
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    popl %esi
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    popl %edi
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    .cfi_def_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    retl
;
; SOFT-FLOAT-32-FMA4-FPC-FAST-LABEL: fmuladd_intrinsic_f64:
; SOFT-FLOAT-32-FMA4-FPC-FAST:       # %bb.0:
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    pushl %edi
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    pushl %esi
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    .cfi_def_cfa_offset 12
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    .cfi_offset %esi, -12
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    .cfi_offset %edi, -8
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    movl {{[0-9]+}}(%esp), %esi
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    movl {{[0-9]+}}(%esp), %edi
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    calll __muldf3
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    addl $16, %esp
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset -16
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    pushl %edi
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    pushl %esi
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    pushl %edx
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    pushl %eax
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    calll __adddf3
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    addl $16, %esp
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset -16
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    popl %esi
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    popl %edi
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    .cfi_def_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    retl
;
; SOFT-FLOAT-64-FPC-OFF-LABEL: fmuladd_intrinsic_f64:
; SOFT-FLOAT-64-FPC-OFF:       # %bb.0:
; SOFT-FLOAT-64-FPC-OFF-NEXT:    pushq %rbx
; SOFT-FLOAT-64-FPC-OFF-NEXT:    .cfi_def_cfa_offset 16
; SOFT-FLOAT-64-FPC-OFF-NEXT:    .cfi_offset %rbx, -16
; SOFT-FLOAT-64-FPC-OFF-NEXT:    movq %rdx, %rbx
; SOFT-FLOAT-64-FPC-OFF-NEXT:    callq __muldf3@PLT
; SOFT-FLOAT-64-FPC-OFF-NEXT:    movq %rax, %rdi
; SOFT-FLOAT-64-FPC-OFF-NEXT:    movq %rbx, %rsi
; SOFT-FLOAT-64-FPC-OFF-NEXT:    callq __adddf3@PLT
; SOFT-FLOAT-64-FPC-OFF-NEXT:    popq %rbx
; SOFT-FLOAT-64-FPC-OFF-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-64-FPC-OFF-NEXT:    retq
;
; SOFT-FLOAT-64-FPC-ON-LABEL: fmuladd_intrinsic_f64:
; SOFT-FLOAT-64-FPC-ON:       # %bb.0:
; SOFT-FLOAT-64-FPC-ON-NEXT:    pushq %rbx
; SOFT-FLOAT-64-FPC-ON-NEXT:    .cfi_def_cfa_offset 16
; SOFT-FLOAT-64-FPC-ON-NEXT:    .cfi_offset %rbx, -16
; SOFT-FLOAT-64-FPC-ON-NEXT:    movq %rdx, %rbx
; SOFT-FLOAT-64-FPC-ON-NEXT:    callq __muldf3@PLT
; SOFT-FLOAT-64-FPC-ON-NEXT:    movq %rax, %rdi
; SOFT-FLOAT-64-FPC-ON-NEXT:    movq %rbx, %rsi
; SOFT-FLOAT-64-FPC-ON-NEXT:    callq __adddf3@PLT
; SOFT-FLOAT-64-FPC-ON-NEXT:    popq %rbx
; SOFT-FLOAT-64-FPC-ON-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-64-FPC-ON-NEXT:    retq
;
; SOFT-FLOAT-64-FPC-FAST-LABEL: fmuladd_intrinsic_f64:
; SOFT-FLOAT-64-FPC-FAST:       # %bb.0:
; SOFT-FLOAT-64-FPC-FAST-NEXT:    pushq %rbx
; SOFT-FLOAT-64-FPC-FAST-NEXT:    .cfi_def_cfa_offset 16
; SOFT-FLOAT-64-FPC-FAST-NEXT:    .cfi_offset %rbx, -16
; SOFT-FLOAT-64-FPC-FAST-NEXT:    movq %rdx, %rbx
; SOFT-FLOAT-64-FPC-FAST-NEXT:    callq __muldf3@PLT
; SOFT-FLOAT-64-FPC-FAST-NEXT:    movq %rax, %rdi
; SOFT-FLOAT-64-FPC-FAST-NEXT:    movq %rbx, %rsi
; SOFT-FLOAT-64-FPC-FAST-NEXT:    callq __adddf3@PLT
; SOFT-FLOAT-64-FPC-FAST-NEXT:    popq %rbx
; SOFT-FLOAT-64-FPC-FAST-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-64-FPC-FAST-NEXT:    retq
;
; SOFT-FLOAT-64-FMA-FPC-OFF-LABEL: fmuladd_intrinsic_f64:
; SOFT-FLOAT-64-FMA-FPC-OFF:       # %bb.0:
; SOFT-FLOAT-64-FMA-FPC-OFF-NEXT:    pushq %rbx
; SOFT-FLOAT-64-FMA-FPC-OFF-NEXT:    .cfi_def_cfa_offset 16
; SOFT-FLOAT-64-FMA-FPC-OFF-NEXT:    .cfi_offset %rbx, -16
; SOFT-FLOAT-64-FMA-FPC-OFF-NEXT:    movq %rdx, %rbx
; SOFT-FLOAT-64-FMA-FPC-OFF-NEXT:    callq __muldf3@PLT
; SOFT-FLOAT-64-FMA-FPC-OFF-NEXT:    movq %rax, %rdi
; SOFT-FLOAT-64-FMA-FPC-OFF-NEXT:    movq %rbx, %rsi
; SOFT-FLOAT-64-FMA-FPC-OFF-NEXT:    callq __adddf3@PLT
; SOFT-FLOAT-64-FMA-FPC-OFF-NEXT:    popq %rbx
; SOFT-FLOAT-64-FMA-FPC-OFF-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-64-FMA-FPC-OFF-NEXT:    retq
;
; SOFT-FLOAT-64-FMA-FPC-ON-LABEL: fmuladd_intrinsic_f64:
; SOFT-FLOAT-64-FMA-FPC-ON:       # %bb.0:
; SOFT-FLOAT-64-FMA-FPC-ON-NEXT:    pushq %rbx
; SOFT-FLOAT-64-FMA-FPC-ON-NEXT:    .cfi_def_cfa_offset 16
; SOFT-FLOAT-64-FMA-FPC-ON-NEXT:    .cfi_offset %rbx, -16
; SOFT-FLOAT-64-FMA-FPC-ON-NEXT:    movq %rdx, %rbx
; SOFT-FLOAT-64-FMA-FPC-ON-NEXT:    callq __muldf3@PLT
; SOFT-FLOAT-64-FMA-FPC-ON-NEXT:    movq %rax, %rdi
; SOFT-FLOAT-64-FMA-FPC-ON-NEXT:    movq %rbx, %rsi
; SOFT-FLOAT-64-FMA-FPC-ON-NEXT:    callq __adddf3@PLT
; SOFT-FLOAT-64-FMA-FPC-ON-NEXT:    popq %rbx
; SOFT-FLOAT-64-FMA-FPC-ON-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-64-FMA-FPC-ON-NEXT:    retq
;
; SOFT-FLOAT-64-FMA-FPC-FAST-LABEL: fmuladd_intrinsic_f64:
; SOFT-FLOAT-64-FMA-FPC-FAST:       # %bb.0:
; SOFT-FLOAT-64-FMA-FPC-FAST-NEXT:    pushq %rbx
; SOFT-FLOAT-64-FMA-FPC-FAST-NEXT:    .cfi_def_cfa_offset 16
; SOFT-FLOAT-64-FMA-FPC-FAST-NEXT:    .cfi_offset %rbx, -16
; SOFT-FLOAT-64-FMA-FPC-FAST-NEXT:    movq %rdx, %rbx
; SOFT-FLOAT-64-FMA-FPC-FAST-NEXT:    callq __muldf3@PLT
; SOFT-FLOAT-64-FMA-FPC-FAST-NEXT:    movq %rax, %rdi
; SOFT-FLOAT-64-FMA-FPC-FAST-NEXT:    movq %rbx, %rsi
; SOFT-FLOAT-64-FMA-FPC-FAST-NEXT:    callq __adddf3@PLT
; SOFT-FLOAT-64-FMA-FPC-FAST-NEXT:    popq %rbx
; SOFT-FLOAT-64-FMA-FPC-FAST-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-64-FMA-FPC-FAST-NEXT:    retq
;
; SOFT-FLOAT-64-FMA4-FPC-OFF-LABEL: fmuladd_intrinsic_f64:
; SOFT-FLOAT-64-FMA4-FPC-OFF:       # %bb.0:
; SOFT-FLOAT-64-FMA4-FPC-OFF-NEXT:    pushq %rbx
; SOFT-FLOAT-64-FMA4-FPC-OFF-NEXT:    .cfi_def_cfa_offset 16
; SOFT-FLOAT-64-FMA4-FPC-OFF-NEXT:    .cfi_offset %rbx, -16
; SOFT-FLOAT-64-FMA4-FPC-OFF-NEXT:    movq %rdx, %rbx
; SOFT-FLOAT-64-FMA4-FPC-OFF-NEXT:    callq __muldf3@PLT
; SOFT-FLOAT-64-FMA4-FPC-OFF-NEXT:    movq %rax, %rdi
; SOFT-FLOAT-64-FMA4-FPC-OFF-NEXT:    movq %rbx, %rsi
; SOFT-FLOAT-64-FMA4-FPC-OFF-NEXT:    callq __adddf3@PLT
; SOFT-FLOAT-64-FMA4-FPC-OFF-NEXT:    popq %rbx
; SOFT-FLOAT-64-FMA4-FPC-OFF-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-64-FMA4-FPC-OFF-NEXT:    retq
;
; SOFT-FLOAT-64-FMA4-FPC-ON-LABEL: fmuladd_intrinsic_f64:
; SOFT-FLOAT-64-FMA4-FPC-ON:       # %bb.0:
; SOFT-FLOAT-64-FMA4-FPC-ON-NEXT:    pushq %rbx
; SOFT-FLOAT-64-FMA4-FPC-ON-NEXT:    .cfi_def_cfa_offset 16
; SOFT-FLOAT-64-FMA4-FPC-ON-NEXT:    .cfi_offset %rbx, -16
; SOFT-FLOAT-64-FMA4-FPC-ON-NEXT:    movq %rdx, %rbx
; SOFT-FLOAT-64-FMA4-FPC-ON-NEXT:    callq __muldf3@PLT
; SOFT-FLOAT-64-FMA4-FPC-ON-NEXT:    movq %rax, %rdi
; SOFT-FLOAT-64-FMA4-FPC-ON-NEXT:    movq %rbx, %rsi
; SOFT-FLOAT-64-FMA4-FPC-ON-NEXT:    callq __adddf3@PLT
; SOFT-FLOAT-64-FMA4-FPC-ON-NEXT:    popq %rbx
; SOFT-FLOAT-64-FMA4-FPC-ON-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-64-FMA4-FPC-ON-NEXT:    retq
;
; SOFT-FLOAT-64-FMA4-FPC-FAST-LABEL: fmuladd_intrinsic_f64:
; SOFT-FLOAT-64-FMA4-FPC-FAST:       # %bb.0:
; SOFT-FLOAT-64-FMA4-FPC-FAST-NEXT:    pushq %rbx
; SOFT-FLOAT-64-FMA4-FPC-FAST-NEXT:    .cfi_def_cfa_offset 16
; SOFT-FLOAT-64-FMA4-FPC-FAST-NEXT:    .cfi_offset %rbx, -16
; SOFT-FLOAT-64-FMA4-FPC-FAST-NEXT:    movq %rdx, %rbx
; SOFT-FLOAT-64-FMA4-FPC-FAST-NEXT:    callq __muldf3@PLT
; SOFT-FLOAT-64-FMA4-FPC-FAST-NEXT:    movq %rax, %rdi
; SOFT-FLOAT-64-FMA4-FPC-FAST-NEXT:    movq %rbx, %rsi
; SOFT-FLOAT-64-FMA4-FPC-FAST-NEXT:    callq __adddf3@PLT
; SOFT-FLOAT-64-FMA4-FPC-FAST-NEXT:    popq %rbx
; SOFT-FLOAT-64-FMA4-FPC-FAST-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-64-FMA4-FPC-FAST-NEXT:    retq
    %result = call double @llvm.fmuladd.f64(double %a, double %b, double %c)
    ret double %result
}

define float @fmuladd_contract_f32(float %a, float %b, float %c) #0 {
; SOFT-FLOAT-32-FPC-OFF-LABEL: fmuladd_contract_f32:
; SOFT-FLOAT-32-FPC-OFF:       # %bb.0:
; SOFT-FLOAT-32-FPC-OFF-NEXT:    pushl %esi
; SOFT-FLOAT-32-FPC-OFF-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-32-FPC-OFF-NEXT:    .cfi_offset %esi, -8
; SOFT-FLOAT-32-FPC-OFF-NEXT:    movl {{[0-9]+}}(%esp), %esi
; SOFT-FLOAT-32-FPC-OFF-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-OFF-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-OFF-NEXT:    calll __mulsf3
; SOFT-FLOAT-32-FPC-OFF-NEXT:    addl $8, %esp
; SOFT-FLOAT-32-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset -8
; SOFT-FLOAT-32-FPC-OFF-NEXT:    pushl %esi
; SOFT-FLOAT-32-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-OFF-NEXT:    pushl %eax
; SOFT-FLOAT-32-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-OFF-NEXT:    calll __addsf3
; SOFT-FLOAT-32-FPC-OFF-NEXT:    addl $8, %esp
; SOFT-FLOAT-32-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset -8
; SOFT-FLOAT-32-FPC-OFF-NEXT:    popl %esi
; SOFT-FLOAT-32-FPC-OFF-NEXT:    .cfi_def_cfa_offset 4
; SOFT-FLOAT-32-FPC-OFF-NEXT:    retl
;
; SOFT-FLOAT-32-FPC-ON-LABEL: fmuladd_contract_f32:
; SOFT-FLOAT-32-FPC-ON:       # %bb.0:
; SOFT-FLOAT-32-FPC-ON-NEXT:    pushl %esi
; SOFT-FLOAT-32-FPC-ON-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-32-FPC-ON-NEXT:    .cfi_offset %esi, -8
; SOFT-FLOAT-32-FPC-ON-NEXT:    movl {{[0-9]+}}(%esp), %esi
; SOFT-FLOAT-32-FPC-ON-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-ON-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-ON-NEXT:    calll __mulsf3
; SOFT-FLOAT-32-FPC-ON-NEXT:    addl $8, %esp
; SOFT-FLOAT-32-FPC-ON-NEXT:    .cfi_adjust_cfa_offset -8
; SOFT-FLOAT-32-FPC-ON-NEXT:    pushl %esi
; SOFT-FLOAT-32-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-ON-NEXT:    pushl %eax
; SOFT-FLOAT-32-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-ON-NEXT:    calll __addsf3
; SOFT-FLOAT-32-FPC-ON-NEXT:    addl $8, %esp
; SOFT-FLOAT-32-FPC-ON-NEXT:    .cfi_adjust_cfa_offset -8
; SOFT-FLOAT-32-FPC-ON-NEXT:    popl %esi
; SOFT-FLOAT-32-FPC-ON-NEXT:    .cfi_def_cfa_offset 4
; SOFT-FLOAT-32-FPC-ON-NEXT:    retl
;
; SOFT-FLOAT-32-FPC-FAST-LABEL: fmuladd_contract_f32:
; SOFT-FLOAT-32-FPC-FAST:       # %bb.0:
; SOFT-FLOAT-32-FPC-FAST-NEXT:    pushl %esi
; SOFT-FLOAT-32-FPC-FAST-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-32-FPC-FAST-NEXT:    .cfi_offset %esi, -8
; SOFT-FLOAT-32-FPC-FAST-NEXT:    movl {{[0-9]+}}(%esp), %esi
; SOFT-FLOAT-32-FPC-FAST-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-FAST-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-FAST-NEXT:    calll __mulsf3
; SOFT-FLOAT-32-FPC-FAST-NEXT:    addl $8, %esp
; SOFT-FLOAT-32-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset -8
; SOFT-FLOAT-32-FPC-FAST-NEXT:    pushl %esi
; SOFT-FLOAT-32-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-FAST-NEXT:    pushl %eax
; SOFT-FLOAT-32-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-FAST-NEXT:    calll __addsf3
; SOFT-FLOAT-32-FPC-FAST-NEXT:    addl $8, %esp
; SOFT-FLOAT-32-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset -8
; SOFT-FLOAT-32-FPC-FAST-NEXT:    popl %esi
; SOFT-FLOAT-32-FPC-FAST-NEXT:    .cfi_def_cfa_offset 4
; SOFT-FLOAT-32-FPC-FAST-NEXT:    retl
;
; SOFT-FLOAT-32-FMA-FPC-OFF-LABEL: fmuladd_contract_f32:
; SOFT-FLOAT-32-FMA-FPC-OFF:       # %bb.0:
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    pushl %esi
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    .cfi_offset %esi, -8
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    movl {{[0-9]+}}(%esp), %esi
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    calll __mulsf3
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    addl $8, %esp
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset -8
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    pushl %esi
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    pushl %eax
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    calll __addsf3
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    addl $8, %esp
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset -8
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    popl %esi
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    .cfi_def_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    retl
;
; SOFT-FLOAT-32-FMA-FPC-ON-LABEL: fmuladd_contract_f32:
; SOFT-FLOAT-32-FMA-FPC-ON:       # %bb.0:
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    pushl %esi
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    .cfi_offset %esi, -8
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    movl {{[0-9]+}}(%esp), %esi
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    calll __mulsf3
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    addl $8, %esp
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    .cfi_adjust_cfa_offset -8
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    pushl %esi
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    pushl %eax
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    calll __addsf3
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    addl $8, %esp
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    .cfi_adjust_cfa_offset -8
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    popl %esi
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    .cfi_def_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    retl
;
; SOFT-FLOAT-32-FMA-FPC-FAST-LABEL: fmuladd_contract_f32:
; SOFT-FLOAT-32-FMA-FPC-FAST:       # %bb.0:
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    pushl %esi
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    .cfi_offset %esi, -8
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    movl {{[0-9]+}}(%esp), %esi
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    calll __mulsf3
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    addl $8, %esp
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset -8
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    pushl %esi
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    pushl %eax
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    calll __addsf3
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    addl $8, %esp
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset -8
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    popl %esi
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    .cfi_def_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    retl
;
; SOFT-FLOAT-32-FMA4-FPC-OFF-LABEL: fmuladd_contract_f32:
; SOFT-FLOAT-32-FMA4-FPC-OFF:       # %bb.0:
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    pushl %esi
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    .cfi_offset %esi, -8
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    movl {{[0-9]+}}(%esp), %esi
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    calll __mulsf3
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    addl $8, %esp
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset -8
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    pushl %esi
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    pushl %eax
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    calll __addsf3
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    addl $8, %esp
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset -8
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    popl %esi
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    .cfi_def_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    retl
;
; SOFT-FLOAT-32-FMA4-FPC-ON-LABEL: fmuladd_contract_f32:
; SOFT-FLOAT-32-FMA4-FPC-ON:       # %bb.0:
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    pushl %esi
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    .cfi_offset %esi, -8
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    movl {{[0-9]+}}(%esp), %esi
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    calll __mulsf3
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    addl $8, %esp
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    .cfi_adjust_cfa_offset -8
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    pushl %esi
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    pushl %eax
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    calll __addsf3
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    addl $8, %esp
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    .cfi_adjust_cfa_offset -8
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    popl %esi
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    .cfi_def_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    retl
;
; SOFT-FLOAT-32-FMA4-FPC-FAST-LABEL: fmuladd_contract_f32:
; SOFT-FLOAT-32-FMA4-FPC-FAST:       # %bb.0:
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    pushl %esi
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    .cfi_offset %esi, -8
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    movl {{[0-9]+}}(%esp), %esi
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    calll __mulsf3
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    addl $8, %esp
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset -8
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    pushl %esi
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    pushl %eax
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    calll __addsf3
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    addl $8, %esp
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset -8
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    popl %esi
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    .cfi_def_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    retl
;
; SOFT-FLOAT-64-FPC-OFF-LABEL: fmuladd_contract_f32:
; SOFT-FLOAT-64-FPC-OFF:       # %bb.0:
; SOFT-FLOAT-64-FPC-OFF-NEXT:    pushq %rbx
; SOFT-FLOAT-64-FPC-OFF-NEXT:    .cfi_def_cfa_offset 16
; SOFT-FLOAT-64-FPC-OFF-NEXT:    .cfi_offset %rbx, -16
; SOFT-FLOAT-64-FPC-OFF-NEXT:    movl %edx, %ebx
; SOFT-FLOAT-64-FPC-OFF-NEXT:    callq __mulsf3@PLT
; SOFT-FLOAT-64-FPC-OFF-NEXT:    movl %eax, %edi
; SOFT-FLOAT-64-FPC-OFF-NEXT:    movl %ebx, %esi
; SOFT-FLOAT-64-FPC-OFF-NEXT:    callq __addsf3@PLT
; SOFT-FLOAT-64-FPC-OFF-NEXT:    popq %rbx
; SOFT-FLOAT-64-FPC-OFF-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-64-FPC-OFF-NEXT:    retq
;
; SOFT-FLOAT-64-FPC-ON-LABEL: fmuladd_contract_f32:
; SOFT-FLOAT-64-FPC-ON:       # %bb.0:
; SOFT-FLOAT-64-FPC-ON-NEXT:    pushq %rbx
; SOFT-FLOAT-64-FPC-ON-NEXT:    .cfi_def_cfa_offset 16
; SOFT-FLOAT-64-FPC-ON-NEXT:    .cfi_offset %rbx, -16
; SOFT-FLOAT-64-FPC-ON-NEXT:    movl %edx, %ebx
; SOFT-FLOAT-64-FPC-ON-NEXT:    callq __mulsf3@PLT
; SOFT-FLOAT-64-FPC-ON-NEXT:    movl %eax, %edi
; SOFT-FLOAT-64-FPC-ON-NEXT:    movl %ebx, %esi
; SOFT-FLOAT-64-FPC-ON-NEXT:    callq __addsf3@PLT
; SOFT-FLOAT-64-FPC-ON-NEXT:    popq %rbx
; SOFT-FLOAT-64-FPC-ON-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-64-FPC-ON-NEXT:    retq
;
; SOFT-FLOAT-64-FPC-FAST-LABEL: fmuladd_contract_f32:
; SOFT-FLOAT-64-FPC-FAST:       # %bb.0:
; SOFT-FLOAT-64-FPC-FAST-NEXT:    pushq %rbx
; SOFT-FLOAT-64-FPC-FAST-NEXT:    .cfi_def_cfa_offset 16
; SOFT-FLOAT-64-FPC-FAST-NEXT:    .cfi_offset %rbx, -16
; SOFT-FLOAT-64-FPC-FAST-NEXT:    movl %edx, %ebx
; SOFT-FLOAT-64-FPC-FAST-NEXT:    callq __mulsf3@PLT
; SOFT-FLOAT-64-FPC-FAST-NEXT:    movl %eax, %edi
; SOFT-FLOAT-64-FPC-FAST-NEXT:    movl %ebx, %esi
; SOFT-FLOAT-64-FPC-FAST-NEXT:    callq __addsf3@PLT
; SOFT-FLOAT-64-FPC-FAST-NEXT:    popq %rbx
; SOFT-FLOAT-64-FPC-FAST-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-64-FPC-FAST-NEXT:    retq
;
; SOFT-FLOAT-64-FMA-FPC-OFF-LABEL: fmuladd_contract_f32:
; SOFT-FLOAT-64-FMA-FPC-OFF:       # %bb.0:
; SOFT-FLOAT-64-FMA-FPC-OFF-NEXT:    pushq %rbx
; SOFT-FLOAT-64-FMA-FPC-OFF-NEXT:    .cfi_def_cfa_offset 16
; SOFT-FLOAT-64-FMA-FPC-OFF-NEXT:    .cfi_offset %rbx, -16
; SOFT-FLOAT-64-FMA-FPC-OFF-NEXT:    movl %edx, %ebx
; SOFT-FLOAT-64-FMA-FPC-OFF-NEXT:    callq __mulsf3@PLT
; SOFT-FLOAT-64-FMA-FPC-OFF-NEXT:    movl %eax, %edi
; SOFT-FLOAT-64-FMA-FPC-OFF-NEXT:    movl %ebx, %esi
; SOFT-FLOAT-64-FMA-FPC-OFF-NEXT:    callq __addsf3@PLT
; SOFT-FLOAT-64-FMA-FPC-OFF-NEXT:    popq %rbx
; SOFT-FLOAT-64-FMA-FPC-OFF-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-64-FMA-FPC-OFF-NEXT:    retq
;
; SOFT-FLOAT-64-FMA-FPC-ON-LABEL: fmuladd_contract_f32:
; SOFT-FLOAT-64-FMA-FPC-ON:       # %bb.0:
; SOFT-FLOAT-64-FMA-FPC-ON-NEXT:    pushq %rbx
; SOFT-FLOAT-64-FMA-FPC-ON-NEXT:    .cfi_def_cfa_offset 16
; SOFT-FLOAT-64-FMA-FPC-ON-NEXT:    .cfi_offset %rbx, -16
; SOFT-FLOAT-64-FMA-FPC-ON-NEXT:    movl %edx, %ebx
; SOFT-FLOAT-64-FMA-FPC-ON-NEXT:    callq __mulsf3@PLT
; SOFT-FLOAT-64-FMA-FPC-ON-NEXT:    movl %eax, %edi
; SOFT-FLOAT-64-FMA-FPC-ON-NEXT:    movl %ebx, %esi
; SOFT-FLOAT-64-FMA-FPC-ON-NEXT:    callq __addsf3@PLT
; SOFT-FLOAT-64-FMA-FPC-ON-NEXT:    popq %rbx
; SOFT-FLOAT-64-FMA-FPC-ON-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-64-FMA-FPC-ON-NEXT:    retq
;
; SOFT-FLOAT-64-FMA-FPC-FAST-LABEL: fmuladd_contract_f32:
; SOFT-FLOAT-64-FMA-FPC-FAST:       # %bb.0:
; SOFT-FLOAT-64-FMA-FPC-FAST-NEXT:    pushq %rbx
; SOFT-FLOAT-64-FMA-FPC-FAST-NEXT:    .cfi_def_cfa_offset 16
; SOFT-FLOAT-64-FMA-FPC-FAST-NEXT:    .cfi_offset %rbx, -16
; SOFT-FLOAT-64-FMA-FPC-FAST-NEXT:    movl %edx, %ebx
; SOFT-FLOAT-64-FMA-FPC-FAST-NEXT:    callq __mulsf3@PLT
; SOFT-FLOAT-64-FMA-FPC-FAST-NEXT:    movl %eax, %edi
; SOFT-FLOAT-64-FMA-FPC-FAST-NEXT:    movl %ebx, %esi
; SOFT-FLOAT-64-FMA-FPC-FAST-NEXT:    callq __addsf3@PLT
; SOFT-FLOAT-64-FMA-FPC-FAST-NEXT:    popq %rbx
; SOFT-FLOAT-64-FMA-FPC-FAST-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-64-FMA-FPC-FAST-NEXT:    retq
;
; SOFT-FLOAT-64-FMA4-FPC-OFF-LABEL: fmuladd_contract_f32:
; SOFT-FLOAT-64-FMA4-FPC-OFF:       # %bb.0:
; SOFT-FLOAT-64-FMA4-FPC-OFF-NEXT:    pushq %rbx
; SOFT-FLOAT-64-FMA4-FPC-OFF-NEXT:    .cfi_def_cfa_offset 16
; SOFT-FLOAT-64-FMA4-FPC-OFF-NEXT:    .cfi_offset %rbx, -16
; SOFT-FLOAT-64-FMA4-FPC-OFF-NEXT:    movl %edx, %ebx
; SOFT-FLOAT-64-FMA4-FPC-OFF-NEXT:    callq __mulsf3@PLT
; SOFT-FLOAT-64-FMA4-FPC-OFF-NEXT:    movl %eax, %edi
; SOFT-FLOAT-64-FMA4-FPC-OFF-NEXT:    movl %ebx, %esi
; SOFT-FLOAT-64-FMA4-FPC-OFF-NEXT:    callq __addsf3@PLT
; SOFT-FLOAT-64-FMA4-FPC-OFF-NEXT:    popq %rbx
; SOFT-FLOAT-64-FMA4-FPC-OFF-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-64-FMA4-FPC-OFF-NEXT:    retq
;
; SOFT-FLOAT-64-FMA4-FPC-ON-LABEL: fmuladd_contract_f32:
; SOFT-FLOAT-64-FMA4-FPC-ON:       # %bb.0:
; SOFT-FLOAT-64-FMA4-FPC-ON-NEXT:    pushq %rbx
; SOFT-FLOAT-64-FMA4-FPC-ON-NEXT:    .cfi_def_cfa_offset 16
; SOFT-FLOAT-64-FMA4-FPC-ON-NEXT:    .cfi_offset %rbx, -16
; SOFT-FLOAT-64-FMA4-FPC-ON-NEXT:    movl %edx, %ebx
; SOFT-FLOAT-64-FMA4-FPC-ON-NEXT:    callq __mulsf3@PLT
; SOFT-FLOAT-64-FMA4-FPC-ON-NEXT:    movl %eax, %edi
; SOFT-FLOAT-64-FMA4-FPC-ON-NEXT:    movl %ebx, %esi
; SOFT-FLOAT-64-FMA4-FPC-ON-NEXT:    callq __addsf3@PLT
; SOFT-FLOAT-64-FMA4-FPC-ON-NEXT:    popq %rbx
; SOFT-FLOAT-64-FMA4-FPC-ON-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-64-FMA4-FPC-ON-NEXT:    retq
;
; SOFT-FLOAT-64-FMA4-FPC-FAST-LABEL: fmuladd_contract_f32:
; SOFT-FLOAT-64-FMA4-FPC-FAST:       # %bb.0:
; SOFT-FLOAT-64-FMA4-FPC-FAST-NEXT:    pushq %rbx
; SOFT-FLOAT-64-FMA4-FPC-FAST-NEXT:    .cfi_def_cfa_offset 16
; SOFT-FLOAT-64-FMA4-FPC-FAST-NEXT:    .cfi_offset %rbx, -16
; SOFT-FLOAT-64-FMA4-FPC-FAST-NEXT:    movl %edx, %ebx
; SOFT-FLOAT-64-FMA4-FPC-FAST-NEXT:    callq __mulsf3@PLT
; SOFT-FLOAT-64-FMA4-FPC-FAST-NEXT:    movl %eax, %edi
; SOFT-FLOAT-64-FMA4-FPC-FAST-NEXT:    movl %ebx, %esi
; SOFT-FLOAT-64-FMA4-FPC-FAST-NEXT:    callq __addsf3@PLT
; SOFT-FLOAT-64-FMA4-FPC-FAST-NEXT:    popq %rbx
; SOFT-FLOAT-64-FMA4-FPC-FAST-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-64-FMA4-FPC-FAST-NEXT:    retq
    %product = fmul float %a, %b
    %result = fadd float %product, %c
    ret float %result
}

define double @fmuladd_contract_f64(double %a, double %b, double %c) #0 {
; SOFT-FLOAT-32-FPC-OFF-LABEL: fmuladd_contract_f64:
; SOFT-FLOAT-32-FPC-OFF:       # %bb.0:
; SOFT-FLOAT-32-FPC-OFF-NEXT:    pushl %edi
; SOFT-FLOAT-32-FPC-OFF-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-32-FPC-OFF-NEXT:    pushl %esi
; SOFT-FLOAT-32-FPC-OFF-NEXT:    .cfi_def_cfa_offset 12
; SOFT-FLOAT-32-FPC-OFF-NEXT:    .cfi_offset %esi, -12
; SOFT-FLOAT-32-FPC-OFF-NEXT:    .cfi_offset %edi, -8
; SOFT-FLOAT-32-FPC-OFF-NEXT:    movl {{[0-9]+}}(%esp), %esi
; SOFT-FLOAT-32-FPC-OFF-NEXT:    movl {{[0-9]+}}(%esp), %edi
; SOFT-FLOAT-32-FPC-OFF-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-OFF-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-OFF-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-OFF-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-OFF-NEXT:    calll __muldf3
; SOFT-FLOAT-32-FPC-OFF-NEXT:    addl $16, %esp
; SOFT-FLOAT-32-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset -16
; SOFT-FLOAT-32-FPC-OFF-NEXT:    pushl %edi
; SOFT-FLOAT-32-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-OFF-NEXT:    pushl %esi
; SOFT-FLOAT-32-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-OFF-NEXT:    pushl %edx
; SOFT-FLOAT-32-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-OFF-NEXT:    pushl %eax
; SOFT-FLOAT-32-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-OFF-NEXT:    calll __adddf3
; SOFT-FLOAT-32-FPC-OFF-NEXT:    addl $16, %esp
; SOFT-FLOAT-32-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset -16
; SOFT-FLOAT-32-FPC-OFF-NEXT:    popl %esi
; SOFT-FLOAT-32-FPC-OFF-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-32-FPC-OFF-NEXT:    popl %edi
; SOFT-FLOAT-32-FPC-OFF-NEXT:    .cfi_def_cfa_offset 4
; SOFT-FLOAT-32-FPC-OFF-NEXT:    retl
;
; SOFT-FLOAT-32-FPC-ON-LABEL: fmuladd_contract_f64:
; SOFT-FLOAT-32-FPC-ON:       # %bb.0:
; SOFT-FLOAT-32-FPC-ON-NEXT:    pushl %edi
; SOFT-FLOAT-32-FPC-ON-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-32-FPC-ON-NEXT:    pushl %esi
; SOFT-FLOAT-32-FPC-ON-NEXT:    .cfi_def_cfa_offset 12
; SOFT-FLOAT-32-FPC-ON-NEXT:    .cfi_offset %esi, -12
; SOFT-FLOAT-32-FPC-ON-NEXT:    .cfi_offset %edi, -8
; SOFT-FLOAT-32-FPC-ON-NEXT:    movl {{[0-9]+}}(%esp), %esi
; SOFT-FLOAT-32-FPC-ON-NEXT:    movl {{[0-9]+}}(%esp), %edi
; SOFT-FLOAT-32-FPC-ON-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-ON-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-ON-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-ON-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-ON-NEXT:    calll __muldf3
; SOFT-FLOAT-32-FPC-ON-NEXT:    addl $16, %esp
; SOFT-FLOAT-32-FPC-ON-NEXT:    .cfi_adjust_cfa_offset -16
; SOFT-FLOAT-32-FPC-ON-NEXT:    pushl %edi
; SOFT-FLOAT-32-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-ON-NEXT:    pushl %esi
; SOFT-FLOAT-32-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-ON-NEXT:    pushl %edx
; SOFT-FLOAT-32-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-ON-NEXT:    pushl %eax
; SOFT-FLOAT-32-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-ON-NEXT:    calll __adddf3
; SOFT-FLOAT-32-FPC-ON-NEXT:    addl $16, %esp
; SOFT-FLOAT-32-FPC-ON-NEXT:    .cfi_adjust_cfa_offset -16
; SOFT-FLOAT-32-FPC-ON-NEXT:    popl %esi
; SOFT-FLOAT-32-FPC-ON-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-32-FPC-ON-NEXT:    popl %edi
; SOFT-FLOAT-32-FPC-ON-NEXT:    .cfi_def_cfa_offset 4
; SOFT-FLOAT-32-FPC-ON-NEXT:    retl
;
; SOFT-FLOAT-32-FPC-FAST-LABEL: fmuladd_contract_f64:
; SOFT-FLOAT-32-FPC-FAST:       # %bb.0:
; SOFT-FLOAT-32-FPC-FAST-NEXT:    pushl %edi
; SOFT-FLOAT-32-FPC-FAST-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-32-FPC-FAST-NEXT:    pushl %esi
; SOFT-FLOAT-32-FPC-FAST-NEXT:    .cfi_def_cfa_offset 12
; SOFT-FLOAT-32-FPC-FAST-NEXT:    .cfi_offset %esi, -12
; SOFT-FLOAT-32-FPC-FAST-NEXT:    .cfi_offset %edi, -8
; SOFT-FLOAT-32-FPC-FAST-NEXT:    movl {{[0-9]+}}(%esp), %esi
; SOFT-FLOAT-32-FPC-FAST-NEXT:    movl {{[0-9]+}}(%esp), %edi
; SOFT-FLOAT-32-FPC-FAST-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-FAST-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-FAST-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-FAST-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-FAST-NEXT:    calll __muldf3
; SOFT-FLOAT-32-FPC-FAST-NEXT:    addl $16, %esp
; SOFT-FLOAT-32-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset -16
; SOFT-FLOAT-32-FPC-FAST-NEXT:    pushl %edi
; SOFT-FLOAT-32-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-FAST-NEXT:    pushl %esi
; SOFT-FLOAT-32-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-FAST-NEXT:    pushl %edx
; SOFT-FLOAT-32-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-FAST-NEXT:    pushl %eax
; SOFT-FLOAT-32-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FPC-FAST-NEXT:    calll __adddf3
; SOFT-FLOAT-32-FPC-FAST-NEXT:    addl $16, %esp
; SOFT-FLOAT-32-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset -16
; SOFT-FLOAT-32-FPC-FAST-NEXT:    popl %esi
; SOFT-FLOAT-32-FPC-FAST-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-32-FPC-FAST-NEXT:    popl %edi
; SOFT-FLOAT-32-FPC-FAST-NEXT:    .cfi_def_cfa_offset 4
; SOFT-FLOAT-32-FPC-FAST-NEXT:    retl
;
; SOFT-FLOAT-32-FMA-FPC-OFF-LABEL: fmuladd_contract_f64:
; SOFT-FLOAT-32-FMA-FPC-OFF:       # %bb.0:
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    pushl %edi
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    pushl %esi
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    .cfi_def_cfa_offset 12
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    .cfi_offset %esi, -12
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    .cfi_offset %edi, -8
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    movl {{[0-9]+}}(%esp), %esi
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    movl {{[0-9]+}}(%esp), %edi
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    calll __muldf3
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    addl $16, %esp
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset -16
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    pushl %edi
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    pushl %esi
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    pushl %edx
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    pushl %eax
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    calll __adddf3
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    addl $16, %esp
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset -16
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    popl %esi
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    popl %edi
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    .cfi_def_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-OFF-NEXT:    retl
;
; SOFT-FLOAT-32-FMA-FPC-ON-LABEL: fmuladd_contract_f64:
; SOFT-FLOAT-32-FMA-FPC-ON:       # %bb.0:
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    pushl %edi
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    pushl %esi
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    .cfi_def_cfa_offset 12
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    .cfi_offset %esi, -12
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    .cfi_offset %edi, -8
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    movl {{[0-9]+}}(%esp), %esi
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    movl {{[0-9]+}}(%esp), %edi
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    calll __muldf3
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    addl $16, %esp
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    .cfi_adjust_cfa_offset -16
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    pushl %edi
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    pushl %esi
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    pushl %edx
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    pushl %eax
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    calll __adddf3
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    addl $16, %esp
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    .cfi_adjust_cfa_offset -16
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    popl %esi
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    popl %edi
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    .cfi_def_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-ON-NEXT:    retl
;
; SOFT-FLOAT-32-FMA-FPC-FAST-LABEL: fmuladd_contract_f64:
; SOFT-FLOAT-32-FMA-FPC-FAST:       # %bb.0:
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    pushl %edi
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    pushl %esi
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    .cfi_def_cfa_offset 12
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    .cfi_offset %esi, -12
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    .cfi_offset %edi, -8
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    movl {{[0-9]+}}(%esp), %esi
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    movl {{[0-9]+}}(%esp), %edi
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    calll __muldf3
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    addl $16, %esp
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset -16
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    pushl %edi
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    pushl %esi
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    pushl %edx
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    pushl %eax
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    calll __adddf3
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    addl $16, %esp
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset -16
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    popl %esi
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    popl %edi
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    .cfi_def_cfa_offset 4
; SOFT-FLOAT-32-FMA-FPC-FAST-NEXT:    retl
;
; SOFT-FLOAT-32-FMA4-FPC-OFF-LABEL: fmuladd_contract_f64:
; SOFT-FLOAT-32-FMA4-FPC-OFF:       # %bb.0:
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    pushl %edi
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    pushl %esi
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    .cfi_def_cfa_offset 12
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    .cfi_offset %esi, -12
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    .cfi_offset %edi, -8
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    movl {{[0-9]+}}(%esp), %esi
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    movl {{[0-9]+}}(%esp), %edi
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    calll __muldf3
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    addl $16, %esp
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset -16
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    pushl %edi
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    pushl %esi
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    pushl %edx
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    pushl %eax
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    calll __adddf3
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    addl $16, %esp
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    .cfi_adjust_cfa_offset -16
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    popl %esi
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    popl %edi
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    .cfi_def_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-OFF-NEXT:    retl
;
; SOFT-FLOAT-32-FMA4-FPC-ON-LABEL: fmuladd_contract_f64:
; SOFT-FLOAT-32-FMA4-FPC-ON:       # %bb.0:
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    pushl %edi
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    pushl %esi
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    .cfi_def_cfa_offset 12
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    .cfi_offset %esi, -12
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    .cfi_offset %edi, -8
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    movl {{[0-9]+}}(%esp), %esi
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    movl {{[0-9]+}}(%esp), %edi
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    calll __muldf3
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    addl $16, %esp
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    .cfi_adjust_cfa_offset -16
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    pushl %edi
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    pushl %esi
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    pushl %edx
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    pushl %eax
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    calll __adddf3
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    addl $16, %esp
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    .cfi_adjust_cfa_offset -16
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    popl %esi
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    popl %edi
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    .cfi_def_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-ON-NEXT:    retl
;
; SOFT-FLOAT-32-FMA4-FPC-FAST-LABEL: fmuladd_contract_f64:
; SOFT-FLOAT-32-FMA4-FPC-FAST:       # %bb.0:
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    pushl %edi
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    pushl %esi
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    .cfi_def_cfa_offset 12
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    .cfi_offset %esi, -12
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    .cfi_offset %edi, -8
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    movl {{[0-9]+}}(%esp), %esi
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    movl {{[0-9]+}}(%esp), %edi
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    pushl {{[0-9]+}}(%esp)
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    calll __muldf3
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    addl $16, %esp
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset -16
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    pushl %edi
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    pushl %esi
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    pushl %edx
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    pushl %eax
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    calll __adddf3
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    addl $16, %esp
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    .cfi_adjust_cfa_offset -16
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    popl %esi
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    popl %edi
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    .cfi_def_cfa_offset 4
; SOFT-FLOAT-32-FMA4-FPC-FAST-NEXT:    retl
;
; SOFT-FLOAT-64-FPC-OFF-LABEL: fmuladd_contract_f64:
; SOFT-FLOAT-64-FPC-OFF:       # %bb.0:
; SOFT-FLOAT-64-FPC-OFF-NEXT:    pushq %rbx
; SOFT-FLOAT-64-FPC-OFF-NEXT:    .cfi_def_cfa_offset 16
; SOFT-FLOAT-64-FPC-OFF-NEXT:    .cfi_offset %rbx, -16
; SOFT-FLOAT-64-FPC-OFF-NEXT:    movq %rdx, %rbx
; SOFT-FLOAT-64-FPC-OFF-NEXT:    callq __muldf3@PLT
; SOFT-FLOAT-64-FPC-OFF-NEXT:    movq %rax, %rdi
; SOFT-FLOAT-64-FPC-OFF-NEXT:    movq %rbx, %rsi
; SOFT-FLOAT-64-FPC-OFF-NEXT:    callq __adddf3@PLT
; SOFT-FLOAT-64-FPC-OFF-NEXT:    popq %rbx
; SOFT-FLOAT-64-FPC-OFF-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-64-FPC-OFF-NEXT:    retq
;
; SOFT-FLOAT-64-FPC-ON-LABEL: fmuladd_contract_f64:
; SOFT-FLOAT-64-FPC-ON:       # %bb.0:
; SOFT-FLOAT-64-FPC-ON-NEXT:    pushq %rbx
; SOFT-FLOAT-64-FPC-ON-NEXT:    .cfi_def_cfa_offset 16
; SOFT-FLOAT-64-FPC-ON-NEXT:    .cfi_offset %rbx, -16
; SOFT-FLOAT-64-FPC-ON-NEXT:    movq %rdx, %rbx
; SOFT-FLOAT-64-FPC-ON-NEXT:    callq __muldf3@PLT
; SOFT-FLOAT-64-FPC-ON-NEXT:    movq %rax, %rdi
; SOFT-FLOAT-64-FPC-ON-NEXT:    movq %rbx, %rsi
; SOFT-FLOAT-64-FPC-ON-NEXT:    callq __adddf3@PLT
; SOFT-FLOAT-64-FPC-ON-NEXT:    popq %rbx
; SOFT-FLOAT-64-FPC-ON-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-64-FPC-ON-NEXT:    retq
;
; SOFT-FLOAT-64-FPC-FAST-LABEL: fmuladd_contract_f64:
; SOFT-FLOAT-64-FPC-FAST:       # %bb.0:
; SOFT-FLOAT-64-FPC-FAST-NEXT:    pushq %rbx
; SOFT-FLOAT-64-FPC-FAST-NEXT:    .cfi_def_cfa_offset 16
; SOFT-FLOAT-64-FPC-FAST-NEXT:    .cfi_offset %rbx, -16
; SOFT-FLOAT-64-FPC-FAST-NEXT:    movq %rdx, %rbx
; SOFT-FLOAT-64-FPC-FAST-NEXT:    callq __muldf3@PLT
; SOFT-FLOAT-64-FPC-FAST-NEXT:    movq %rax, %rdi
; SOFT-FLOAT-64-FPC-FAST-NEXT:    movq %rbx, %rsi
; SOFT-FLOAT-64-FPC-FAST-NEXT:    callq __adddf3@PLT
; SOFT-FLOAT-64-FPC-FAST-NEXT:    popq %rbx
; SOFT-FLOAT-64-FPC-FAST-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-64-FPC-FAST-NEXT:    retq
;
; SOFT-FLOAT-64-FMA-FPC-OFF-LABEL: fmuladd_contract_f64:
; SOFT-FLOAT-64-FMA-FPC-OFF:       # %bb.0:
; SOFT-FLOAT-64-FMA-FPC-OFF-NEXT:    pushq %rbx
; SOFT-FLOAT-64-FMA-FPC-OFF-NEXT:    .cfi_def_cfa_offset 16
; SOFT-FLOAT-64-FMA-FPC-OFF-NEXT:    .cfi_offset %rbx, -16
; SOFT-FLOAT-64-FMA-FPC-OFF-NEXT:    movq %rdx, %rbx
; SOFT-FLOAT-64-FMA-FPC-OFF-NEXT:    callq __muldf3@PLT
; SOFT-FLOAT-64-FMA-FPC-OFF-NEXT:    movq %rax, %rdi
; SOFT-FLOAT-64-FMA-FPC-OFF-NEXT:    movq %rbx, %rsi
; SOFT-FLOAT-64-FMA-FPC-OFF-NEXT:    callq __adddf3@PLT
; SOFT-FLOAT-64-FMA-FPC-OFF-NEXT:    popq %rbx
; SOFT-FLOAT-64-FMA-FPC-OFF-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-64-FMA-FPC-OFF-NEXT:    retq
;
; SOFT-FLOAT-64-FMA-FPC-ON-LABEL: fmuladd_contract_f64:
; SOFT-FLOAT-64-FMA-FPC-ON:       # %bb.0:
; SOFT-FLOAT-64-FMA-FPC-ON-NEXT:    pushq %rbx
; SOFT-FLOAT-64-FMA-FPC-ON-NEXT:    .cfi_def_cfa_offset 16
; SOFT-FLOAT-64-FMA-FPC-ON-NEXT:    .cfi_offset %rbx, -16
; SOFT-FLOAT-64-FMA-FPC-ON-NEXT:    movq %rdx, %rbx
; SOFT-FLOAT-64-FMA-FPC-ON-NEXT:    callq __muldf3@PLT
; SOFT-FLOAT-64-FMA-FPC-ON-NEXT:    movq %rax, %rdi
; SOFT-FLOAT-64-FMA-FPC-ON-NEXT:    movq %rbx, %rsi
; SOFT-FLOAT-64-FMA-FPC-ON-NEXT:    callq __adddf3@PLT
; SOFT-FLOAT-64-FMA-FPC-ON-NEXT:    popq %rbx
; SOFT-FLOAT-64-FMA-FPC-ON-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-64-FMA-FPC-ON-NEXT:    retq
;
; SOFT-FLOAT-64-FMA-FPC-FAST-LABEL: fmuladd_contract_f64:
; SOFT-FLOAT-64-FMA-FPC-FAST:       # %bb.0:
; SOFT-FLOAT-64-FMA-FPC-FAST-NEXT:    pushq %rbx
; SOFT-FLOAT-64-FMA-FPC-FAST-NEXT:    .cfi_def_cfa_offset 16
; SOFT-FLOAT-64-FMA-FPC-FAST-NEXT:    .cfi_offset %rbx, -16
; SOFT-FLOAT-64-FMA-FPC-FAST-NEXT:    movq %rdx, %rbx
; SOFT-FLOAT-64-FMA-FPC-FAST-NEXT:    callq __muldf3@PLT
; SOFT-FLOAT-64-FMA-FPC-FAST-NEXT:    movq %rax, %rdi
; SOFT-FLOAT-64-FMA-FPC-FAST-NEXT:    movq %rbx, %rsi
; SOFT-FLOAT-64-FMA-FPC-FAST-NEXT:    callq __adddf3@PLT
; SOFT-FLOAT-64-FMA-FPC-FAST-NEXT:    popq %rbx
; SOFT-FLOAT-64-FMA-FPC-FAST-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-64-FMA-FPC-FAST-NEXT:    retq
;
; SOFT-FLOAT-64-FMA4-FPC-OFF-LABEL: fmuladd_contract_f64:
; SOFT-FLOAT-64-FMA4-FPC-OFF:       # %bb.0:
; SOFT-FLOAT-64-FMA4-FPC-OFF-NEXT:    pushq %rbx
; SOFT-FLOAT-64-FMA4-FPC-OFF-NEXT:    .cfi_def_cfa_offset 16
; SOFT-FLOAT-64-FMA4-FPC-OFF-NEXT:    .cfi_offset %rbx, -16
; SOFT-FLOAT-64-FMA4-FPC-OFF-NEXT:    movq %rdx, %rbx
; SOFT-FLOAT-64-FMA4-FPC-OFF-NEXT:    callq __muldf3@PLT
; SOFT-FLOAT-64-FMA4-FPC-OFF-NEXT:    movq %rax, %rdi
; SOFT-FLOAT-64-FMA4-FPC-OFF-NEXT:    movq %rbx, %rsi
; SOFT-FLOAT-64-FMA4-FPC-OFF-NEXT:    callq __adddf3@PLT
; SOFT-FLOAT-64-FMA4-FPC-OFF-NEXT:    popq %rbx
; SOFT-FLOAT-64-FMA4-FPC-OFF-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-64-FMA4-FPC-OFF-NEXT:    retq
;
; SOFT-FLOAT-64-FMA4-FPC-ON-LABEL: fmuladd_contract_f64:
; SOFT-FLOAT-64-FMA4-FPC-ON:       # %bb.0:
; SOFT-FLOAT-64-FMA4-FPC-ON-NEXT:    pushq %rbx
; SOFT-FLOAT-64-FMA4-FPC-ON-NEXT:    .cfi_def_cfa_offset 16
; SOFT-FLOAT-64-FMA4-FPC-ON-NEXT:    .cfi_offset %rbx, -16
; SOFT-FLOAT-64-FMA4-FPC-ON-NEXT:    movq %rdx, %rbx
; SOFT-FLOAT-64-FMA4-FPC-ON-NEXT:    callq __muldf3@PLT
; SOFT-FLOAT-64-FMA4-FPC-ON-NEXT:    movq %rax, %rdi
; SOFT-FLOAT-64-FMA4-FPC-ON-NEXT:    movq %rbx, %rsi
; SOFT-FLOAT-64-FMA4-FPC-ON-NEXT:    callq __adddf3@PLT
; SOFT-FLOAT-64-FMA4-FPC-ON-NEXT:    popq %rbx
; SOFT-FLOAT-64-FMA4-FPC-ON-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-64-FMA4-FPC-ON-NEXT:    retq
;
; SOFT-FLOAT-64-FMA4-FPC-FAST-LABEL: fmuladd_contract_f64:
; SOFT-FLOAT-64-FMA4-FPC-FAST:       # %bb.0:
; SOFT-FLOAT-64-FMA4-FPC-FAST-NEXT:    pushq %rbx
; SOFT-FLOAT-64-FMA4-FPC-FAST-NEXT:    .cfi_def_cfa_offset 16
; SOFT-FLOAT-64-FMA4-FPC-FAST-NEXT:    .cfi_offset %rbx, -16
; SOFT-FLOAT-64-FMA4-FPC-FAST-NEXT:    movq %rdx, %rbx
; SOFT-FLOAT-64-FMA4-FPC-FAST-NEXT:    callq __muldf3@PLT
; SOFT-FLOAT-64-FMA4-FPC-FAST-NEXT:    movq %rax, %rdi
; SOFT-FLOAT-64-FMA4-FPC-FAST-NEXT:    movq %rbx, %rsi
; SOFT-FLOAT-64-FMA4-FPC-FAST-NEXT:    callq __adddf3@PLT
; SOFT-FLOAT-64-FMA4-FPC-FAST-NEXT:    popq %rbx
; SOFT-FLOAT-64-FMA4-FPC-FAST-NEXT:    .cfi_def_cfa_offset 8
; SOFT-FLOAT-64-FMA4-FPC-FAST-NEXT:    retq
    %product = fmul double %a, %b
    %result = fadd double %product, %c
    ret double %result
}

attributes #0 = { "use-soft-float"="true" }

declare float @llvm.fmuladd.f32(float %a, float %b, float %c)
declare double @llvm.fmuladd.f64(double %a, double %b, double %c)
