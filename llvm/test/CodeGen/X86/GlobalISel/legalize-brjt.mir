# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py UTC_ARGS: --version 4
# RUN: llc -mtriple=x86_64-linux-gnu -run-pass=legalizer %s -o - | FileCheck %s --check-prefix=ALL
# RUN: llc -mtriple=i386-linux-gnu   -run-pass=legalizer %s -o - | FileCheck %s --check-prefix=ALL

---
name:            test
alignment:       16
legalized:       false
jumpTable:
  kind:            block-address
  entries:
    - id:              0
      blocks:          [ '%bb.2', '%bb.3', ]
body:             |
  ; ALL-LABEL: name: test
  ; ALL: bb.0.entry:
  ; ALL-NEXT:   successors: %bb.1(0x40000000), %bb.4(0x40000000)
  ; ALL-NEXT:   liveins: $edi
  ; ALL-NEXT: {{  $}}
  ; ALL-NEXT:   [[COPY:%[0-9]+]]:_(s32) = COPY $edi
  ; ALL-NEXT:   [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
  ; ALL-NEXT:   [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 0
  ; ALL-NEXT:   [[SUB:%[0-9]+]]:_(s32) = G_SUB [[COPY]], [[C1]]
  ; ALL-NEXT:   [[ICMP:%[0-9]+]]:_(s8) = G_ICMP intpred(ugt), [[SUB]](s32), [[C]]
  ; ALL-NEXT:   [[TRUNC:%[0-9]+]]:_(s1) = G_TRUNC [[ICMP]](s8)
  ; ALL-NEXT:   G_BRCOND [[TRUNC]](s1), %bb.4
  ; ALL-NEXT: {{  $}}
  ; ALL-NEXT: bb.1.entry:
  ; ALL-NEXT:   successors: %bb.2(0x40000000), %bb.3(0x40000000)
  ; ALL-NEXT: {{  $}}
  ; ALL-NEXT:   [[JUMP_TABLE:%[0-9]+]]:_(p0) = G_JUMP_TABLE %jump-table.0
  ; ALL-NEXT:   G_BRJT [[JUMP_TABLE]](p0), %jump-table.0, [[SUB]](s32)
  ; ALL-NEXT: {{  $}}
  ; ALL-NEXT: bb.2:
  ; ALL-NEXT:   successors: %bb.5(0x80000000)
  ; ALL-NEXT: {{  $}}
  ; ALL-NEXT:   G_BR %bb.5
  ; ALL-NEXT: {{  $}}
  ; ALL-NEXT: bb.3:
  ; ALL-NEXT:   successors: %bb.5(0x80000000)
  ; ALL-NEXT: {{  $}}
  ; ALL-NEXT:   G_BR %bb.5
  ; ALL-NEXT: {{  $}}
  ; ALL-NEXT: bb.4:
  ; ALL-NEXT:   successors: %bb.5(0x80000000)
  ; ALL-NEXT: {{  $}}
  ; ALL-NEXT: bb.5:
  ; ALL-NEXT:   $eax = COPY [[COPY]](s32)
  ; ALL-NEXT:   RET 0, implicit $eax
  bb.0.entry:
    successors: %bb.1(0x40000000), %bb.4(0x40000000)
    liveins: $edi

    %0:_(s32) = COPY $edi
    %4:_(s32) = G_CONSTANT i32 4
    %1:_(s32) = G_CONSTANT i32 0
    %2:_(s32) = G_SUB %0, %1
    %5:_(s1) = G_ICMP intpred(ugt), %2(s32), %4
    G_BRCOND %5(s1), %bb.4

  bb.1.entry:
    successors: %bb.2(0x1999999a), %bb.3(0x1999999a)

    %6:_(p0) = G_JUMP_TABLE %jump-table.0
    G_BRJT %6(p0), %jump-table.0, %2(s32)

  bb.2:
    successors: %bb.5(0x80000000)

    G_BR %bb.5

  bb.3:
    successors: %bb.5(0x80000000)

    G_BR %bb.5

  bb.4:
    successors: %bb.5(0x80000000)

  bb.5:
    $eax = COPY %0(s32)
    RET 0, implicit $eax

...
