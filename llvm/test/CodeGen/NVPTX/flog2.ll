; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 5
; RUN: llc < %s -march=nvptx64 -mcpu=sm_20 -mattr=+ptx32 -nvptx-approx-log2f32 | FileCheck --check-prefixes=CHECK %s
; RUN: %if ptxas-12.0 %{ llc < %s -march=nvptx64 -mcpu=sm_20 -mattr=+ptx32 -nvptx-approx-log2f32 | %ptxas-verify -arch=sm_20 %}
target triple = "nvptx64-nvidia-cuda"

; CHECK-LABEL: log2_test
define float @log2_test(float %in) {
; CHECK-LABEL: log2_test(
; CHECK:       {
; CHECK-NEXT:    .reg .f32 %f<3>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    ld.param.f32 %f1, [log2_test_param_0];
; CHECK-NEXT:    lg2.approx.f32 %f2, %f1;
; CHECK-NEXT:    st.param.f32 [func_retval0], %f2;
; CHECK-NEXT:    ret;
entry:
  %log2 = call float @llvm.log2.f32(float %in)
  ret float %log2
}

; CHECK-LABEL: log2_ftz_test
define float @log2_ftz_test(float %in) #0 {
; CHECK-LABEL: log2_ftz_test(
; CHECK:       {
; CHECK-NEXT:    .reg .f32 %f<3>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    ld.param.f32 %f1, [log2_ftz_test_param_0];
; CHECK-NEXT:    lg2.approx.ftz.f32 %f2, %f1;
; CHECK-NEXT:    st.param.f32 [func_retval0], %f2;
; CHECK-NEXT:    ret;
entry:
  %log2 = call float @llvm.log2.f32(float %in)
  ret float %log2
}

; CHECK-LABEL: log2_test_v
define <4 x float> @log2_test_v(<4 x float> %in) {
; CHECK-LABEL: log2_test_v(
; CHECK:       {
; CHECK-NEXT:    .reg .f32 %f<9>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    ld.param.v4.f32 {%f1, %f2, %f3, %f4}, [log2_test_v_param_0];
; CHECK-NEXT:    lg2.approx.f32 %f5, %f4;
; CHECK-NEXT:    lg2.approx.f32 %f6, %f3;
; CHECK-NEXT:    lg2.approx.f32 %f7, %f2;
; CHECK-NEXT:    lg2.approx.f32 %f8, %f1;
; CHECK-NEXT:    st.param.v4.f32 [func_retval0], {%f8, %f7, %f6, %f5};
; CHECK-NEXT:    ret;
entry:
  %log2 = call <4 x float> @llvm.log2.v4f32(<4 x float> %in)
  ret <4 x float> %log2
}

declare float @llvm.log2.f32(float %val)

declare <4 x float> @llvm.log2.v4f32(<4 x float> %val)

attributes #0 = {"denormal-fp-math"="preserve-sign"}
