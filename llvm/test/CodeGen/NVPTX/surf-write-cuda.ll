; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 5
; RUN: llc < %s -march=nvptx64 -mcpu=sm_20 -verify-machineinstrs | FileCheck %s --check-prefix=SM20
; RUN: llc < %s -march=nvptx64 -mcpu=sm_30 -verify-machineinstrs | FileCheck %s --check-prefix=SM30
; RUN: %if ptxas %{ llc < %s -march=nvptx64 -mcpu=sm_20 -verify-machineinstrs | %ptxas-verify %}
; RUN: %if ptxas %{ llc < %s -march=nvptx64 -mcpu=sm_30 -verify-machineinstrs | %ptxas-verify %}

target triple = "nvptx-unknown-cuda"

declare void @llvm.nvvm.sust.b.1d.i32.trap(i64, i32, i32)
declare i64 @llvm.nvvm.texsurf.handle.internal.p1(ptr addrspace(1))


define void @foo(i64 %img, i32 %val, i32 %idx) {
; SM20-LABEL: foo(
; SM20:       {
; SM20-NEXT:    .reg .b32 %r<3>;
; SM20-NEXT:    .reg .b64 %rd<2>;
; SM20-EMPTY:
; SM20-NEXT:  // %bb.0:
; SM20-NEXT:    ld.param.u64 %rd1, [foo_param_0];
; SM20-NEXT:    ld.param.u32 %r1, [foo_param_1];
; SM20-NEXT:    ld.param.u32 %r2, [foo_param_2];
; SM20-NEXT:    sust.b.1d.b32.trap [%rd1, {%r2}], {%r1};
; SM20-NEXT:    ret;
;
; SM30-LABEL: foo(
; SM30:       {
; SM30-NEXT:    .reg .b32 %r<3>;
; SM30-NEXT:    .reg .b64 %rd<2>;
; SM30-EMPTY:
; SM30-NEXT:  // %bb.0:
; SM30-NEXT:    ld.param.u64 %rd1, [foo_param_0];
; SM30-NEXT:    ld.param.u32 %r1, [foo_param_1];
; SM30-NEXT:    ld.param.u32 %r2, [foo_param_2];
; SM30-NEXT:    sust.b.1d.b32.trap [%rd1, {%r2}], {%r1};
; SM30-NEXT:    ret;
  tail call void @llvm.nvvm.sust.b.1d.i32.trap(i64 %img, i32 %idx, i32 %val)
  ret void
}


@surf0 = internal addrspace(1) global i64 0, align 8


define void @bar(i32 %val, i32 %idx) {
; SM20-LABEL: bar(
; SM20:       {
; SM20-NEXT:    .reg .b32 %r<3>;
; SM20-NEXT:    .reg .b64 %rd<2>;
; SM20-EMPTY:
; SM20-NEXT:  // %bb.0:
; SM20-NEXT:    ld.param.u32 %r1, [bar_param_0];
; SM20-NEXT:    ld.param.u32 %r2, [bar_param_1];
; SM20-NEXT:    sust.b.1d.b32.trap [surf0, {%r2}], {%r1};
; SM20-NEXT:    ret;
;
; SM30-LABEL: bar(
; SM30:       {
; SM30-NEXT:    .reg .b32 %r<3>;
; SM30-NEXT:    .reg .b64 %rd<2>;
; SM30-EMPTY:
; SM30-NEXT:  // %bb.0:
; SM30-NEXT:    ld.param.u32 %r1, [bar_param_0];
; SM30-NEXT:    ld.param.u32 %r2, [bar_param_1];
; SM30-NEXT:    sust.b.1d.b32.trap [surf0, {%r2}], {%r1};
; SM30-NEXT:    ret;
  %surfHandle = tail call i64 @llvm.nvvm.texsurf.handle.internal.p1(ptr addrspace(1) @surf0)
  tail call void @llvm.nvvm.sust.b.1d.i32.trap(i64 %surfHandle, i32 %idx, i32 %val)
  ret void
}


!nvvm.annotations = !{!1, !2, !3}
!1 = !{ptr @foo, !"kernel", i32 1}
!2 = !{ptr @bar, !"kernel", i32 1}
!3 = !{ptr addrspace(1) @surf0, !"surface", i32 1}

