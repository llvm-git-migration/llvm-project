; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 5
; RUN: llc -mtriple=riscv32 -O3 -tail-merge-only-bbs-without-succ=true -verify-machineinstrs < %s \
; RUN:   | FileCheck %s --check-prefix=TAIL-MERGE-NO-SUCC
; RUN: llc -mtriple=riscv32 -O3 -enable-tail-merge=false -verify-machineinstrs < %s \
; RUN:   | FileCheck %s --check-prefix=NO-TAIL-MERGE

define i32 @test(ptr %addr,i1 %cond1, i1 %cond2) {
; TAIL-MERGE-NO-SUCC-LABEL: test:
; TAIL-MERGE-NO-SUCC:       # %bb.0: # %entry
; TAIL-MERGE-NO-SUCC-NEXT:    andi a1, a1, 1
; TAIL-MERGE-NO-SUCC-NEXT:    beqz a1, .LBB0_4
; TAIL-MERGE-NO-SUCC-NEXT:  # %bb.1: # %bb1
; TAIL-MERGE-NO-SUCC-NEXT:    li a1, 2
; TAIL-MERGE-NO-SUCC-NEXT:    andi a2, a2, 1
; TAIL-MERGE-NO-SUCC-NEXT:    beqz a2, .LBB0_3
; TAIL-MERGE-NO-SUCC-NEXT:  # %bb.2: # %bb2
; TAIL-MERGE-NO-SUCC-NEXT:    sw a1, 0(a0)
; TAIL-MERGE-NO-SUCC-NEXT:    li a0, 0
; TAIL-MERGE-NO-SUCC-NEXT:    ret
; TAIL-MERGE-NO-SUCC-NEXT:  .LBB0_3: # %bb3
; TAIL-MERGE-NO-SUCC-NEXT:    sw a1, 0(a0)
; TAIL-MERGE-NO-SUCC-NEXT:  .LBB0_4: # %bb5
; TAIL-MERGE-NO-SUCC-NEXT:    li a0, 0
; TAIL-MERGE-NO-SUCC-NEXT:    ret
;
; NO-TAIL-MERGE-LABEL: test:
; NO-TAIL-MERGE:       # %bb.0: # %entry
; NO-TAIL-MERGE-NEXT:    andi a1, a1, 1
; NO-TAIL-MERGE-NEXT:    beqz a1, .LBB0_3
; NO-TAIL-MERGE-NEXT:  # %bb.1: # %bb1
; NO-TAIL-MERGE-NEXT:    li a1, 2
; NO-TAIL-MERGE-NEXT:    andi a2, a2, 1
; NO-TAIL-MERGE-NEXT:    beqz a2, .LBB0_4
; NO-TAIL-MERGE-NEXT:  # %bb.2: # %bb2
; NO-TAIL-MERGE-NEXT:    sw a1, 0(a0)
; NO-TAIL-MERGE-NEXT:    li a0, 0
; NO-TAIL-MERGE-NEXT:    ret
; NO-TAIL-MERGE-NEXT:  .LBB0_3: # %bb5
; NO-TAIL-MERGE-NEXT:    li a0, 0
; NO-TAIL-MERGE-NEXT:    ret
; NO-TAIL-MERGE-NEXT:  .LBB0_4: # %bb3
; NO-TAIL-MERGE-NEXT:    sw a1, 0(a0)
; NO-TAIL-MERGE-NEXT:    li a0, 0
; NO-TAIL-MERGE-NEXT:    ret
entry:
  br i1 %cond1, label %bb1, label %bb5

bb1:
  br i1 %cond2, label %bb2, label %bb3

bb2:
  store i32 2, ptr %addr, align 4
  br label %bb4

bb3:
  store i32 2, ptr %addr, align 4
  br label %bb4

bb4:
  ret i32 0

bb5:
  ret i32 0
}
