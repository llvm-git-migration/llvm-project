# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -mtriple=riscv32 -mattr=+v -run-pass=instruction-select -simplify-mir -verify-machineinstrs %s -o - \
# RUN: | FileCheck -check-prefix=RV32I %s

---
name:            sub_nxv1s8
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $x10, $x11

    ; RV32I-LABEL: name: sub_nxv1s8
    ; RV32I: liveins: $x10, $x11
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:vr = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vr = COPY $x11
    ; RV32I-NEXT: [[DEF:%[0-9]+]]:vr = IMPLICIT_DEF
    ; RV32I-NEXT: [[PseudoVSUB_VV_MF8_:%[0-9]+]]:vr = PseudoVSUB_VV_MF8 [[DEF]], [[COPY]], [[COPY1]], -1, 3 /* e8 */, 3 /* ta, ma */
    ; RV32I-NEXT: $x10 = COPY [[PseudoVSUB_VV_MF8_]]
    ; RV32I-NEXT: PseudoRET implicit $x10
    %0:vrb(<vscale x 1 x s8>) = COPY $x10
    %1:vrb(<vscale x 1 x s8>) = COPY $x11
    %2:vrb(<vscale x 1 x s8>) = G_SUB %0, %1
    $x10 = COPY %2(<vscale x 1 x s8>)
    PseudoRET implicit $x10

...
---
name:            sub_nxv2s8
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $x10, $x11

    ; RV32I-LABEL: name: sub_nxv2s8
    ; RV32I: liveins: $x10, $x11
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:vr = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vr = COPY $x11
    ; RV32I-NEXT: [[DEF:%[0-9]+]]:vr = IMPLICIT_DEF
    ; RV32I-NEXT: [[PseudoVSUB_VV_MF4_:%[0-9]+]]:vr = PseudoVSUB_VV_MF4 [[DEF]], [[COPY]], [[COPY1]], -1, 3 /* e8 */, 3 /* ta, ma */
    ; RV32I-NEXT: $x10 = COPY [[PseudoVSUB_VV_MF4_]]
    ; RV32I-NEXT: PseudoRET implicit $x10
    %0:vrb(<vscale x 2 x s8>) = COPY $x10
    %1:vrb(<vscale x 2 x s8>) = COPY $x11
    %2:vrb(<vscale x 2 x s8>) = G_SUB %0, %1
    $x10 = COPY %2(<vscale x 2 x s8>)
    PseudoRET implicit $x10

...
---
name:            sub_nxv4s8
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $x10, $x11

    ; RV32I-LABEL: name: sub_nxv4s8
    ; RV32I: liveins: $x10, $x11
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:vr = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vr = COPY $x11
    ; RV32I-NEXT: [[DEF:%[0-9]+]]:vr = IMPLICIT_DEF
    ; RV32I-NEXT: [[PseudoVSUB_VV_MF2_:%[0-9]+]]:vr = PseudoVSUB_VV_MF2 [[DEF]], [[COPY]], [[COPY1]], -1, 3 /* e8 */, 3 /* ta, ma */
    ; RV32I-NEXT: $x10 = COPY [[PseudoVSUB_VV_MF2_]]
    ; RV32I-NEXT: PseudoRET implicit $x10
    %0:vrb(<vscale x 4 x s8>) = COPY $x10
    %1:vrb(<vscale x 4 x s8>) = COPY $x11
    %2:vrb(<vscale x 4 x s8>) = G_SUB %0, %1
    $x10 = COPY %2(<vscale x 4 x s8>)
    PseudoRET implicit $x10

...
---
name:            sub_nxv8s8
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $x10, $x11

    ; RV32I-LABEL: name: sub_nxv8s8
    ; RV32I: liveins: $x10, $x11
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:vr = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vr = COPY $x11
    ; RV32I-NEXT: [[DEF:%[0-9]+]]:vr = IMPLICIT_DEF
    ; RV32I-NEXT: [[PseudoVSUB_VV_M1_:%[0-9]+]]:vr = PseudoVSUB_VV_M1 [[DEF]], [[COPY]], [[COPY1]], -1, 3 /* e8 */, 3 /* ta, ma */
    ; RV32I-NEXT: $x10 = COPY [[PseudoVSUB_VV_M1_]]
    ; RV32I-NEXT: PseudoRET implicit $x10
    %0:vrb(<vscale x 8 x s8>) = COPY $x10
    %1:vrb(<vscale x 8 x s8>) = COPY $x11
    %2:vrb(<vscale x 8 x s8>) = G_SUB %0, %1
    $x10 = COPY %2(<vscale x 8 x s8>)
    PseudoRET implicit $x10

...
---
name:            sub_nxv16s8
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $x10, $x11

    ; RV32I-LABEL: name: sub_nxv16s8
    ; RV32I: liveins: $x10, $x11
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:vrm2 = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vrm2 = COPY $x11
    ; RV32I-NEXT: [[DEF:%[0-9]+]]:vrm2 = IMPLICIT_DEF
    ; RV32I-NEXT: [[PseudoVSUB_VV_M2_:%[0-9]+]]:vrm2 = PseudoVSUB_VV_M2 [[DEF]], [[COPY]], [[COPY1]], -1, 3 /* e8 */, 3 /* ta, ma */
    ; RV32I-NEXT: $x10 = COPY [[PseudoVSUB_VV_M2_]]
    ; RV32I-NEXT: PseudoRET implicit $x10
    %0:vrb(<vscale x 16 x s8>) = COPY $x10
    %1:vrb(<vscale x 16 x s8>) = COPY $x11
    %2:vrb(<vscale x 16 x s8>) = G_SUB %0, %1
    $x10 = COPY %2(<vscale x 16 x s8>)
    PseudoRET implicit $x10

...
---
name:            sub_nxv32s8
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $x10, $x11

    ; RV32I-LABEL: name: sub_nxv32s8
    ; RV32I: liveins: $x10, $x11
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:vrm4 = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vrm4 = COPY $x11
    ; RV32I-NEXT: [[DEF:%[0-9]+]]:vrm4 = IMPLICIT_DEF
    ; RV32I-NEXT: [[PseudoVSUB_VV_M4_:%[0-9]+]]:vrm4 = PseudoVSUB_VV_M4 [[DEF]], [[COPY]], [[COPY1]], -1, 3 /* e8 */, 3 /* ta, ma */
    ; RV32I-NEXT: $x10 = COPY [[PseudoVSUB_VV_M4_]]
    ; RV32I-NEXT: PseudoRET implicit $x10
    %0:vrb(<vscale x 32 x s8>) = COPY $x10
    %1:vrb(<vscale x 32 x s8>) = COPY $x11
    %2:vrb(<vscale x 32 x s8>) = G_SUB %0, %1
    $x10 = COPY %2(<vscale x 32 x s8>)
    PseudoRET implicit $x10

...
---
name:            sub_nxv64s8
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $x10, $x11

    ; RV32I-LABEL: name: sub_nxv64s8
    ; RV32I: liveins: $x10, $x11
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:vrm8 = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vrm8 = COPY $x11
    ; RV32I-NEXT: [[DEF:%[0-9]+]]:vrm8 = IMPLICIT_DEF
    ; RV32I-NEXT: [[PseudoVSUB_VV_M8_:%[0-9]+]]:vrm8 = PseudoVSUB_VV_M8 [[DEF]], [[COPY]], [[COPY1]], -1, 3 /* e8 */, 3 /* ta, ma */
    ; RV32I-NEXT: $x10 = COPY [[PseudoVSUB_VV_M8_]]
    ; RV32I-NEXT: PseudoRET implicit $x10
    %0:vrb(<vscale x 64 x s8>) = COPY $x10
    %1:vrb(<vscale x 64 x s8>) = COPY $x11
    %2:vrb(<vscale x 64 x s8>) = G_SUB %0, %1
    $x10 = COPY %2(<vscale x 64 x s8>)
    PseudoRET implicit $x10

...
---
name:            sub_nxv1s16
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $x10, $x11

    ; RV32I-LABEL: name: sub_nxv1s16
    ; RV32I: liveins: $x10, $x11
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:vr = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vr = COPY $x11
    ; RV32I-NEXT: [[DEF:%[0-9]+]]:vr = IMPLICIT_DEF
    ; RV32I-NEXT: [[PseudoVSUB_VV_MF4_:%[0-9]+]]:vr = PseudoVSUB_VV_MF4 [[DEF]], [[COPY]], [[COPY1]], -1, 4 /* e16 */, 3 /* ta, ma */
    ; RV32I-NEXT: $x10 = COPY [[PseudoVSUB_VV_MF4_]]
    ; RV32I-NEXT: PseudoRET implicit $x10
    %0:vrb(<vscale x 1 x s16>) = COPY $x10
    %1:vrb(<vscale x 1 x s16>) = COPY $x11
    %2:vrb(<vscale x 1 x s16>) = G_SUB %0, %1
    $x10 = COPY %2(<vscale x 1 x s16>)
    PseudoRET implicit $x10

...
---
name:            sub_nxv2s16
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $x10, $x11

    ; RV32I-LABEL: name: sub_nxv2s16
    ; RV32I: liveins: $x10, $x11
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:vr = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vr = COPY $x11
    ; RV32I-NEXT: [[DEF:%[0-9]+]]:vr = IMPLICIT_DEF
    ; RV32I-NEXT: [[PseudoVSUB_VV_MF2_:%[0-9]+]]:vr = PseudoVSUB_VV_MF2 [[DEF]], [[COPY]], [[COPY1]], -1, 4 /* e16 */, 3 /* ta, ma */
    ; RV32I-NEXT: $x10 = COPY [[PseudoVSUB_VV_MF2_]]
    ; RV32I-NEXT: PseudoRET implicit $x10
    %0:vrb(<vscale x 2 x s16>) = COPY $x10
    %1:vrb(<vscale x 2 x s16>) = COPY $x11
    %2:vrb(<vscale x 2 x s16>) = G_SUB %0, %1
    $x10 = COPY %2(<vscale x 2 x s16>)
    PseudoRET implicit $x10

...
---
name:            sub_nxv4s16
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $x10, $x11

    ; RV32I-LABEL: name: sub_nxv4s16
    ; RV32I: liveins: $x10, $x11
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:vr = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vr = COPY $x11
    ; RV32I-NEXT: [[DEF:%[0-9]+]]:vr = IMPLICIT_DEF
    ; RV32I-NEXT: [[PseudoVSUB_VV_M1_:%[0-9]+]]:vr = PseudoVSUB_VV_M1 [[DEF]], [[COPY]], [[COPY1]], -1, 4 /* e16 */, 3 /* ta, ma */
    ; RV32I-NEXT: $x10 = COPY [[PseudoVSUB_VV_M1_]]
    ; RV32I-NEXT: PseudoRET implicit $x10
    %0:vrb(<vscale x 4 x s16>) = COPY $x10
    %1:vrb(<vscale x 4 x s16>) = COPY $x11
    %2:vrb(<vscale x 4 x s16>) = G_SUB %0, %1
    $x10 = COPY %2(<vscale x 4 x s16>)
    PseudoRET implicit $x10

...
---
name:            sub_nxv8s16
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $x10, $x11

    ; RV32I-LABEL: name: sub_nxv8s16
    ; RV32I: liveins: $x10, $x11
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:vrm2 = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vrm2 = COPY $x11
    ; RV32I-NEXT: [[DEF:%[0-9]+]]:vrm2 = IMPLICIT_DEF
    ; RV32I-NEXT: [[PseudoVSUB_VV_M2_:%[0-9]+]]:vrm2 = PseudoVSUB_VV_M2 [[DEF]], [[COPY]], [[COPY1]], -1, 4 /* e16 */, 3 /* ta, ma */
    ; RV32I-NEXT: $x10 = COPY [[PseudoVSUB_VV_M2_]]
    ; RV32I-NEXT: PseudoRET implicit $x10
    %0:vrb(<vscale x 8 x s16>) = COPY $x10
    %1:vrb(<vscale x 8 x s16>) = COPY $x11
    %2:vrb(<vscale x 8 x s16>) = G_SUB %0, %1
    $x10 = COPY %2(<vscale x 8 x s16>)
    PseudoRET implicit $x10

...
---
name:            sub_nxv16s16
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $x10, $x11

    ; RV32I-LABEL: name: sub_nxv16s16
    ; RV32I: liveins: $x10, $x11
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:vrm4 = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vrm4 = COPY $x11
    ; RV32I-NEXT: [[DEF:%[0-9]+]]:vrm4 = IMPLICIT_DEF
    ; RV32I-NEXT: [[PseudoVSUB_VV_M4_:%[0-9]+]]:vrm4 = PseudoVSUB_VV_M4 [[DEF]], [[COPY]], [[COPY1]], -1, 4 /* e16 */, 3 /* ta, ma */
    ; RV32I-NEXT: $x10 = COPY [[PseudoVSUB_VV_M4_]]
    ; RV32I-NEXT: PseudoRET implicit $x10
    %0:vrb(<vscale x 16 x s16>) = COPY $x10
    %1:vrb(<vscale x 16 x s16>) = COPY $x11
    %2:vrb(<vscale x 16 x s16>) = G_SUB %0, %1
    $x10 = COPY %2(<vscale x 16 x s16>)
    PseudoRET implicit $x10

...
---
name:            sub_nxv32s16
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $x10, $x11

    ; RV32I-LABEL: name: sub_nxv32s16
    ; RV32I: liveins: $x10, $x11
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:vrm8 = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vrm8 = COPY $x11
    ; RV32I-NEXT: [[DEF:%[0-9]+]]:vrm8 = IMPLICIT_DEF
    ; RV32I-NEXT: [[PseudoVSUB_VV_M8_:%[0-9]+]]:vrm8 = PseudoVSUB_VV_M8 [[DEF]], [[COPY]], [[COPY1]], -1, 4 /* e16 */, 3 /* ta, ma */
    ; RV32I-NEXT: $x10 = COPY [[PseudoVSUB_VV_M8_]]
    ; RV32I-NEXT: PseudoRET implicit $x10
    %0:vrb(<vscale x 32 x s16>) = COPY $x10
    %1:vrb(<vscale x 32 x s16>) = COPY $x11
    %2:vrb(<vscale x 32 x s16>) = G_SUB %0, %1
    $x10 = COPY %2(<vscale x 32 x s16>)
    PseudoRET implicit $x10

...
---
name:            sub_nxv1s32
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $x10, $x11

    ; RV32I-LABEL: name: sub_nxv1s32
    ; RV32I: liveins: $x10, $x11
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:vr = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vr = COPY $x11
    ; RV32I-NEXT: [[DEF:%[0-9]+]]:vr = IMPLICIT_DEF
    ; RV32I-NEXT: [[PseudoVSUB_VV_MF2_:%[0-9]+]]:vr = PseudoVSUB_VV_MF2 [[DEF]], [[COPY]], [[COPY1]], -1, 5 /* e32 */, 3 /* ta, ma */
    ; RV32I-NEXT: $x10 = COPY [[PseudoVSUB_VV_MF2_]]
    ; RV32I-NEXT: PseudoRET implicit $x10
    %0:vrb(<vscale x 1 x s32>) = COPY $x10
    %1:vrb(<vscale x 1 x s32>) = COPY $x11
    %2:vrb(<vscale x 1 x s32>) = G_SUB %0, %1
    $x10 = COPY %2(<vscale x 1 x s32>)
    PseudoRET implicit $x10

...
---
name:            sub_nxv2s32
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $x10, $x11

    ; RV32I-LABEL: name: sub_nxv2s32
    ; RV32I: liveins: $x10, $x11
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:vr = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vr = COPY $x11
    ; RV32I-NEXT: [[DEF:%[0-9]+]]:vr = IMPLICIT_DEF
    ; RV32I-NEXT: [[PseudoVSUB_VV_M1_:%[0-9]+]]:vr = PseudoVSUB_VV_M1 [[DEF]], [[COPY]], [[COPY1]], -1, 5 /* e32 */, 3 /* ta, ma */
    ; RV32I-NEXT: $x10 = COPY [[PseudoVSUB_VV_M1_]]
    ; RV32I-NEXT: PseudoRET implicit $x10
    %0:vrb(<vscale x 2 x s32>) = COPY $x10
    %1:vrb(<vscale x 2 x s32>) = COPY $x11
    %2:vrb(<vscale x 2 x s32>) = G_SUB %0, %1
    $x10 = COPY %2(<vscale x 2 x s32>)
    PseudoRET implicit $x10

...
---
name:            sub_nxv4s32
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $x10, $x11

    ; RV32I-LABEL: name: sub_nxv4s32
    ; RV32I: liveins: $x10, $x11
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:vrm2 = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vrm2 = COPY $x11
    ; RV32I-NEXT: [[DEF:%[0-9]+]]:vrm2 = IMPLICIT_DEF
    ; RV32I-NEXT: [[PseudoVSUB_VV_M2_:%[0-9]+]]:vrm2 = PseudoVSUB_VV_M2 [[DEF]], [[COPY]], [[COPY1]], -1, 5 /* e32 */, 3 /* ta, ma */
    ; RV32I-NEXT: $x10 = COPY [[PseudoVSUB_VV_M2_]]
    ; RV32I-NEXT: PseudoRET implicit $x10
    %0:vrb(<vscale x 4 x s32>) = COPY $x10
    %1:vrb(<vscale x 4 x s32>) = COPY $x11
    %2:vrb(<vscale x 4 x s32>) = G_SUB %0, %1
    $x10 = COPY %2(<vscale x 4 x s32>)
    PseudoRET implicit $x10

...
---
name:            sub_nxv8s32
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $x10, $x11

    ; RV32I-LABEL: name: sub_nxv8s32
    ; RV32I: liveins: $x10, $x11
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:vrm4 = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vrm4 = COPY $x11
    ; RV32I-NEXT: [[DEF:%[0-9]+]]:vrm4 = IMPLICIT_DEF
    ; RV32I-NEXT: [[PseudoVSUB_VV_M4_:%[0-9]+]]:vrm4 = PseudoVSUB_VV_M4 [[DEF]], [[COPY]], [[COPY1]], -1, 5 /* e32 */, 3 /* ta, ma */
    ; RV32I-NEXT: $x10 = COPY [[PseudoVSUB_VV_M4_]]
    ; RV32I-NEXT: PseudoRET implicit $x10
    %0:vrb(<vscale x 8 x s32>) = COPY $x10
    %1:vrb(<vscale x 8 x s32>) = COPY $x11
    %2:vrb(<vscale x 8 x s32>) = G_SUB %0, %1
    $x10 = COPY %2(<vscale x 8 x s32>)
    PseudoRET implicit $x10

...
---
name:            sub_nxv16s32
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $x10, $x11

    ; RV32I-LABEL: name: sub_nxv16s32
    ; RV32I: liveins: $x10, $x11
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:vrm8 = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vrm8 = COPY $x11
    ; RV32I-NEXT: [[DEF:%[0-9]+]]:vrm8 = IMPLICIT_DEF
    ; RV32I-NEXT: [[PseudoVSUB_VV_M8_:%[0-9]+]]:vrm8 = PseudoVSUB_VV_M8 [[DEF]], [[COPY]], [[COPY1]], -1, 5 /* e32 */, 3 /* ta, ma */
    ; RV32I-NEXT: $x10 = COPY [[PseudoVSUB_VV_M8_]]
    ; RV32I-NEXT: PseudoRET implicit $x10
    %0:vrb(<vscale x 16 x s32>) = COPY $x10
    %1:vrb(<vscale x 16 x s32>) = COPY $x11
    %2:vrb(<vscale x 16 x s32>) = G_SUB %0, %1
    $x10 = COPY %2(<vscale x 16 x s32>)
    PseudoRET implicit $x10

...
---
name:            sub_nxv1s64
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $x10, $x11

    ; RV32I-LABEL: name: sub_nxv1s64
    ; RV32I: liveins: $x10, $x11
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:vr = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vr = COPY $x11
    ; RV32I-NEXT: [[DEF:%[0-9]+]]:vr = IMPLICIT_DEF
    ; RV32I-NEXT: [[PseudoVSUB_VV_M1_:%[0-9]+]]:vr = PseudoVSUB_VV_M1 [[DEF]], [[COPY]], [[COPY1]], -1, 6 /* e64 */, 3 /* ta, ma */
    ; RV32I-NEXT: $x10 = COPY [[PseudoVSUB_VV_M1_]]
    ; RV32I-NEXT: PseudoRET implicit $x10
    %0:vrb(<vscale x 1 x s64>) = COPY $x10
    %1:vrb(<vscale x 1 x s64>) = COPY $x11
    %2:vrb(<vscale x 1 x s64>) = G_SUB %0, %1
    $x10 = COPY %2(<vscale x 1 x s64>)
    PseudoRET implicit $x10

...
---
name:            sub_nxv2s64
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $x10, $x11

    ; RV32I-LABEL: name: sub_nxv2s64
    ; RV32I: liveins: $x10, $x11
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:vrm2 = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vrm2 = COPY $x11
    ; RV32I-NEXT: [[DEF:%[0-9]+]]:vrm2 = IMPLICIT_DEF
    ; RV32I-NEXT: [[PseudoVSUB_VV_M2_:%[0-9]+]]:vrm2 = PseudoVSUB_VV_M2 [[DEF]], [[COPY]], [[COPY1]], -1, 6 /* e64 */, 3 /* ta, ma */
    ; RV32I-NEXT: $x10 = COPY [[PseudoVSUB_VV_M2_]]
    ; RV32I-NEXT: PseudoRET implicit $x10
    %0:vrb(<vscale x 2 x s64>) = COPY $x10
    %1:vrb(<vscale x 2 x s64>) = COPY $x11
    %2:vrb(<vscale x 2 x s64>) = G_SUB %0, %1
    $x10 = COPY %2(<vscale x 2 x s64>)
    PseudoRET implicit $x10

...
---
name:            sub_nxv4s64
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $x10, $x11

    ; RV32I-LABEL: name: sub_nxv4s64
    ; RV32I: liveins: $x10, $x11
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:vrm4 = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vrm4 = COPY $x11
    ; RV32I-NEXT: [[DEF:%[0-9]+]]:vrm4 = IMPLICIT_DEF
    ; RV32I-NEXT: [[PseudoVSUB_VV_M4_:%[0-9]+]]:vrm4 = PseudoVSUB_VV_M4 [[DEF]], [[COPY]], [[COPY1]], -1, 6 /* e64 */, 3 /* ta, ma */
    ; RV32I-NEXT: $x10 = COPY [[PseudoVSUB_VV_M4_]]
    ; RV32I-NEXT: PseudoRET implicit $x10
    %0:vrb(<vscale x 4 x s64>) = COPY $x10
    %1:vrb(<vscale x 4 x s64>) = COPY $x11
    %2:vrb(<vscale x 4 x s64>) = G_SUB %0, %1
    $x10 = COPY %2(<vscale x 4 x s64>)
    PseudoRET implicit $x10

...
---
name:            sub_nxv8s64
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $x10, $x11

    ; RV32I-LABEL: name: sub_nxv8s64
    ; RV32I: liveins: $x10, $x11
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:vrm8 = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vrm8 = COPY $x11
    ; RV32I-NEXT: [[DEF:%[0-9]+]]:vrm8 = IMPLICIT_DEF
    ; RV32I-NEXT: [[PseudoVSUB_VV_M8_:%[0-9]+]]:vrm8 = PseudoVSUB_VV_M8 [[DEF]], [[COPY]], [[COPY1]], -1, 6 /* e64 */, 3 /* ta, ma */
    ; RV32I-NEXT: $x10 = COPY [[PseudoVSUB_VV_M8_]]
    ; RV32I-NEXT: PseudoRET implicit $x10
    %0:vrb(<vscale x 8 x s64>) = COPY $x10
    %1:vrb(<vscale x 8 x s64>) = COPY $x11
    %2:vrb(<vscale x 8 x s64>) = G_SUB %0, %1
    $x10 = COPY %2(<vscale x 8 x s64>)
    PseudoRET implicit $x10

...
---

