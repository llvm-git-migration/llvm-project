; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 5

; RUN: llc -mtriple=riscv32 -mattr=+zfa -global-isel < %s \
; RUN: | FileCheck %s --check-prefixes=CHECK-ZFA-f32
; RUN: llc -mtriple=riscv64 -mattr=+zfa -global-isel < %s \
; RUN: | FileCheck %s --check-prefixes=CHECK-ZFA-f32


define float @fceil(float %a) {
; CHECK-ZFA-f32-LABEL: fceil:
; CHECK-ZFA-f32:       # %bb.0:
; CHECK-ZFA-f32-NEXT:    fround.s fa0, fa0, rup
; CHECK-ZFA-f32-NEXT:    ret
    %b = call float @llvm.ceil.f32(float %a)
    ret float %b
}

define float @ffloor(float %a) {
; CHECK-ZFA-f32-LABEL: ffloor:
; CHECK-ZFA-f32:       # %bb.0:
; CHECK-ZFA-f32-NEXT:    fround.s fa0, fa0, rdn
; CHECK-ZFA-f32-NEXT:    ret
    %b = call float @llvm.floor.f32(float %a)
    ret float %b
}

define float @frint(float %a) {
; CHECK-ZFA-f32-LABEL: frint:
; CHECK-ZFA-f32:       # %bb.0:
; CHECK-ZFA-f32-NEXT:    froundnx.s fa0, fa0
; CHECK-ZFA-f32-NEXT:    ret
    %b = call float @llvm.rint.f32(float %a)
    ret float %b
}

define float @fnearbyint(float %a) {
; CHECK-ZFA-f32-LABEL: fnearbyint:
; CHECK-ZFA-f32:       # %bb.0:
; CHECK-ZFA-f32-NEXT:    fround.s fa0, fa0
; CHECK-ZFA-f32-NEXT:    ret
    %b = call float @llvm.nearbyint.f32(float %a)
    ret float %b
}

define float @fround(float %a) {
; CHECK-ZFA-f32-LABEL: fround:
; CHECK-ZFA-f32:       # %bb.0:
; CHECK-ZFA-f32-NEXT:    fround.s fa0, fa0, rmm
; CHECK-ZFA-f32-NEXT:    ret
    %b = call float @llvm.round.f32(float %a)
    ret float %b
}

define float @fmaximum(float %a, float %b) {
; CHECK-ZFA-f32-LABEL: fmaximum:
; CHECK-ZFA-f32:       # %bb.0:
; CHECK-ZFA-f32-NEXT:    fmaxm.s fa0, fa0, fa1
; CHECK-ZFA-f32-NEXT:    ret
    %c = call float @llvm.maximum.f32(float %a, float %b)
    ret float %c
}

define float @fminimum(float %a, float %b) {
; CHECK-ZFA-f32-LABEL: fminimum:
; CHECK-ZFA-f32:       # %bb.0:
; CHECK-ZFA-f32-NEXT:    fminm.s fa0, fa0, fa1
; CHECK-ZFA-f32-NEXT:    ret
    %c = call float @llvm.minimum.f32(float %a, float %b)
    ret float %c
}

define float @froundeven(float %a) {
; CHECK-ZFA-f32-LABEL: froundeven:
; CHECK-ZFA-f32:       # %bb.0:
; CHECK-ZFA-f32-NEXT:    fround.s fa0, fa0, rne
; CHECK-ZFA-f32-NEXT:    ret
    %b = call float @llvm.roundeven.f32(float %a)
    ret float %b
}
