; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
;RUN: llc < %s -mtriple=riscv64 -mattr=+f -target-abi=lp64f \
;RUN:   | FileCheck %s --check-prefix=NOFUSION
;RUN: llc < %s -mtriple=riscv64 -mattr=+f,+lui-addi-fusion \
;RUN:   -target-abi=lp64f | FileCheck %s --check-prefix=FUSION
;RUN: llc < %s -mtriple=riscv64 -mattr=+f,+lui-addi-fusion,+use-postra-scheduler \
;RUN:   -target-abi=lp64f | FileCheck %s --check-prefixes=FUSION-POSTRA

define void @foo(i32 noundef signext %0, i32 noundef signext %1) {
; NOFUSION-LABEL: foo:
; NOFUSION:       # %bb.0:
; NOFUSION-NEXT:    lui a0, 3014
; NOFUSION-NEXT:    addiw a2, a0, 334
; NOFUSION-NEXT:    mv a0, a1
; NOFUSION-NEXT:    mv a1, a2
; NOFUSION-NEXT:    tail bar
;
; FUSION-LABEL: foo:
; FUSION:       # %bb.0:
; FUSION-NEXT:    lui a2, 3014
; FUSION-NEXT:    addiw a2, a2, 334
; FUSION-NEXT:    mv a0, a1
; FUSION-NEXT:    mv a1, a2
; FUSION-NEXT:    tail bar
;
; FUSION-POSTRA-LABEL: foo:
; FUSION-POSTRA:       # %bb.0:
; FUSION-POSTRA-NEXT:    lui a2, 3014
; FUSION-POSTRA-NEXT:    addiw a2, a2, 334
; FUSION-POSTRA-NEXT:    mv a0, a1
; FUSION-POSTRA-NEXT:    mv a1, a2
; FUSION-POSTRA-NEXT:    tail bar
  tail call void @bar(i32 noundef signext %1, i32 noundef signext 12345678)
  ret void
}

declare void @bar(i32 noundef signext, i32 noundef signext)
