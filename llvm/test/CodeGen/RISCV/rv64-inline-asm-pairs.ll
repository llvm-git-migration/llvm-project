; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 5
; RUN: llc -mtriple=riscv64 -verify-machineinstrs < %s \
; RUN:   | FileCheck %s

define i128 @test_Pr_wide_scalar_simple(i128 noundef %0) nounwind {
; CHECK-LABEL: test_Pr_wide_scalar_simple:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    #APP
; CHECK-NEXT:    # a2 <- a0
; CHECK-NEXT:    #NO_APP
; CHECK-NEXT:    mv a0, a2
; CHECK-NEXT:    mv a1, a3
; CHECK-NEXT:    ret
entry:
  %1 = call i128 asm sideeffect "/* $0 <- $1 */", "=&^Pr,^Pr"(i128 %0)
  ret i128 %1
}

define i64 @test_Pr_wide_scalar_with_ops(i64 noundef %0) nounwind {
; CHECK-LABEL: test_Pr_wide_scalar_with_ops:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    mv a1, a0
; CHECK-NEXT:    #APP
; CHECK-NEXT:    # a2 <- a0
; CHECK-NEXT:    #NO_APP
; CHECK-NEXT:    or a0, a2, a3
; CHECK-NEXT:    ret
entry:
  %1 = zext i64 %0 to i128
  %2 = shl i128 %1, 64
  %3 = or i128 %1, %2
  %4 = call i128 asm sideeffect "/* $0 <- $1 */", "=&^Pr,^Pr"(i128 %3)
  %5 = trunc i128 %4 to i64
  %6 = lshr i128 %4, 64
  %7 = trunc i128 %6 to i64
  %8 = or i64 %5, %7
  ret i64 %8
}
