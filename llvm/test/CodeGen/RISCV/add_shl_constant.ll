; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 5
; RUN: llc -mtriple=riscv32 -verify-machineinstrs < %s \
; RUN:   | FileCheck -check-prefix=RV32 %s
; RUN: llc -mtriple=riscv64 -verify-machineinstrs < %s \
; RUN:   | FileCheck -check-prefix=RV64 %s

define i32 @add_shl_oneUse(i32 %x, i32 %y) nounwind {
; RV32-LABEL: add_shl_oneUse:
; RV32:       # %bb.0:
; RV32-NEXT:    slli a0, a0, 3
; RV32-NEXT:    add a0, a0, a1
; RV32-NEXT:    addi a0, a0, 984
; RV32-NEXT:    ret
;
; RV64-LABEL: add_shl_oneUse:
; RV64:       # %bb.0:
; RV64-NEXT:    slli a0, a0, 3
; RV64-NEXT:    add a0, a0, a1
; RV64-NEXT:    addiw a0, a0, 984
; RV64-NEXT:    ret
  %add.0 = add i32 %x, 123
  %shl = shl i32 %add.0, 3
  %add.1 = add i32 %shl, %y
  ret i32 %add.1
}

define void @add_shl_addmoreOneUse_in_store(ptr %array1, i32 %a, i32 %b)  {
; RV32-LABEL: add_shl_addmoreOneUse_in_store:
; RV32:       # %bb.0: # %entry
; RV32-NEXT:    addi a3, a1, 5
; RV32-NEXT:    slli a4, a3, 2
; RV32-NEXT:    add a4, a0, a4
; RV32-NEXT:    sw a2, 0(a4)
; RV32-NEXT:    slli a1, a1, 2
; RV32-NEXT:    add a0, a0, a1
; RV32-NEXT:    sw a2, 24(a0)
; RV32-NEXT:    sw a3, 140(a0)
; RV32-NEXT:    ret
;
; RV64-LABEL: add_shl_addmoreOneUse_in_store:
; RV64:       # %bb.0: # %entry
; RV64-NEXT:    addiw a3, a1, 5
; RV64-NEXT:    slli a4, a3, 2
; RV64-NEXT:    add a4, a0, a4
; RV64-NEXT:    sw a2, 0(a4)
; RV64-NEXT:    sext.w a1, a1
; RV64-NEXT:    slli a1, a1, 2
; RV64-NEXT:    add a0, a0, a1
; RV64-NEXT:    sw a2, 24(a0)
; RV64-NEXT:    sw a3, 140(a0)
; RV64-NEXT:    ret
entry:
   %add = add nsw i32 %a, 5
  %arrayidx = getelementptr inbounds i32, ptr %array1, i32 %add
  store i32 %b, ptr %arrayidx
  %0 = getelementptr i32, ptr %array1, i32 %a
  %arrayidx3 = getelementptr i8, ptr %0, i32 24
  store i32 %b, ptr %arrayidx3
  %arrayidx5 = getelementptr i8, ptr %0, i32 140
  store i32 %add, ptr %arrayidx5
  ret void
}
