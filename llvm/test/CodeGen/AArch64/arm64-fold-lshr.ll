; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 4
; RUN: llc < %s -mtriple=aarch64 | FileCheck %s
;

define i32 @load_shr64(i64 %a, i64 %b, ptr %table) {
; CHECK-LABEL: load_shr64:
; CHECK:       // %bb.0: // %entry
; CHECK-NEXT:    ldr w0, [x2]
; CHECK-NEXT:    ret
entry:
  %mul = mul i64 %b, %a
  %shr = lshr i64 %mul, 64
  %arrayidx = getelementptr inbounds i32, ptr %table, i64 %shr
  %0 = load i32, ptr %arrayidx, align 4
  ret i32 %0
}

define i32 @load_shr63(i64 %a, i64 %b, ptr %table) {
; CHECK-LABEL: load_shr63:
; CHECK:       // %bb.0: // %entry
; CHECK-NEXT:    mul x8, x1, x0
; CHECK-NEXT:    lsr x8, x8, #61
; CHECK-NEXT:    and x8, x8, #0x4
; CHECK-NEXT:    ldr w0, [x2, x8]
; CHECK-NEXT:    ret
entry:
  %mul = mul i64 %b, %a
  %shr = lshr i64 %mul, 63
  %arrayidx = getelementptr inbounds i32, ptr %table, i64 %shr
  %0 = load i32, ptr %arrayidx, align 4
  ret i32 %0
}

define i32 @load_shr2(i64 %a, i64 %b, ptr %table) {
; CHECK-LABEL: load_shr2:
; CHECK:       // %bb.0: // %entry
; CHECK-NEXT:    mul x8, x1, x0
; CHECK-NEXT:    and x8, x8, #0xfffffffffffffffc
; CHECK-NEXT:    ldr w0, [x2, x8]
; CHECK-NEXT:    ret
entry:
  %mul = mul i64 %b, %a
  %shr = lshr i64 %mul, 2
  %arrayidx = getelementptr inbounds i32, ptr %table, i64 %shr
  %0 = load i32, ptr %arrayidx, align 4
  ret i32 %0
}

define i32 @load_shr1(i64 %a, i64 %b, ptr %table) {
; CHECK-LABEL: load_shr1:
; CHECK:       // %bb.0: // %entry
; CHECK-NEXT:    mul x8, x1, x0
; CHECK-NEXT:    lsl x8, x8, #1
; CHECK-NEXT:    and x8, x8, #0xfffffffffffffffc
; CHECK-NEXT:    ldr w0, [x2, x8]
; CHECK-NEXT:    ret
entry:
  %mul = mul i64 %b, %a
  %shr = lshr i64 %mul, 1
  %arrayidx = getelementptr inbounds i32, ptr %table, i64 %shr
  %0 = load i32, ptr %arrayidx, align 4
  ret i32 %0
}

define i32 @load_shl1(i64 %a, i64 %b, ptr %table) {
; CHECK-LABEL: load_shl1:
; CHECK:       // %bb.0: // %entry
; CHECK-NEXT:    lsl x8, x0, #3
; CHECK-NEXT:    ldr w0, [x2, x8]
; CHECK-NEXT:    ret
entry:
  %shl = shl i64 %a, 1
  %arrayidx = getelementptr inbounds i32, ptr %table, i64 %shl
  %0 = load i32, ptr %arrayidx, align 4
  ret i32 %0
}
