; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 5
; RUN: llc < %s -mtriple=arm64-linux-gnu | FileCheck %s
; This test is expected to fail.
; XFAIL:*

; Tests failure when we pass non-immediate args to @llvm.experiment.stackmap

define void @first_arg() {
; CHECK-LABEL: first_arg:
; CHECK:       // %bb.0: // %entry
; CHECK-NEXT:    stp x29, x30, [sp, #-16]! // 16-byte Folded Spill
; CHECK-NEXT:    mov x29, sp
; CHECK-NEXT:    .cfi_def_cfa w29, 16
; CHECK-NEXT:    .cfi_offset w30, -8
; CHECK-NEXT:    .cfi_offset w29, -16
; CHECK-NEXT:  .Ltmp0:
; CHECK-NEXT:    ldp x29, x30, [sp], #16 // 16-byte Folded Reload
; CHECK-NEXT:    ret
entry:
  ; First operand should be immediate
  %id = add i64 0, 0
  call void (i64, i32, ...) @llvm.experimental.stackmap(i64 %id, i32 0)
  ret void
}

define void @second_arg() {
; CHECK-LABEL: second_arg:
; CHECK:       // %bb.0: // %entry
; CHECK-NEXT:    stp x29, x30, [sp, #-16]! // 16-byte Folded Spill
; CHECK-NEXT:    mov x29, sp
; CHECK-NEXT:    .cfi_def_cfa w29, 16
; CHECK-NEXT:    .cfi_offset w30, -8
; CHECK-NEXT:    .cfi_offset w29, -16
; CHECK-NEXT:  .Ltmp1:
; CHECK-NEXT:    ldp x29, x30, [sp], #16 // 16-byte Folded Reload
; CHECK-NEXT:    ret
entry:
  ; Second operand should be immediate
  %numShadowByte = add i32 0, 0
  call void (i64, i32, ...) @llvm.experimental.stackmap(i64 1, i32 %numShadowByte)
  ret void
}

declare void @llvm.experimental.stackmap(i64, i32, ...)
