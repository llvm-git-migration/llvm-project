; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 4
; RUN: llc < %s | FileCheck %s
target triple = "aarch64-linux"

; Test lowering of 32-element active lane mask (the return statement implicitly
; creates a pair of extract_vector operations).

define <vscale x 32 x i1> @f0(i32 %i, i32 %n) #0 {
; CHECK-LABEL: f0:
; CHECK:       // %bb.0:
; CHECK-NEXT:    mov w8, w1
; CHECK-NEXT:    mov w9, w0
; CHECK-NEXT:    whilelo { p0.b, p1.b }, x9, x8
; CHECK-NEXT:    ret
    %r = call <vscale x 32 x i1> @llvm.get.active.lane.mask.nxv32i1.i32(i32 %i, i32 %n)
    ret <vscale x 32 x i1> %r
}

define <vscale x 32 x i1> @g0(i64 %i, i64 %n) #0 {
; CHECK-LABEL: g0:
; CHECK:       // %bb.0:
; CHECK-NEXT:    whilelo { p0.b, p1.b }, x0, x1
; CHECK-NEXT:    ret
    %r = call <vscale x 32 x i1> @llvm.get.active.lane.mask.nxv32i1.i64(i64 %i, i64 %n)
    ret <vscale x 32 x i1> %r
}

declare <vscale x 32 x i1> @llvm.get.active.lane.mask.nxv32i1.i32(i32, i32)
declare <vscale x 32 x i1> @llvm.get.active.lane.mask.nxv32i1.i64(i64, i64)

attributes #0 = { nounwind "target-features"="+sve2p1" }
