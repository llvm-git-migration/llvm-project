# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -mtriple aarch64 -run-pass=aarch64-prelegalizer-combiner -verify-machineinstrs %s -o - | FileCheck %s
# REQUIRES: asserts


---
name:            valid_freeze_icmp_with_no_const_src
tracksRegLiveness: true
legalized: true
body:             |
  bb.0:
    liveins: $w0, $w1

    ; CHECK-LABEL: name: valid_freeze_icmp_with_no_const_src
    ; CHECK: liveins: $w0, $w1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: %x:_(s32) = COPY $w0
    ; CHECK-NEXT: %y:_(s32) = COPY $w1
    ; CHECK-NEXT: [[FREEZE:%[0-9]+]]:_(s32) = G_FREEZE %x
    ; CHECK-NEXT: [[FREEZE1:%[0-9]+]]:_(s32) = G_FREEZE %y
    ; CHECK-NEXT: %freeze:_(s1) = G_ICMP intpred(eq), [[FREEZE]](s32), [[FREEZE1]]
    ; CHECK-NEXT: %zext:_(s32) = G_ZEXT %freeze(s1)
    ; CHECK-NEXT: $w0 = COPY %zext(s32)
    ; CHECK-NEXT: RET_ReallyLR implicit $w0
    %x:_(s32) = COPY $w0
    %y:_(s32) = COPY $w1
    %cmp:_(s1) = G_ICMP intpred(eq), %x:_(s32), %y:_
    %freeze:_(s1) = G_FREEZE %cmp
    %zext:_(s32) = G_ZEXT %freeze:_(s1)
    $w0 = COPY %zext
    RET_ReallyLR implicit $w0

...
---
name:            valid_freeze_icmp_with_1_const_src
tracksRegLiveness: true
legalized: true
body:             |
  bb.0:
    liveins: $w0

    ; CHECK-LABEL: name: valid_freeze_icmp_with_1_const_src
    ; CHECK: liveins: $w0
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: %x:_(s32) = COPY $w0
    ; CHECK-NEXT: %zero:_(s32) = G_CONSTANT i32 0
    ; CHECK-NEXT: [[FREEZE:%[0-9]+]]:_(s32) = G_FREEZE %x
    ; CHECK-NEXT: %freeze:_(s1) = G_ICMP intpred(eq), [[FREEZE]](s32), %zero
    ; CHECK-NEXT: %zext:_(s32) = G_ZEXT %freeze(s1)
    ; CHECK-NEXT: $w0 = COPY %zext(s32)
    ; CHECK-NEXT: RET_ReallyLR implicit $w0
    %x:_(s32) = COPY $w0
    %zero:_(s32) = G_CONSTANT i32 0
    %cmp:_(s1) = G_ICMP intpred(eq), %x:_(s32), %zero:_
    %freeze:_(s1) = G_FREEZE %cmp
    %zext:_(s32) = G_ZEXT %freeze:_(s1)
    $w0 = COPY %zext
    RET_ReallyLR implicit $w0

...

