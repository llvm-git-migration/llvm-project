# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -run-pass=aarch64-prelegalizer-combiner -verify-machineinstrs -mtriple aarch64-unknown-unknown %s -o - | FileCheck %s

---
name:            zext_trunc_nuw
body:             |
  bb.0:
    liveins: $w0, $w1
    ; CHECK-LABEL: name: zext_trunc_nuw
    ; CHECK: liveins: $w0, $w1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s64) = COPY $x0
    ; CHECK-NEXT: $x1 = COPY [[COPY]](s64)
    %0:_(s64) = COPY $x0
    %2:_(s32) = nuw G_TRUNC %0
    %3:_(s64) = G_ZEXT  %2
    $x1 = COPY %3
...
---
name:            zext_trunc_nsw
body:             |
  bb.0:
    liveins: $w0, $w1
    ; CHECK-LABEL: name: zext_trunc_nsw
    ; CHECK: liveins: $w0, $w1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s64) = COPY $x0
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s32) = nsw G_TRUNC [[COPY]](s64)
    ; CHECK-NEXT: [[ZEXT:%[0-9]+]]:_(s64) = G_ZEXT [[TRUNC]](s32)
    ; CHECK-NEXT: $x1 = COPY [[ZEXT]](s64)
    %0:_(s64) = COPY $x0
    %2:_(s32) = nsw G_TRUNC %0
    %3:_(s64) = G_ZEXT  %2
    $x1 = COPY %3
...
---
name:            zext_trunc
body:             |
  bb.0:
    liveins: $w0, $w1
    ; CHECK-LABEL: name: zext_trunc
    ; CHECK: liveins: $w0, $w1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s64) = COPY $x0
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s32) = G_TRUNC [[COPY]](s64)
    ; CHECK-NEXT: [[ZEXT:%[0-9]+]]:_(s64) = G_ZEXT [[TRUNC]](s32)
    ; CHECK-NEXT: $x1 = COPY [[ZEXT]](s64)
    %0:_(s64) = COPY $x0
    %2:_(s32) = G_TRUNC %0
    %3:_(s64) = G_ZEXT  %2
    $x1 = COPY %3
...
---
name:            zext_trunc_nuw_vector
body:             |
  bb.0:
    liveins: $w0, $w1
    ; CHECK-LABEL: name: zext_trunc_nuw_vector
    ; CHECK: liveins: $w0, $w1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s32) = COPY $w0
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s32) = COPY $w1
    ; CHECK-NEXT: %bv0:_(<4 x s32>) = G_BUILD_VECTOR [[COPY]](s32), [[COPY1]](s32), [[COPY]](s32), [[COPY1]](s32)
    ; CHECK-NEXT: $q0 = COPY %bv0(<4 x s32>)
    ; CHECK-NEXT: RET_ReallyLR implicit $w0
    %0:_(s32) = COPY $w0
    %1:_(s32) = COPY $w1
    %2:_(s32) = COPY $w2
    %3:_(s32) = COPY $w3
    %bv0:_(<4 x s32>) = G_BUILD_VECTOR %0:_(s32), %1:_(s32), %0:_(s32), %1:_(s32)
    %trunc:_(<4 x s16>) = nuw G_TRUNC %bv0
    %zext:_(<4 x s32>) = G_ZEXT  %trunc
    $q0 = COPY %zext(<4 x s32>)
    RET_ReallyLR implicit $w0
...
---
name:            sext_trunc_nsw
body:             |
  bb.0:
    liveins: $w0, $w1
    ; CHECK-LABEL: name: sext_trunc_nsw
    ; CHECK: liveins: $w0, $w1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s64) = COPY $x0
    ; CHECK-NEXT: $x1 = COPY [[COPY]](s64)
    %0:_(s64) = COPY $x0
    %2:_(s32) = nsw G_TRUNC %0
    %3:_(s64) = G_SEXT  %2
    $x1 = COPY %3
...
---
name:            sext_trunc_nuw
body:             |
  bb.0:
    liveins: $w0, $w1
    ; CHECK-LABEL: name: sext_trunc_nuw
    ; CHECK: liveins: $w0, $w1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s64) = COPY $x0
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s32) = nuw G_TRUNC [[COPY]](s64)
    ; CHECK-NEXT: [[SEXT:%[0-9]+]]:_(s64) = G_SEXT [[TRUNC]](s32)
    ; CHECK-NEXT: $x1 = COPY [[SEXT]](s64)
    %0:_(s64) = COPY $x0
    %2:_(s32) = nuw G_TRUNC %0
    %3:_(s64) = G_SEXT  %2
    $x1 = COPY %3
...
---
name:            sext_trunc
body:             |
  bb.0:
    liveins: $w0, $w1
    ; CHECK-LABEL: name: sext_trunc
    ; CHECK: liveins: $w0, $w1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s64) = COPY $x0
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s32) = G_TRUNC [[COPY]](s64)
    ; CHECK-NEXT: [[SEXT:%[0-9]+]]:_(s64) = G_SEXT [[TRUNC]](s32)
    ; CHECK-NEXT: $x1 = COPY [[SEXT]](s64)
    %0:_(s64) = COPY $x0
    %2:_(s32) = G_TRUNC %0
    %3:_(s64) = G_SEXT  %2
    $x1 = COPY %3
...
---
name:            sext_trunc_nsw_types_wrong
body:             |
  bb.0:
    liveins: $w0, $w1
    ; CHECK-LABEL: name: sext_trunc_nsw_types_wrong
    ; CHECK: liveins: $w0, $w1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s64) = COPY $x0
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s16) = nsw G_TRUNC [[COPY]](s64)
    ; CHECK-NEXT: [[SEXT:%[0-9]+]]:_(s32) = G_SEXT [[TRUNC]](s16)
    ; CHECK-NEXT: $w1 = COPY [[SEXT]](s32)
    %0:_(s64) = COPY $x0
    %2:_(s16) = nsw G_TRUNC %0
    %3:_(s32) = G_SEXT  %2
    $w1 = COPY %3
...
---
name:            sext_trunc_nsw_nuw
body:             |
  bb.0:
    liveins: $w0, $w1
    ; CHECK-LABEL: name: sext_trunc_nsw_nuw
    ; CHECK: liveins: $w0, $w1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s64) = COPY $x0
    ; CHECK-NEXT: $x1 = COPY [[COPY]](s64)
    %0:_(s64) = COPY $x0
    %2:_(s32) = nsw nuw G_TRUNC %0
    %3:_(s64) = G_SEXT  %2
    $x1 = COPY %3
...
