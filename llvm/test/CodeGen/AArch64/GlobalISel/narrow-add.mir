# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py UTC_ARGS: --version 2
# RUN: llc -mtriple aarch64 -global-isel -run-pass=aarch64-prelegalizer-combiner -verify-machineinstrs %s -o - | FileCheck %s

---
name:            add_s128_unknown_bits
body:             |
  bb.0:
    liveins: $q0, $q1
    ; CHECK-LABEL: name: add_s128_unknown_bits
    ; CHECK: liveins: $q0, $q1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: %lhs:_(s128) = COPY $q0
    ; CHECK-NEXT: %rhs:_(s128) = COPY $q1
    ; CHECK-NEXT: %res:_(s128) = G_ADD %lhs, %rhs
    ; CHECK-NEXT: $q0 = COPY %res(s128)
    %lhs:_(s128) = COPY $q0
    %rhs:_(s128) = COPY $q1
    %res:_(s128) = G_ADD %lhs, %rhs
    $q0 = COPY %res(s128)
...

---
name:            add_s64_low32_known_zero_bits
body:             |
  bb.0:
    liveins: $x0, $x1
    ; CHECK-LABEL: name: add_s64_low32_known_zero_bits
    ; CHECK: liveins: $x0, $x1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: %a:_(s64) = COPY $x0
    ; CHECK-NEXT: %rhs:_(s64) = COPY $x1
    ; CHECK-NEXT: %mask:_(s64) = G_CONSTANT i64 -4294967296
    ; CHECK-NEXT: %lhs:_(s64) = G_AND %a, %mask
    ; CHECK-NEXT: %res:_(s64) = G_ADD %lhs, %rhs
    ; CHECK-NEXT: $x0 = COPY %res(s64)
    %a:_(s64) = COPY $x0
    %rhs:_(s64) = COPY $x1
    %mask:_(s64) = G_CONSTANT i64 -4294967296
    %lhs:_(s64) = G_AND %a, %mask
    %res:_(s64) = G_ADD %lhs, %rhs
    $x0 = COPY %res(s64)
...

---
name:            add_s128_low64_known_nonzero_bits
body:             |
  bb.0:
    liveins: $q0, $q1
    ; CHECK-LABEL: name: add_s128_low64_known_nonzero_bits
    ; CHECK: liveins: $q0, $q1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: %a:_(s128) = COPY $q0
    ; CHECK-NEXT: %rhs:_(s128) = COPY $q1
    ; CHECK-NEXT: %mask:_(s128) = G_CONSTANT i128 18446744073709551615
    ; CHECK-NEXT: %lhs:_(s128) = G_OR %a, %mask
    ; CHECK-NEXT: %res:_(s128) = G_ADD %lhs, %rhs
    ; CHECK-NEXT: $q0 = COPY %res(s128)
    %a:_(s128) = COPY $q0
    %rhs:_(s128) = COPY $q1
    %mask:_(s128) = G_CONSTANT i128 18446744073709551615
    %lhs:_(s128) = G_OR %a, %mask
    %res:_(s128) = G_ADD %lhs, %rhs
    $q0 = COPY %res(s128)
...

---
name:            add_s128_lhs_low64_known_zero_bits
body:             |
  bb.0:
    liveins: $q0, $q1
    ; CHECK-LABEL: name: add_s128_lhs_low64_known_zero_bits
    ; CHECK: liveins: $q0, $q1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: %a:_(s128) = COPY $q0
    ; CHECK-NEXT: %rhs:_(s128) = COPY $q1
    ; CHECK-NEXT: %mask:_(s128) = G_CONSTANT i128 -18446744073709551616
    ; CHECK-NEXT: %lhs:_(s128) = G_AND %a, %mask
    ; CHECK-NEXT: [[UV:%[0-9]+]]:_(s64), [[UV1:%[0-9]+]]:_(s64) = G_UNMERGE_VALUES %lhs(s128)
    ; CHECK-NEXT: [[UV2:%[0-9]+]]:_(s64), [[UV3:%[0-9]+]]:_(s64) = G_UNMERGE_VALUES %rhs(s128)
    ; CHECK-NEXT: [[ADD:%[0-9]+]]:_(s64) = G_ADD [[UV1]], [[UV3]]
    ; CHECK-NEXT: %res:_(s128) = G_MERGE_VALUES [[UV2]](s64), [[ADD]](s64)
    ; CHECK-NEXT: $q0 = COPY %res(s128)
    %a:_(s128) = COPY $q0
    %rhs:_(s128) = COPY $q1
    %mask:_(s128) = G_CONSTANT i128 -18446744073709551616
    %lhs:_(s128) = G_AND %a, %mask
    %res:_(s128) = G_ADD %lhs, %rhs
    $q0 = COPY %res(s128)
...

---
name:            add_s128_rhs_low64_known_zero_bits
body:             |
  bb.0:
    liveins: $q0, $q1
    ; CHECK-LABEL: name: add_s128_rhs_low64_known_zero_bits
    ; CHECK: liveins: $q0, $q1
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: %lhs:_(s128) = COPY $q0
    ; CHECK-NEXT: %b:_(s128) = COPY $q1
    ; CHECK-NEXT: %mask:_(s128) = G_CONSTANT i128 -18446744073709551616
    ; CHECK-NEXT: %rhs:_(s128) = G_AND %b, %mask
    ; CHECK-NEXT: [[UV:%[0-9]+]]:_(s64), [[UV1:%[0-9]+]]:_(s64) = G_UNMERGE_VALUES %lhs(s128)
    ; CHECK-NEXT: [[UV2:%[0-9]+]]:_(s64), [[UV3:%[0-9]+]]:_(s64) = G_UNMERGE_VALUES %rhs(s128)
    ; CHECK-NEXT: [[ADD:%[0-9]+]]:_(s64) = G_ADD [[UV1]], [[UV3]]
    ; CHECK-NEXT: %res:_(s128) = G_MERGE_VALUES [[UV]](s64), [[ADD]](s64)
    ; CHECK-NEXT: $q0 = COPY %res(s128)
    %lhs:_(s128) = COPY $q0
    %b:_(s128) = COPY $q1
    %mask:_(s128) = G_CONSTANT i128 -18446744073709551616
    %rhs:_(s128) = G_AND %b, %mask
    %res:_(s128) = G_ADD %lhs, %rhs
    $q0 = COPY %res(s128)
...
