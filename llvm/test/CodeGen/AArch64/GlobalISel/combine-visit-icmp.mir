# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -o - -mtriple=aarch64-unknown-unknown -run-pass=aarch64-prelegalizer-combiner -verify-machineinstrs  %s | FileCheck %s --check-prefixes=CHECK

---
name:            test_icmp_of_eq_and_right_undef
body:             |
  bb.1:
    ; CHECK-LABEL: name: test_icmp_of_eq_and_right_undef
    ; CHECK: %res:_(s32) = G_IMPLICIT_DEF
    ; CHECK-NEXT: $w0 = COPY %res(s32)
    %lhs:_(s64) = COPY $x0
    %rhs:_(s64) = G_IMPLICIT_DEF
    %res:_(s32) = G_ICMP intpred(ne), %lhs(s64), %rhs
    $w0 = COPY %res(s32)
...
---
name:            test_icmp_of_not_eq_and_right_undef
body:             |
  bb.1:
    ; CHECK-LABEL: name: test_icmp_of_not_eq_and_right_undef
    ; CHECK: %res:_(s32) = G_CONSTANT i32 0
    ; CHECK-NEXT: $w0 = COPY %res(s32)
    %lhs:_(s64) = COPY $x0
    %rhs:_(s64) = G_IMPLICIT_DEF
    %res:_(s32) = G_ICMP intpred(ugt), %lhs(s64), %rhs
    $w0 = COPY %res(s32)
...
---
name:            test_icmp_of_is_eq_and_right_undef
body:             |
  bb.1:
    ; CHECK-LABEL: name: test_icmp_of_is_eq_and_right_undef
    ; CHECK: %res:_(s32) = G_IMPLICIT_DEF
    ; CHECK-NEXT: $w0 = COPY %res(s32)
    %lhs:_(s64) = COPY $x0
    %rhs:_(s64) = G_IMPLICIT_DEF
    %res:_(s32) = G_ICMP intpred(ne), %lhs(s64), %rhs
    $w0 = COPY %res(s32)
...
---
name:            test_icmp_of_eq_not_eq
body:             |
  bb.1:
    ; CHECK-LABEL: name: test_icmp_of_eq_not_eq
    ; CHECK: %res:_(s32) = G_CONSTANT i32 0
    ; CHECK-NEXT: $w0 = COPY %res(s32)
    %lhs:_(s64) = COPY $x0
    %rhs:_(s64) = COPY $x0
    %res:_(s32) = G_ICMP intpred(ugt), %lhs(s64), %lhs
    $w0 = COPY %res(s32)
...
---
name:            test_icmp_of_eq_is_eq
body:             |
  bb.1:
    ; CHECK-LABEL: name: test_icmp_of_eq_is_eq
    ; CHECK: %res:_(s32) = G_CONSTANT i32 1
    ; CHECK-NEXT: $w0 = COPY %res(s32)
    %lhs:_(s64) = COPY $x0
    %rhs:_(s64) = COPY $x0
    %res:_(s32) = G_ICMP intpred(eq), %lhs(s64), %lhs
    $w0 = COPY %res(s32)
...
---
name:            test_icmp_of_zext_and_zext
body:             |
  bb.1:
    ; CHECK-LABEL: name: test_icmp_of_zext_and_zext
    ; CHECK: %lhs1:_(s32) = COPY $w0
    ; CHECK-NEXT: %rhs1:_(s32) = COPY $w0
    ; CHECK-NEXT: %res:_(s32) = G_ICMP intpred(ugt), %lhs1(s32), %rhs1
    ; CHECK-NEXT: $w0 = COPY %res(s32)
    %lhs1:_(s32) = COPY $w0
    %rhs1:_(s32) = COPY $w0
    %lhs:_(s64) = G_ZEXT %lhs1
    %rhs:_(s64) = G_ZEXT %rhs1
    %res:_(s32) = G_ICMP intpred(sgt), %lhs(s64), %rhs
    $w0 = COPY %res(s32)
...
---
name:            test_icmp_of_sext_and_sext
body:             |
  bb.1:
    ; CHECK-LABEL: name: test_icmp_of_sext_and_sext
    ; CHECK: %lhs1:_(s32) = COPY $w0
    ; CHECK-NEXT: %rhs1:_(s32) = COPY $w0
    ; CHECK-NEXT: %res:_(s32) = G_ICMP intpred(sgt), %lhs1(s32), %rhs1
    ; CHECK-NEXT: $w0 = COPY %res(s32)
    %lhs1:_(s32) = COPY $w0
    %rhs1:_(s32) = COPY $w0
    %lhs:_(s64) = G_SEXT %lhs1
    %rhs:_(s64) = G_SEXT %rhs1
    %res:_(s32) = G_ICMP intpred(sgt), %lhs(s64), %rhs
    $w0 = COPY %res(s32)
...
---
name:            test_ugt_icmp_of_sext_and_sext
body:             |
  bb.1:
    ; CHECK-LABEL: name: test_ugt_icmp_of_sext_and_sext
    ; CHECK: %lhs1:_(s32) = COPY $w0
    ; CHECK-NEXT: %rhs1:_(s32) = COPY $w0
    ; CHECK-NEXT: %res:_(s32) = G_ICMP intpred(ugt), %lhs1(s32), %rhs1
    ; CHECK-NEXT: $w0 = COPY %res(s32)
    %lhs1:_(s32) = COPY $w0
    %rhs1:_(s32) = COPY $w0
    %lhs:_(s64) = G_SEXT %lhs1
    %rhs:_(s64) = G_SEXT %rhs1
    %res:_(s32) = G_ICMP intpred(ugt), %lhs(s64), %rhs
    $w0 = COPY %res(s32)
...
---
name:            test_uge_icmp_of_zero
body:             |
  bb.1:
    ; CHECK-LABEL: name: test_uge_icmp_of_zero
    ; CHECK: %res:_(s32) = G_CONSTANT i32 1
    ; CHECK-NEXT: $w0 = COPY %res(s32)
    %lhs:_(s64) = COPY $x0
    %zero:_(s64) = G_CONSTANT i64 0
    %res:_(s32) = G_ICMP intpred(uge), %lhs(s64), %zero
    $w0 = COPY %res(s32)
...
---
name:            test_slt_icmp_of_zero
body:             |
  bb.1:
    ; CHECK-LABEL: name: test_slt_icmp_of_zero
    ; CHECK: %lhs:_(s64) = COPY $x0
    ; CHECK-NEXT: %zero:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: %res:_(s32) = G_ICMP intpred(slt), %lhs(s64), %zero
    ; CHECK-NEXT: $w0 = COPY %res(s32)
    %lhs:_(s64) = COPY $x0
    %zero:_(s64) = G_CONSTANT i64 0
    %res:_(s32) = G_ICMP intpred(slt), %lhs(s64), %zero
    $w0 = COPY %res(s32)
...
---
name:            test_ugt_icmp_of_zero_known_non_zero
body:             |
  bb.1:
    ; CHECK-LABEL: name: test_ugt_icmp_of_zero_known_non_zero
    ; CHECK: %res:_(s32) = G_CONSTANT i32 0
    ; CHECK-NEXT: $w0 = COPY %res(s32)
    %amount:_(s64) = COPY $x0
    %zero:_(s64) = G_CONSTANT i64 0
    %lhs:_(s64) =  G_SHL %zero, %amount
    %res:_(s32) = G_ICMP intpred(ugt), %lhs(s64), %zero
    $w0 = COPY %res(s32)
...
---
name:            test_ugt_icmp_of_zero_xor
body:             |
  bb.1:
    ; CHECK-LABEL: name: test_ugt_icmp_of_zero_xor
    ; CHECK: %x:_(s64) = COPY $x0
    ; CHECK-NEXT: %y:_(s64) = COPY $x0
    ; CHECK-NEXT: %zero:_(s64) = G_CONSTANT i64 0
    ; CHECK-NEXT: %lhs:_(s64) = G_XOR %x, %y
    ; CHECK-NEXT: %res:_(s32) = G_ICMP intpred(ugt), %lhs(s64), %zero
    ; CHECK-NEXT: $w0 = COPY %res(s32)
    %x:_(s64) = COPY $x0
    %y:_(s64) = COPY $x0
    %zero:_(s64) = G_CONSTANT i64 0
    %lhs:_(s64) =  G_XOR %x, %y
    %res:_(s32) = G_ICMP intpred(ugt), %lhs(s64), %zero
    $w0 = COPY %res(s32)
