; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 5
; RUN: opt -S -passes='dxil-flatten-arrays,dxil-op-lower' -mtriple=dxil-pc-shadermodel6.3-library %s | FileCheck %s


@_ZL7Palette = internal constant [2 x [3 x float]] [[3 x float] zeroinitializer, [3 x float] undef], align 16

; CHECK: @_ZL7Palette.1dim = internal constant [6 x float] [float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float undef, float undef, float undef], align 16

define internal void @_Z4mainDv3_j(<3 x i32> noundef %DID) {
; CHECK-LABEL: define internal void @_Z4mainDv3_j(
; CHECK-SAME: <3 x i32> noundef [[DID:%.*]]) {
; CHECK-NEXT:  [[ENTRY:.*:]]
; CHECK-NEXT:    [[TMP0:%.*]] = getelementptr [24 x float], ptr @_ZL7Palette.1dim, i32 1
; CHECK-NEXT:    [[DOTI0:%.*]] = load float, ptr [[TMP0]], align 16
; CHECK-NEXT:    [[TMP1:%.*]] = getelementptr [24 x float], ptr @_ZL7Palette.1dim, i32 2
; CHECK-NEXT:    [[DOTI03:%.*]] = load float, ptr [[TMP1]], align 16
; CHECK-NEXT:    ret void
;
entry:
  %0 = getelementptr [8 x [3 x float]], ptr @_ZL7Palette, i32 0, i32 1
  %.i0 = load float, ptr %0, align 16
  %1 = getelementptr [8 x [3 x float]], ptr @_ZL7Palette, i32 0, i32 2
  %.i03 = load float, ptr %1, align 16
  ret void
}
