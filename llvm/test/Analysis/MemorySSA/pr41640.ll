; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 5
; RUN: opt -disable-output -passes='loop-mssa(licm),print<memoryssa>' < %s 2>&1 | FileCheck %s
target datalayout = "E-m:e-i1:8:16-i8:8:16-i64:64-f128:64-v128:64-a:8:16-n32:64"
target triple = "s390x-ibm-linux"

@g_248 = external dso_local local_unnamed_addr global i32, align 4
@g_976 = external dso_local global i64, align 8
@g_1087 = external dso_local global ptr, align 8

define dso_local fastcc void @f1(i1 %arg) unnamed_addr #0 {
; CHECK-LABEL: define dso_local fastcc void @f1(
; CHECK-SAME: i1 [[ARG:%.*]]) unnamed_addr #[[ATTR0:[0-9]+]] {
; CHECK-NEXT:  [[LABEL0:.*:]]
; CHECK-NEXT:    br i1 [[ARG]], label %[[THREAD_PRE_SPLIT_I_PREHEADER:.*]], label %[[LABEL5:.*]]
; CHECK:       [[THREAD_PRE_SPLIT_I_PREHEADER]]:
; CHECK:         [[G_248_PROMOTED:%.*]] = load i32, ptr @g_248, align 4
; CHECK-NEXT:    br label %[[THREAD_PRE_SPLIT_I:.*]]
; CHECK:       [[THREAD_PRE_SPLIT_I_US:.*]]:
; CHECK-NEXT:    br i1 [[ARG]], [[DOTPREHEADER_I_US_PREHEADER:label %.*]], label %[[LABEL2:.*]]
; CHECK:       [[_PREHEADER_I_US_PREHEADER:.*:]]
; CHECK-NEXT:    br [[DOTPREHEADER_I_US:label %.*]]
; CHECK:       [[_PREHEADER_I_US:.*:]]
; CHECK-NEXT:    br i1 [[ARG]], [[DOTLR_PH_I_US:label %.*]], [[DOT_CRIT_EDGE_I_US:label %.*]]
; CHECK:       [[_LR_PH_I_US:.*:]]
; CHECK-NEXT:    br label %[[LABEL1:.*]]
; CHECK:       [[LABEL1]]:
; CHECK-NEXT:    br i1 [[ARG]], label %[[LABEL1]], [[DOT_CRIT_EDGE_I_US]]
; CHECK:       [[__CRIT_EDGE_I_US:.*:]]
; CHECK-NEXT:    br i1 [[ARG]], [[DOTPREHEADER_I_US]], [[DOT_CRIT_EDGE5_I_US:label %.*]]
; CHECK:       [[__CRIT_EDGE5_I_US:.*:]]
; CHECK-NEXT:    br label %[[LABEL2]]
; CHECK:       [[LABEL2]]:
; CHECK:         tail call void @foo16()
; CHECK-NEXT:    br i1 [[ARG]], [[DOTLR_PH8_I_US_PREHEADER:label %.*]], label %[[LABEL4:.*]]
; CHECK:       [[_LR_PH8_I_US_PREHEADER:.*:]]
; CHECK-NEXT:    br [[DOTLR_PH8_I_US:label %.*]]
; CHECK:       [[_LR_PH8_I_US:.*:]]
; CHECK:         [[TMP3:%.*]] = load volatile i64, ptr @g_976, align 8
; CHECK-NEXT:    br i1 [[ARG]], [[DOTLR_PH8_I_US]], [[DOT_CRIT_EDGE9_I_US:label %.*]]
; CHECK:       [[__CRIT_EDGE9_I_US:.*:]]
; CHECK-NEXT:    br label %[[LABEL4]]
; CHECK:       [[LABEL4]]:
; CHECK-NEXT:    br i1 true, label %[[F9_EXIT:.*]], [[DOTCRITEDGE1_I_US:label %.*]]
; CHECK:       [[_CRITEDGE1_I_US:.*:]]
; CHECK-NEXT:    br i1 [[ARG]], label %[[THREAD_PRE_SPLIT_I_US]], label %[[F9_EXIT]]
; CHECK:       [[LABEL5]]:
; CHECK-NEXT:    unreachable
; CHECK:       [[THREAD_PRE_SPLIT_I]]:
; CHECK:         [[TMP81:%.*]] = phi i32 [ [[TMP8:%.*]], %[[DOTCRITEDGE1_I:.*]] ], [ [[G_248_PROMOTED]], %[[THREAD_PRE_SPLIT_I_PREHEADER]] ]
; CHECK-NEXT:    br i1 [[ARG]], [[DOTPREHEADER_I_PREHEADER:label %.*]], label %[[DOTCRITEDGE1_I]]
; CHECK:       [[_PREHEADER_I_PREHEADER:.*:]]
; CHECK-NEXT:    br [[DOTPREHEADER_I:label %.*]]
; CHECK:       [[_PREHEADER_I:.*:]]
; CHECK-NEXT:    br i1 [[ARG]], [[DOTLR_PH_I:label %.*]], [[DOT_CRIT_EDGE_I:label %.*]]
; CHECK:       [[_LR_PH_I:.*:]]
; CHECK-NEXT:    br label %[[LABEL6:.*]]
; CHECK:       [[LABEL6]]:
; CHECK-NEXT:    br i1 [[ARG]], label %[[LABEL6]], [[DOT_CRIT_EDGE_I_LOOPEXIT:label %.*]]
; CHECK:       [[__CRIT_EDGE_I_LOOPEXIT:.*:]]
; CHECK-NEXT:    br [[DOT_CRIT_EDGE_I]]
; CHECK:       [[__CRIT_EDGE_I:.*:]]
; CHECK-NEXT:    br i1 [[ARG]], [[DOTPREHEADER_I]], [[DOT_CRIT_EDGE5_I:label %.*]]
; CHECK:       [[__CRIT_EDGE5_I:.*:]]
; CHECK-NEXT:    br label %[[DOTCRITEDGE1_I]]
; CHECK:       [[_CRITEDGE1_I:.*:]]
; CHECK-NEXT:    [[TMP8]] = xor i32 [[TMP81]], 55987
; CHECK-NEXT:    br i1 [[ARG]], label %[[THREAD_PRE_SPLIT_I]], label %[[F9_EXIT_LOOPEXIT:.*]]
; CHECK:       [[F9_EXIT_LOOPEXIT]]:
; CHECK-NEXT:    [[TMP8_LCSSA:%.*]] = phi i32 [ [[TMP8]], %[[DOTCRITEDGE1_I]] ]
; CHECK:         store i32 [[TMP8_LCSSA]], ptr @g_248, align 4
; CHECK-NEXT:    br label %[[F9_EXIT]]
; CHECK:       [[F9_EXIT]]:
; CHECK:         [[TMP9:%.*]] = load volatile ptr, ptr @g_1087, align 8
; CHECK-NEXT:    ret void
;
label0:
  br i1 %arg, label %thread-pre-split.i.preheader, label %label5

thread-pre-split.i.preheader:                     ; preds = %label0
  br label %thread-pre-split.i

thread-pre-split.i.us:                            ; preds = %.critedge1.i.us
  br i1 %arg, label %.preheader.i.us.preheader, label %label2

.preheader.i.us.preheader:                        ; preds = %thread-pre-split.i.us
  br label %.preheader.i.us

.preheader.i.us:                                  ; preds = %._crit_edge.i.us, %.preheader.i.us.preheader
  br i1 %arg, label %.lr.ph.i.us, label %._crit_edge.i.us

.lr.ph.i.us:                                      ; preds = %.preheader.i.us
  br label %label1

label1:                                      ; preds = %label1, %.lr.ph.i.us
  br i1 %arg, label %label1, label %._crit_edge.i.us

._crit_edge.i.us:                                 ; preds = %label1, %.preheader.i.us
  br i1 %arg, label %.preheader.i.us, label %._crit_edge5.i.us

._crit_edge5.i.us:                                ; preds = %._crit_edge.i.us
  br label %label2

label2:                                  ; preds = %._crit_edge5.i.us, %thread-pre-split.i.us
  tail call void @foo16()
  br i1 %arg, label %.lr.ph8.i.us.preheader, label %label4

.lr.ph8.i.us.preheader:                           ; preds = %label2
  br label %.lr.ph8.i.us

.lr.ph8.i.us:                                     ; preds = %.lr.ph8.i.us, %.lr.ph8.i.us.preheader
  %tmp3 = load volatile i64, ptr @g_976, align 8
  br i1 %arg, label %.lr.ph8.i.us, label %._crit_edge9.i.us

._crit_edge9.i.us:                                ; preds = %.lr.ph8.i.us
  br label %label4

label4:                                      ; preds = %._crit_edge9.i.us, %label2
  br i1 true, label %f9.exit, label %.critedge1.i.us

.critedge1.i.us:                                  ; preds = %label4
  br i1 %arg, label %thread-pre-split.i.us, label %f9.exit

label5:                                      ; preds = %label0
  unreachable

thread-pre-split.i:                               ; preds = %.critedge1.i, %thread-pre-split.i.preheader
  br i1 %arg, label %.preheader.i.preheader, label %.critedge1.i

.preheader.i.preheader:                           ; preds = %thread-pre-split.i
  br label %.preheader.i

.preheader.i:                                     ; preds = %._crit_edge.i, %.preheader.i.preheader
  br i1 %arg, label %.lr.ph.i, label %._crit_edge.i

.lr.ph.i:                                         ; preds = %.preheader.i
  br label %label6

label6:                                      ; preds = %label6, %.lr.ph.i
  br i1 %arg, label %label6, label %._crit_edge.i.loopexit

._crit_edge.i.loopexit:                           ; preds = %label6
  br label %._crit_edge.i

._crit_edge.i:                                    ; preds = %._crit_edge.i.loopexit, %.preheader.i
  br i1 %arg, label %.preheader.i, label %._crit_edge5.i

._crit_edge5.i:                                   ; preds = %._crit_edge.i
  br label %.critedge1.i

.critedge1.i:                                     ; preds = %._crit_edge5.i, %thread-pre-split.i
  %tmp7 = load i32, ptr @g_248, align 4
  %tmp8 = xor i32 %tmp7, 55987
  store i32 %tmp8, ptr @g_248, align 4
  br i1 %arg, label %thread-pre-split.i, label %f9.exit.loopexit

f9.exit.loopexit:                                 ; preds = %.critedge1.i
  br label %f9.exit

f9.exit:                                          ; preds = %f9.exit.loopexit, %.critedge1.i.us, %label4
  %tmp9 = load volatile ptr, ptr @g_1087, align 8
  ret void
}

declare dso_local void @foo16() local_unnamed_addr #1

attributes #0 = { "target-features"="+transactional-execution,+vector" }
attributes #1 = { "use-soft-float"="false" }
