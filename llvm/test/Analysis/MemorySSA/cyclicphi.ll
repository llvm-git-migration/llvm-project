; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 5
; RUN: opt -aa-pipeline=basic-aa -passes='print<memoryssa>,verify<memoryssa>' -disable-output < %s 2>&1 | FileCheck %s

%struct.hoge = type { i32, %struct.widget }
%struct.widget = type { i64 }

define hidden void @quux(ptr %f, i1 %arg) align 2 {
; CHECK-LABEL: define hidden void @quux(
; CHECK-SAME: ptr [[F:%.*]], i1 [[ARG:%.*]]) align 2 {
; CHECK-NEXT:    [[TMP:%.*]] = getelementptr inbounds [[STRUCT_HOGE:%.*]], ptr [[F]], i64 0, i32 1, i32 0
; CHECK-NEXT:    [[TMP24:%.*]] = getelementptr inbounds [[STRUCT_HOGE]], ptr [[F]], i64 0, i32 1
; CHECK-NEXT:    br label %[[BB26:.*]]
; CHECK:       [[BB26]]:
; CHECK:         br i1 [[ARG]], label %[[BB68:.*]], label %[[BB77:.*]]
; CHECK:       [[BB68]]:
; CHECK:         [[TMP69:%.*]] = load i64, ptr null, align 8
; CHECK:         store i64 [[TMP69]], ptr [[TMP]], align 8
; CHECK-NEXT:    br label %[[BB77]]
; CHECK:       [[BB77]]:
; CHECK:         [[TMP78:%.*]] = load ptr, ptr [[TMP24]], align 8
; CHECK-NEXT:    [[TMP79:%.*]] = getelementptr inbounds i64, ptr [[TMP78]], i64 undef
; CHECK-NEXT:    br label %[[BB26]]
;
  %tmp = getelementptr inbounds %struct.hoge, ptr %f, i64 0, i32 1, i32 0
  %tmp24 = getelementptr inbounds %struct.hoge, ptr %f, i64 0, i32 1
  br label %bb26

bb26:                                             ; preds = %bb77, %0
  br i1 %arg, label %bb68, label %bb77

bb68:                                             ; preds = %bb26
  %tmp69 = load i64, ptr null, align 8
  store i64 %tmp69, ptr %tmp, align 8
  br label %bb77

bb77:                                             ; preds = %bb68, %bb26
  %tmp78 = load ptr, ptr %tmp24, align 8
  %tmp79 = getelementptr inbounds i64, ptr %tmp78, i64 undef
  br label %bb26
}

define hidden void @quux_no_null_opt(ptr %f, i1 %arg) align 2 #0 {
; CHECK-LABEL: define hidden void @quux_no_null_opt(
; CHECK-SAME: ptr [[F:%.*]], i1 [[ARG:%.*]]) #[[ATTR0:[0-9]+]] align 2 {
; CHECK-NEXT:    [[TMP:%.*]] = getelementptr inbounds [[STRUCT_HOGE:%.*]], ptr [[F]], i64 0, i32 1, i32 0
; CHECK-NEXT:    [[TMP24:%.*]] = getelementptr inbounds [[STRUCT_HOGE]], ptr [[F]], i64 0, i32 1
; CHECK-NEXT:    br label %[[BB26:.*]]
; CHECK:       [[BB26]]:
; CHECK:         br i1 [[ARG]], label %[[BB68:.*]], label %[[BB77:.*]]
; CHECK:       [[BB68]]:
; CHECK:         [[TMP69:%.*]] = load i64, ptr null, align 8
; CHECK:         store i64 [[TMP69]], ptr [[TMP]], align 8
; CHECK-NEXT:    br label %[[BB77]]
; CHECK:       [[BB77]]:
; CHECK:         [[TMP78:%.*]] = load ptr, ptr [[TMP24]], align 8
; CHECK-NEXT:    [[TMP79:%.*]] = getelementptr inbounds i64, ptr [[TMP78]], i64 undef
; CHECK-NEXT:    br label %[[BB26]]
;
  %tmp = getelementptr inbounds %struct.hoge, ptr %f, i64 0, i32 1, i32 0
  %tmp24 = getelementptr inbounds %struct.hoge, ptr %f, i64 0, i32 1
  br label %bb26

bb26:                                             ; preds = %bb77, %0
  br i1 %arg, label %bb68, label %bb77

bb68:                                             ; preds = %bb26
  %tmp69 = load i64, ptr null, align 8
  store i64 %tmp69, ptr %tmp, align 8
  br label %bb77

bb77:                                             ; preds = %bb68, %bb26
  %tmp78 = load ptr, ptr %tmp24, align 8
  %tmp79 = getelementptr inbounds i64, ptr %tmp78, i64 undef
  br label %bb26
}

define void @quux_skip(ptr noalias %f, ptr noalias %g, i1 %arg) align 2 {
; CHECK-LABEL: define void @quux_skip(
; CHECK-SAME: ptr noalias [[F:%.*]], ptr noalias [[G:%.*]], i1 [[ARG:%.*]]) align 2 {
; CHECK-NEXT:    [[TMP:%.*]] = getelementptr inbounds [[STRUCT_HOGE:%.*]], ptr [[F]], i64 0, i32 1, i32 0
; CHECK-NEXT:    [[TMP24:%.*]] = getelementptr inbounds [[STRUCT_HOGE]], ptr [[F]], i64 0, i32 1
; CHECK-NEXT:    br label %[[BB26:.*]]
; CHECK:       [[BB26]]:
; CHECK:         br i1 [[ARG]], label %[[BB68:.*]], label %[[BB77:.*]]
; CHECK:       [[BB68]]:
; CHECK:         [[TMP69:%.*]] = load i64, ptr [[G]], align 8
; CHECK:         store i64 [[TMP69]], ptr [[G]], align 8
; CHECK-NEXT:    br label %[[BB77]]
; CHECK:       [[BB77]]:
; CHECK:         [[TMP78:%.*]] = load ptr, ptr [[TMP24]], align 8
; CHECK-NEXT:    br label %[[BB26]]
;
  %tmp = getelementptr inbounds %struct.hoge, ptr %f, i64 0, i32 1, i32 0
  %tmp24 = getelementptr inbounds %struct.hoge, ptr %f, i64 0, i32 1
  br label %bb26

bb26:                                             ; preds = %bb77, %0
  br i1 %arg, label %bb68, label %bb77

bb68:                                             ; preds = %bb26
  %tmp69 = load i64, ptr %g, align 8
  store i64 %tmp69, ptr %g, align 8
  br label %bb77

bb77:                                             ; preds = %bb68, %bb26
  %tmp78 = load ptr, ptr %tmp24, align 8
  br label %bb26
}

define void @quux_dominated(ptr noalias %f, ptr noalias %g, i1 %arg) align 2 {
; CHECK-LABEL: define void @quux_dominated(
; CHECK-SAME: ptr noalias [[F:%.*]], ptr noalias [[G:%.*]], i1 [[ARG:%.*]]) align 2 {
; CHECK-NEXT:    [[TMP:%.*]] = getelementptr inbounds [[STRUCT_HOGE:%.*]], ptr [[F]], i64 0, i32 1, i32 0
; CHECK-NEXT:    [[TMP24:%.*]] = getelementptr inbounds [[STRUCT_HOGE]], ptr [[F]], i64 0, i32 1
; CHECK-NEXT:    br label %[[BB26:.*]]
; CHECK:       [[BB26]]:
; CHECK:         [[TMP1:%.*]] = load ptr, ptr [[TMP24]], align 8
; CHECK-NEXT:    br i1 [[ARG]], label %[[BB68:.*]], label %[[BB77:.*]]
; CHECK:       [[BB68]]:
; CHECK:         [[TMP69:%.*]] = load i64, ptr [[G]], align 8
; CHECK:         store i64 [[TMP69]], ptr [[G]], align 8
; CHECK-NEXT:    br label %[[BB77]]
; CHECK:       [[BB77]]:
; CHECK:         store ptr null, ptr [[TMP24]], align 8
; CHECK-NEXT:    br label %[[BB26]]
;
  %tmp = getelementptr inbounds %struct.hoge, ptr %f, i64 0, i32 1, i32 0
  %tmp24 = getelementptr inbounds %struct.hoge, ptr %f, i64 0, i32 1
  br label %bb26

bb26:                                             ; preds = %bb77, %0
  load ptr, ptr %tmp24, align 8
  br i1 %arg, label %bb68, label %bb77

bb68:                                             ; preds = %bb26
  %tmp69 = load i64, ptr %g, align 8
  store i64 %tmp69, ptr %g, align 8
  br label %bb77

bb77:                                             ; preds = %bb68, %bb26
  store ptr null, ptr %tmp24, align 8
  br label %bb26
}

define void @quux_nodominate(ptr noalias %f, ptr noalias %g, i1 %arg) align 2 {
; CHECK-LABEL: define void @quux_nodominate(
; CHECK-SAME: ptr noalias [[F:%.*]], ptr noalias [[G:%.*]], i1 [[ARG:%.*]]) align 2 {
; CHECK-NEXT:    [[TMP:%.*]] = getelementptr inbounds [[STRUCT_HOGE:%.*]], ptr [[F]], i64 0, i32 1, i32 0
; CHECK-NEXT:    [[TMP24:%.*]] = getelementptr inbounds [[STRUCT_HOGE]], ptr [[F]], i64 0, i32 1
; CHECK-NEXT:    br label %[[BB26:.*]]
; CHECK:       [[BB26]]:
; CHECK:         [[TMP1:%.*]] = load ptr, ptr [[TMP24]], align 8
; CHECK-NEXT:    br i1 [[ARG]], label %[[BB68:.*]], label %[[BB77:.*]]
; CHECK:       [[BB68]]:
; CHECK:         [[TMP69:%.*]] = load i64, ptr [[G]], align 8
; CHECK:         store i64 [[TMP69]], ptr [[G]], align 8
; CHECK-NEXT:    br label %[[BB77]]
; CHECK:       [[BB77]]:
; CHECK:         br label %[[BB26]]
;
  %tmp = getelementptr inbounds %struct.hoge, ptr %f, i64 0, i32 1, i32 0
  %tmp24 = getelementptr inbounds %struct.hoge, ptr %f, i64 0, i32 1
  br label %bb26

bb26:                                             ; preds = %bb77, %0
  load ptr, ptr %tmp24, align 8
  br i1 %arg, label %bb68, label %bb77

bb68:                                             ; preds = %bb26
  %tmp69 = load i64, ptr %g, align 8
  store i64 %tmp69, ptr %g, align 8
  br label %bb77

bb77:                                             ; preds = %bb68, %bb26
  br label %bb26
}

attributes #0 = { null_pointer_is_valid }
