// -*- C++ -*-
//===----------------------------------------------------------------------===//
//
// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
//===----------------------------------------------------------------------===//

#ifndef _LIBCPP_EXPERIMENTAL_MATH
#define _LIBCPP_EXPERIMENTAL_MATH

// The following macro name shall be conditionally defined by the implementation
// to indicate conformance to the International Standard ISO/IEC JTC 1/SC 22/WG 21 N3060
//#define __STDCPP_MATH_SPEC_FUNCS__ 201003L

#include <experimental/__config>
#include <cmath>

#if _LIBCPP_STD_VER > 14

#include <experimental/__math/hermite.h>

_LIBCPP_BEGIN_NAMESPACE_EXPERIMENTAL


inline _LIBCPP_HIDE_FROM_ABI double hermite(unsigned __n, double __x)
{
    return __libcpp_hermite(__n, __x);
}
inline _LIBCPP_HIDE_FROM_ABI float hermitef(unsigned __n, float __x)
{
    // use double internally -- float is too prone to overflow!
    return static_cast<float>(__libcpp_hermite(__n, static_cast<double>(__x)));
}
inline _LIBCPP_HIDE_FROM_ABI long double hermitel(unsigned __n, long double __x)
{
    return __libcpp_hermite(__n, __x);
}


_LIBCPP_END_NAMESPACE_EXPERIMENTAL

#endif // _LIBCPP_STD_VER > 14

#endif // _LIBCPP_EXPERIMENTAL_MATH
