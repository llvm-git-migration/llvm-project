// -*- C++ -*-
//===----------------------------------------------------------------------===//
//
// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
//===----------------------------------------------------------------------===//

#ifndef _LIBCPP_DEBUGGING
#define _LIBCPP_DEBUGGING

/*
// all freestanding
namespace std {
  // [debugging.utility], utility
  void breakpoint() noexcept;
  void breakpoint_if_debugging() noexcept;
  bool is_debugger_present() noexcept;
}
*/

#include <__config>
#include <version>

#if !defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER)
#  pragma GCC system_header
#endif

_LIBCPP_BEGIN_NAMESPACE_STD

#if _LIBCPP_STD_VER >= 26 && defined(_LIBCPP_HAS_DEBUGGING)

_LIBCPP_EXPORTED_FROM_ABI void __breakpoint() noexcept;

_LIBCPP_EXPORTED_FROM_ABI bool __is_debugger_present() noexcept;

_LIBCPP_AVAILABILITY_DEBUGGING _LIBCPP_HIDE_FROM_ABI inline void breakpoint() noexcept { __breakpoint(); }

_LIBCPP_AVAILABILITY_DEBUGGING _LIBCPP_HIDE_FROM_ABI inline void breakpoint_if_debugging() noexcept {
  if (__is_debugger_present())
    __breakpoint();
}

_LIBCPP_AVAILABILITY_DEBUGGING _LIBCPP_HIDE_FROM_ABI inline bool is_debugger_present() noexcept {
  return __is_debugger_present();
}

#endif

_LIBCPP_END_NAMESPACE_STD

#endif // _LIBCPP_DEBUGGING
